{"ast":null,"code":"\"use client\";\n\n// src/use-button-group.ts\nimport { buttonGroup } from \"@nextui-org/theme\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useButtonGroup(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, buttonGroup.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    color = \"default\",\n    size = \"md\",\n    variant = \"solid\",\n    radius,\n    isDisabled = false,\n    disableAnimation = false,\n    disableRipple = false,\n    isIconOnly = false,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const classNames = useMemo(() => buttonGroup({\n    ...variantProps,\n    className\n  }), [...Object.values(variantProps), className]);\n  const context = useMemo(() => ({\n    size,\n    color,\n    variant,\n    radius,\n    isIconOnly,\n    isDisabled,\n    disableAnimation,\n    disableRipple,\n    fullWidth: !!(originalProps == null ? void 0 : originalProps.fullWidth)\n  }), [size, color, variant, radius, isDisabled, isIconOnly, disableAnimation, disableRipple, originalProps == null ? void 0 : originalProps.fullWidth]);\n  const getButtonGroupProps = useCallback(() => ({\n    role: \"group\",\n    ...otherProps\n  }), [otherProps]);\n  return {\n    Component,\n    children,\n    domRef,\n    context,\n    classNames,\n    getButtonGroupProps\n  };\n}\nexport { useButtonGroup };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}