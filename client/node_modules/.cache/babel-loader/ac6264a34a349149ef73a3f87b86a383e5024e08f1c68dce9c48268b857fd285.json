{"ast":null,"code":"import { Fragment as T, cloneElement as x, createElement as E, forwardRef as b, isValidElement as h } from \"react\";\nimport { classNames as F } from './class-names.js';\nimport { match as P } from './match.js';\nvar S = (a => (a[a.None = 0] = \"None\", a[a.RenderStrategy = 1] = \"RenderStrategy\", a[a.Static = 2] = \"Static\", a))(S || {}),\n  j = (e => (e[e.Unmount = 0] = \"Unmount\", e[e.Hidden = 1] = \"Hidden\", e))(j || {});\nfunction X({\n  ourProps: r,\n  theirProps: t,\n  slot: e,\n  defaultTag: a,\n  features: s,\n  visible: n = !0,\n  name: f\n}) {\n  let o = N(t, r);\n  if (n) return c(o, e, a, f);\n  let u = s != null ? s : 0;\n  if (u & 2) {\n    let {\n      static: l = !1,\n      ...p\n    } = o;\n    if (l) return c(p, e, a, f);\n  }\n  if (u & 1) {\n    let {\n      unmount: l = !0,\n      ...p\n    } = o;\n    return P(l ? 0 : 1, {\n      [0]() {\n        return null;\n      },\n      [1]() {\n        return c({\n          ...p,\n          hidden: !0,\n          style: {\n            display: \"none\"\n          }\n        }, e, a, f);\n      }\n    });\n  }\n  return c(o, e, a, f);\n}\nfunction c(r, t = {}, e, a) {\n  let {\n      as: s = e,\n      children: n,\n      refName: f = \"ref\",\n      ...o\n    } = g(r, [\"unmount\", \"static\"]),\n    u = r.ref !== void 0 ? {\n      [f]: r.ref\n    } : {},\n    l = typeof n == \"function\" ? n(t) : n;\n  \"className\" in o && o.className && typeof o.className == \"function\" && (o.className = o.className(t));\n  let p = {};\n  if (t) {\n    let i = !1,\n      m = [];\n    for (let [y, d] of Object.entries(t)) typeof d == \"boolean\" && (i = !0), d === !0 && m.push(y);\n    i && (p[\"data-headlessui-state\"] = m.join(\" \"));\n  }\n  if (s === T && Object.keys(R(o)).length > 0) {\n    if (!h(l) || Array.isArray(l) && l.length > 1) throw new Error(['Passing props on \"Fragment\"!', \"\", `The current component <${a} /> is rendering a \"Fragment\".`, \"However we need to passthrough the following props:\", Object.keys(o).map(d => `  - ${d}`).join(`\n`), \"\", \"You can apply a few solutions:\", ['Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".', \"Render a single element as the child so that we can forward the props onto that element.\"].map(d => `  - ${d}`).join(`\n`)].join(`\n`));\n    let i = l.props,\n      m = typeof (i == null ? void 0 : i.className) == \"function\" ? (...d) => F(i == null ? void 0 : i.className(...d), o.className) : F(i == null ? void 0 : i.className, o.className),\n      y = m ? {\n        className: m\n      } : {};\n    return x(l, Object.assign({}, N(l.props, R(g(o, [\"ref\"]))), p, u, w(l.ref, u.ref), y));\n  }\n  return E(s, Object.assign({}, g(o, [\"ref\"]), s !== T && u, s !== T && p), l);\n}\nfunction w(...r) {\n  return {\n    ref: r.every(t => t == null) ? void 0 : t => {\n      for (let e of r) e != null && (typeof e == \"function\" ? e(t) : e.current = t);\n    }\n  };\n}\nfunction N(...r) {\n  var a;\n  if (r.length === 0) return {};\n  if (r.length === 1) return r[0];\n  let t = {},\n    e = {};\n  for (let s of r) for (let n in s) n.startsWith(\"on\") && typeof s[n] == \"function\" ? ((a = e[n]) != null || (e[n] = []), e[n].push(s[n])) : t[n] = s[n];\n  if (t.disabled || t[\"aria-disabled\"]) return Object.assign(t, Object.fromEntries(Object.keys(e).map(s => [s, void 0])));\n  for (let s in e) Object.assign(t, {\n    [s](n, ...f) {\n      let o = e[s];\n      for (let u of o) {\n        if ((n instanceof Event || (n == null ? void 0 : n.nativeEvent) instanceof Event) && n.defaultPrevented) return;\n        u(n, ...f);\n      }\n    }\n  });\n  return t;\n}\nfunction D(r) {\n  var t;\n  return Object.assign(b(r), {\n    displayName: (t = r.displayName) != null ? t : r.name\n  });\n}\nfunction R(r) {\n  let t = Object.assign({}, r);\n  for (let e in t) t[e] === void 0 && delete t[e];\n  return t;\n}\nfunction g(r, t = []) {\n  let e = Object.assign({}, r);\n  for (let a of t) a in e && delete e[a];\n  return e;\n}\nexport { S as Features, j as RenderStrategy, R as compact, D as forwardRefWithAs, X as render };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}