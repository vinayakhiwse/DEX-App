{"ast":null,"code":"import { AbiFunctionNotFoundError, AbiFunctionOutputsNotFoundError } from '../../errors/abi.js';\nimport { encodeAbiParameters } from './encodeAbiParameters.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeFunctionResult';\nexport function encodeFunctionResult({\n  abi,\n  functionName,\n  result\n}) {\n  let abiItem = abi[0];\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      name: functionName\n    });\n    if (!abiItem) throw new AbiFunctionNotFoundError(functionName, {\n      docsPath: '/docs/contract/encodeFunctionResult'\n    });\n  }\n  if (abiItem.type !== 'function') throw new AbiFunctionNotFoundError(undefined, {\n    docsPath: '/docs/contract/encodeFunctionResult'\n  });\n  if (!abiItem.outputs) throw new AbiFunctionOutputsNotFoundError(abiItem.name, {\n    docsPath\n  });\n  let values = Array.isArray(result) ? result : [result];\n  if (abiItem.outputs.length === 0 && !values[0]) values = [];\n  return encodeAbiParameters(abiItem.outputs, values);\n}\n//# sourceMappingURL=encodeFunctionResult.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}