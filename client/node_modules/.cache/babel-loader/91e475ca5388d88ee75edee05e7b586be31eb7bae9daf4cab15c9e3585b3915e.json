{"ast":null,"code":"\"use client\";\n\n// src/table-checkbox-cell.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableCell, useTableSelectionCheckbox } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { Checkbox } from \"@nextui-org/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableCheckboxCell = forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    as,\n    className,\n    node,\n    rowKey,\n    slots,\n    state,\n    color,\n    disableAnimation,\n    checkboxesProps,\n    selectionMode,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"td\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const {\n    gridCellProps\n  } = useTableCell({\n    node\n  }, state, domRef);\n  const {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  const {\n    checkboxProps\n  } = useTableSelectionCheckbox({\n    key: (node == null ? void 0 : node.parentKey) || node.key\n  }, state);\n  const tdStyles = clsx(classNames == null ? void 0 : classNames.td, className, (_a = node.props) == null ? void 0 : _a.className);\n  const isSingleSelectionMode = selectionMode === \"single\";\n  const {\n    onChange,\n    ...otherCheckboxProps\n  } = checkboxProps;\n  const isRowSelected = state.selectionManager.isSelected(rowKey);\n  return /* @__PURE__ */jsx(Component, {\n    ref: domRef,\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-selected\": dataAttr(isRowSelected),\n    ...mergeProps(gridCellProps, focusProps, filterDOMProps(node.props, {\n      enabled: shouldFilterDOMProps\n    }), otherProps),\n    className: (_b = slots.td) == null ? void 0 : _b.call(slots, {\n      class: tdStyles\n    }),\n    children: isSingleSelectionMode ? /* @__PURE__ */jsx(VisuallyHidden, {\n      children: checkboxProps[\"aria-label\"]\n    }) : /* @__PURE__ */jsx(Checkbox, {\n      color,\n      disableAnimation,\n      onValueChange: onChange,\n      ...mergeProps(checkboxesProps, otherCheckboxProps)\n    })\n  });\n});\nTableCheckboxCell.displayName = \"NextUI.TableCheckboxCell\";\nvar table_checkbox_cell_default = TableCheckboxCell;\nexport { table_checkbox_cell_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}