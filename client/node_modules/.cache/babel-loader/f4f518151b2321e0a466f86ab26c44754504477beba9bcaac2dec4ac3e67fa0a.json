{"ast":null,"code":"\"use client\";\n\nimport { pagination_cursor_default } from \"./chunk-SDEB5NXU.mjs\";\nimport { pagination_item_default } from \"./chunk-PEGVCFUD.mjs\";\nimport { usePagination } from \"./chunk-G5VUENUN.mjs\";\n\n// src/pagination.tsx\nimport { useCallback } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { PaginationItemType } from \"@nextui-org/use-pagination\";\nimport { ChevronIcon, EllipsisIcon, ForwardIcon } from \"@nextui-org/shared-icons\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport { createElement } from \"react\";\nvar Pagination = forwardRef((props, ref) => {\n  const {\n    Component,\n    dotsJump,\n    slots,\n    classNames,\n    total,\n    range,\n    loop,\n    activePage,\n    disableCursorAnimation,\n    disableAnimation,\n    renderItem: renderItemProp,\n    onNext,\n    onPrevious,\n    setPage,\n    getItemAriaLabel,\n    getItemRef,\n    getBaseProps,\n    getWrapperProps,\n    getItemProps,\n    getCursorProps\n  } = usePagination({\n    ...props,\n    ref\n  });\n  const renderItem = useCallback((value, index) => {\n    const isBefore = index < range.indexOf(activePage);\n    if (renderItemProp && typeof renderItemProp === \"function\") {\n      return renderItemProp({\n        value,\n        index,\n        activePage,\n        isActive: value === activePage,\n        isPrevious: value === activePage - 1,\n        isNext: value === activePage + 1,\n        isFirst: value === 1,\n        isLast: value === total,\n        onNext,\n        onPrevious,\n        setPage,\n        ref: typeof value === \"number\" ? node => getItemRef(node, value) : void 0,\n        className: slots.item({\n          class: classNames == null ? void 0 : classNames.item\n        })\n      });\n    }\n    if (value === PaginationItemType.PREV) {\n      return /* @__PURE__ */jsx(pagination_item_default, {\n        className: slots.prev({\n          class: classNames == null ? void 0 : classNames.prev\n        }),\n        \"data-slot\": \"prev\",\n        getAriaLabel: getItemAriaLabel,\n        isDisabled: !loop && activePage === 1,\n        value,\n        onPress: onPrevious,\n        children: /* @__PURE__ */jsx(ChevronIcon, {})\n      }, PaginationItemType.PREV);\n    }\n    if (value === PaginationItemType.NEXT) {\n      return /* @__PURE__ */jsx(pagination_item_default, {\n        className: slots.next({\n          class: clsx(classNames == null ? void 0 : classNames.next)\n        }),\n        \"data-slot\": \"next\",\n        getAriaLabel: getItemAriaLabel,\n        isDisabled: !loop && activePage === total,\n        value,\n        onPress: onNext,\n        children: /* @__PURE__ */jsx(ChevronIcon, {\n          className: slots.chevronNext({\n            class: classNames == null ? void 0 : classNames.chevronNext\n          })\n        })\n      }, PaginationItemType.NEXT);\n    }\n    if (value === PaginationItemType.DOTS) {\n      return /* @__PURE__ */jsxs(pagination_item_default, {\n        className: slots.item({\n          class: clsx(classNames == null ? void 0 : classNames.item, \"group\")\n        }),\n        \"data-slot\": \"item\",\n        getAriaLabel: getItemAriaLabel,\n        value,\n        onPress: () => isBefore ? setPage(activePage - dotsJump >= 1 ? activePage - dotsJump : 1) : setPage(activePage + dotsJump <= total ? activePage + dotsJump : total),\n        children: [/* @__PURE__ */jsx(EllipsisIcon, {\n          className: slots == null ? void 0 : slots.ellipsis({\n            class: classNames == null ? void 0 : classNames.ellipsis\n          })\n        }), /* @__PURE__ */jsx(ForwardIcon, {\n          className: slots == null ? void 0 : slots.forwardIcon({\n            class: classNames == null ? void 0 : classNames.forwardIcon\n          }),\n          \"data-before\": dataAttr(isBefore)\n        })]\n      }, PaginationItemType.DOTS + isBefore);\n    }\n    return /* @__PURE__ */createElement(pagination_item_default, {\n      ...getItemProps({\n        value\n      }),\n      key: value,\n      getAriaLabel: getItemAriaLabel\n    }, value);\n  }, [activePage, dotsJump, getItemProps, loop, range, renderItemProp, slots, classNames, total]);\n  return /* @__PURE__ */jsx(Component, {\n    ...getBaseProps(),\n    children: /* @__PURE__ */jsxs(\"ul\", {\n      ...getWrapperProps(),\n      children: [!disableCursorAnimation && !disableAnimation && /* @__PURE__ */jsx(pagination_cursor_default, {\n        ...getCursorProps()\n      }), range.map(renderItem)]\n    })\n  });\n});\nPagination.displayName = \"NextUI.Pagination\";\nvar pagination_default = Pagination;\nexport { pagination_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}