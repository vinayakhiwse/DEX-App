{"ast":null,"code":"import e, { useEffect as o, useRef as t, useState as r } from \"react\";\nimport i from \"../utils/with-defaults\";\nimport n from \"./tooltip-content\";\nimport l from \"../use-click-away\";\nimport { StyledTooltipTrigger as s } from \"./tooltip.styles\";\nimport { jsx as a } from \"react/jsx-runtime\";\nimport { jsxs as c } from \"react/jsx-runtime\";\nconst m = ({\n  children: e,\n  initialVisible: i,\n  content: m,\n  offset: u,\n  placement: d,\n  portalClassName: p,\n  enterDelay: f,\n  leaveDelay: h,\n  trigger: w,\n  rounded: b,\n  animated: g,\n  shadow: v,\n  className: C,\n  color: x,\n  contentColor: k,\n  onVisibleChange: y,\n  hideArrow: N,\n  css: j,\n  triggerCss: D,\n  onClick: M,\n  keepMounted: V,\n  visible: A,\n  ...T\n}) => {\n  const B = t(),\n    E = t(null),\n    [F, I] = r(i),\n    K = {\n      animated: g,\n      visible: F,\n      css: j,\n      shadow: v,\n      offset: u,\n      placement: d,\n      rounded: b,\n      color: x,\n      contentColor: k,\n      hideArrow: N,\n      parent: E,\n      className: p\n    },\n    L = e => {\n      const o = () => {\n          clearTimeout(B.current), B.current = void 0;\n        },\n        t = e => {\n          I(e), y(e), o();\n        };\n      o(), B.current = e ? window.setTimeout(() => t(!0), f) : window.setTimeout(() => t(!1), h);\n    },\n    S = e => {\n      \"hover\" === w && L(e);\n    };\n  return l(E, () => \"click\" === w && !V && L(!1)), o(() => {\n    void 0 !== A && L(A);\n  }, [A]), c(s, {\n    ref: E,\n    role: \"button\",\n    tabIndex: -1,\n    className: `nextui-tooltip-button ${C}`,\n    onClick: () => {\n      \"click\" === w && L(!F), null == M || M();\n    },\n    onKeyUp: () => S(!0),\n    onMouseEnter: () => S(!0),\n    onMouseLeave: () => S(!1),\n    onFocus: () => S(!0),\n    onBlur: () => S(!1),\n    css: {\n      ...D\n    },\n    ...T,\n    children: [e, m && a(n, {\n      ...K,\n      children: m\n    })]\n  });\n};\nm.toString = () => \".nextui-tooltip\";\nexport default i(m, {\n  initialVisible: !1,\n  hideArrow: !1,\n  animated: !0,\n  shadow: !0,\n  rounded: !1,\n  keepMounted: !1,\n  trigger: \"hover\",\n  enterDelay: 0,\n  leaveDelay: 0,\n  className: \"\",\n  portalClassName: \"\",\n  onVisibleChange: () => {}\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}