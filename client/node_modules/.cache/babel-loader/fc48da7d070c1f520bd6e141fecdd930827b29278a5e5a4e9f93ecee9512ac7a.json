{"ast":null,"code":"import e, { useImperativeHandle as o, useRef as t } from \"react\";\nimport { useTable as r } from \"@react-aria/table\";\nimport { useTableState as i } from \"@react-stately/table\";\nimport { Spacer as l } from \"../index\";\nimport a from \"./table-row-group\";\nimport n from \"./table-column-header\";\nimport s from \"./table-header-row\";\nimport c from \"./table-select-all-checkbox\";\nimport m from \"./table-pagination\";\nimport d from \"./table-footer\";\nimport h from \"./table-body\";\nimport { pickSingleChild as p } from \"../utils/collections\";\nimport { StyledTable as u, StyledTableContainer as b } from \"./table.styles\";\nimport f from \"./table-context\";\nimport { excludedTableProps as x } from \"../utils/prop-types\";\nimport { isInfinityScroll as g, hasPaginationChild as w } from \"./utils\";\nimport v from \"../utils/with-defaults\";\nimport y from \"../utils/clsx\";\nimport { jsx as k } from \"react/jsx-runtime\";\nimport { jsxs as P } from \"react/jsx-runtime\";\nconst N = e.forwardRef((v, N) => {\n  const {\n      selectionMode: C,\n      selectionBehavior: S,\n      hideLoading: j,\n      children: M,\n      shadow: L,\n      color: B,\n      animated: I,\n      borderWeight: O,\n      bordered: R,\n      containerCss: W,\n      ...E\n    } = v,\n    [F, T] = p(M, m),\n    {\n      hasPagination: U,\n      rowsPerPage: V\n    } = w(M, m),\n    q = i({\n      ...v,\n      children: F,\n      showSelectionCheckboxes: void 0 !== v.showSelectionCheckboxes ? v.showSelectionCheckboxes : \"multiple\" === C && \"replace\" !== S\n    });\n  Object.keys(E).forEach(e => {\n    x.indexOf(e) > -1 && delete E[e];\n  });\n  const z = t(null);\n  o(N, () => null == z ? void 0 : z.current);\n  const {\n      collection: A\n    } = q,\n    {\n      gridProps: D\n    } = r(v, q, z),\n    G = e.useMemo(() => ({\n      collection: A,\n      color: B,\n      animated: I,\n      rowsPerPage: V\n    }), [A, I, B, V]);\n  return k(f.Provider, {\n    defaultValues: G,\n    children: k(b, {\n      shadow: L,\n      borderWeight: O,\n      bordered: R,\n      className: \"nextui-table-container\",\n      css: {\n        ...W\n      },\n      children: P(u, {\n        ref: z,\n        color: B,\n        shadow: L,\n        animated: I,\n        hoverable: \"none\" !== C || E.hoverable,\n        isMultiple: \"multiple\" === C,\n        hasPagination: U,\n        className: y(\"nextui-table\", E.className),\n        ...D,\n        ...E,\n        children: [P(a, {\n          as: \"thead\",\n          isFixed: g(A),\n          children: [A.headerRows.map(e => k(s, {\n            item: e,\n            state: q,\n            children: [...e.childNodes].map(e => {\n              var o;\n              return null != e && null != (o = e.props) && o.isSelectionCell ? k(c, {\n                column: e,\n                state: q,\n                color: B,\n                animated: I\n              }, null == e ? void 0 : e.key) : k(n, {\n                column: e,\n                state: q,\n                animated: I\n              }, null == e ? void 0 : e.key);\n            })\n          }, null == e ? void 0 : e.key)), !E.sticked && k(l, {\n            as: \"tr\",\n            className: \"nextui-table-hidden-row\",\n            y: .4\n          })]\n        }), k(h, {\n          state: q,\n          color: B,\n          collection: A,\n          animated: I,\n          hasPagination: U,\n          hideLoading: j\n        }), U && P(d, {\n          children: [k(l, {\n            as: \"tr\",\n            className: \"nextui-table-hidden-row\",\n            y: .6\n          }), k(\"tr\", {\n            role: \"row\",\n            children: k(\"th\", {\n              tabIndex: -1,\n              role: \"columnheader\",\n              colSpan: A.columnCount,\n              children: T\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nN.displayName = \"NextUI.Table\", N.toString = () => \".nextui-table\";\nexport default v(N, {\n  animated: !0,\n  hideLoading: !1,\n  selectionMode: \"none\",\n  selectionBehavior: \"toggle\"\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}