{"ast":null,"code":"import e, { useEffect as t, useMemo as i } from \"react\";\nimport { useFocusRing as r } from \"@react-aria/focus\";\nimport a from \"./collapse-icon\";\nimport o from \"../utils/expand\";\nimport { useCollapseContext as s } from \"./collapse-context\";\nimport l from \"../use-current-state\";\nimport d from \"../use-warning\";\nimport { useId as n } from \"@react-aria/utils\";\nimport c, { KeyCode as m } from \"../use-keyboard\";\nimport { StyledCollapse as p, StyledCollapseView as u, StyledCollapseContent as f } from \"./collapse.styles\";\nimport b from \"../utils/clsx\";\nimport h from \"../utils/with-defaults\";\nimport { jsx as v } from \"react/jsx-runtime\";\nimport { jsxs as x } from \"react/jsx-runtime\";\nconst w = \"nextui-collapse\",\n  N = ({\n    children: h,\n    title: N,\n    subtitle: $,\n    expanded: g,\n    shadow: j,\n    className: E,\n    divider: I,\n    arrowIcon: V,\n    showArrow: y,\n    disabled: C,\n    onChange: D,\n    bordered: k,\n    contentLeft: A,\n    preventDefault: F,\n    animated: S,\n    borderWeight: W,\n    index: q,\n    ...G\n  }) => {\n    const [L, P, z] = l(g),\n      {\n        values: B,\n        divider: H,\n        animated: J,\n        updateValues: K\n      } = s(),\n      {\n        isFocusVisible: M,\n        focusProps: O\n      } = r();\n    N || d('\"title\" is required.', \"Collapse\"), t(() => {\n      L !== g && P(g);\n    }, [g]), t(() => {\n      if (!B.length) return;\n      const e = !!B.find(e => e === q);\n      P(e);\n    }, [B.join(\",\")]);\n    const Q = n(),\n      R = n(),\n      T = i(() => y ? V || v(a, {}) : null, [V, y]),\n      U = void 0 === H ? I : H,\n      X = i(() => void 0 === J ? S : J, [J, S]),\n      Y = e => {\n        if (C) return;\n        const t = !z.current;\n        P(t), K && K(q, t), D && D(e, q, t);\n      },\n      {\n        bindings: Z\n      } = c(e => {\n        Y(e);\n      }, [m.Enter, m.Space], {\n        disableGlobalEvent: !0,\n        preventDefault: F\n      }),\n      _ = i(() => L ? \"open\" : \"closed\", [L]);\n    return x(p, {\n      tabIndex: -1,\n      shadow: j,\n      bordered: k,\n      animated: X,\n      divider: U,\n      borderWeight: W,\n      visible: L,\n      \"data-state\": _,\n      className: b(E, w, `${w}--${_}`),\n      ...G,\n      children: [v(u, {\n        role: \"button\",\n        tabIndex: C ? -1 : 0,\n        id: Q,\n        className: `${w}-view`,\n        \"data-state\": _,\n        disabled: C,\n        \"aria-disabled\": C,\n        \"aria-expanded\": L,\n        \"aria-controls\": R,\n        isFocusVisible: M,\n        onClick: Y,\n        ...O,\n        ...Z,\n        children: x(\"div\", {\n          className: b(`${w}-title-container`),\n          children: [A && v(\"div\", {\n            className: `${w}-title-content-left`,\n            children: A\n          }), x(\"div\", {\n            className: `${w}-title-content`,\n            children: [e.isValidElement(N) ? N : v(\"h3\", {\n              className: `${w}-title`,\n              children: N\n            }), $ && v(\"div\", {\n              className: `${w}-subtitle`,\n              children: $\n            })]\n          }), v(\"div\", {\n            className: `${w}-title-content-right`,\n            children: T\n          })]\n        })\n      }), v(o, {\n        isExpanded: L,\n        animated: X,\n        children: v(f, {\n          role: \"region\",\n          tabIndex: -1,\n          id: R,\n          \"aria-labelledby\": Q,\n          className: `${w}-content`,\n          children: h\n        })\n      })]\n    });\n  };\nN.toString = () => \".nextui-collapse\";\nexport default h(N, {\n  shadow: !1,\n  divider: !0,\n  bordered: !1,\n  showArrow: !0,\n  animated: !0,\n  disabled: !1,\n  preventDefault: !0,\n  expanded: !1\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}