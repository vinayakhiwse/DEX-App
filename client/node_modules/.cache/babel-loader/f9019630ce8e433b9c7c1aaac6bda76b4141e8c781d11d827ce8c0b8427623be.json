{"ast":null,"code":"import { useEffect as e, useRef as t, useState as r } from \"react\";\nconst n = {\n    scrollLayer: !1\n  },\n  o = new Map(),\n  u = e => !!(e.touches && e.touches.length > 1) || (e.preventDefault(), !1);\nexport default ((c, s) => {\n  if (\"undefined\" == typeof document) return [!1, e => e];\n  const d = c || t(document.body),\n    [i, a] = r(!1),\n    l = {\n      ...n,\n      ...(s || {})\n    },\n    f = () => !l.scrollLayer && !(\"undefined\" == typeof window || !window.navigator) && /iP(ad|hone|od)/.test(window.navigator.platform);\n  return e(() => {\n    if (!d || !d.current) return;\n    const e = d.current.style.overflow;\n    if (i) {\n      if (o.has(d.current)) return;\n      return f() ? document.addEventListener(\"touchmove\", u, {\n        passive: !1\n      }) : d.current.style.overflow = \"hidden\", void o.set(d.current, {\n        last: e\n      });\n    }\n    if (o.has(d.current)) {\n      if (f()) document.removeEventListener(\"touchmove\", u);else {\n        const e = o.get(d.current);\n        d.current.style.overflow = e.last;\n      }\n      o.delete(d.current);\n    }\n  }, [i, d]), [i, a];\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}