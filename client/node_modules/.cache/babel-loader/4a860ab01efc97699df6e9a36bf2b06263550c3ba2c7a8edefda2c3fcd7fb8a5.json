{"ast":null,"code":"import { useMemo as $1OhDq$useMemo, useRef as $1OhDq$useRef, useEffect as $1OhDq$useEffect } from \"react\";\nimport { useOverlayTriggerState as $1OhDq$useOverlayTriggerState } from \"@react-stately/overlays\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nconst $8796f90736e175cb$var$TOOLTIP_DELAY = 1500; // this seems to be a 1.5 second delay, check with design\nconst $8796f90736e175cb$var$TOOLTIP_COOLDOWN = 500;\nlet $8796f90736e175cb$var$tooltips = {};\nlet $8796f90736e175cb$var$tooltipId = 0;\nlet $8796f90736e175cb$var$globalWarmedUp = false;\nlet $8796f90736e175cb$var$globalWarmUpTimeout = null;\nlet $8796f90736e175cb$var$globalCooldownTimeout = null;\nfunction $8796f90736e175cb$export$4d40659c25ecb50b(props = {}) {\n  let {\n    delay = $8796f90736e175cb$var$TOOLTIP_DELAY,\n    closeDelay = $8796f90736e175cb$var$TOOLTIP_COOLDOWN\n  } = props;\n  let {\n    isOpen: isOpen,\n    open: open,\n    close: close\n  } = (0, $1OhDq$useOverlayTriggerState)(props);\n  let id = (0, $1OhDq$useMemo)(() => `${++$8796f90736e175cb$var$tooltipId}`, []);\n  let closeTimeout = (0, $1OhDq$useRef)();\n  let ensureTooltipEntry = () => {\n    $8796f90736e175cb$var$tooltips[id] = hideTooltip;\n  };\n  let closeOpenTooltips = () => {\n    for (let hideTooltipId in $8796f90736e175cb$var$tooltips) if (hideTooltipId !== id) {\n      $8796f90736e175cb$var$tooltips[hideTooltipId](true);\n      delete $8796f90736e175cb$var$tooltips[hideTooltipId];\n    }\n  };\n  let showTooltip = () => {\n    clearTimeout(closeTimeout.current);\n    closeTimeout.current = null;\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    $8796f90736e175cb$var$globalWarmedUp = true;\n    open();\n    if ($8796f90736e175cb$var$globalWarmUpTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n    }\n    if ($8796f90736e175cb$var$globalCooldownTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);\n      $8796f90736e175cb$var$globalCooldownTimeout = null;\n    }\n  };\n  let hideTooltip = immediate => {\n    if (immediate || closeDelay <= 0) {\n      clearTimeout(closeTimeout.current);\n      closeTimeout.current = null;\n      close();\n    } else if (!closeTimeout.current) closeTimeout.current = setTimeout(() => {\n      closeTimeout.current = null;\n      close();\n    }, closeDelay);\n    if ($8796f90736e175cb$var$globalWarmUpTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n    }\n    if ($8796f90736e175cb$var$globalWarmedUp) {\n      if ($8796f90736e175cb$var$globalCooldownTimeout) clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);\n      $8796f90736e175cb$var$globalCooldownTimeout = setTimeout(() => {\n        delete $8796f90736e175cb$var$tooltips[id];\n        $8796f90736e175cb$var$globalCooldownTimeout = null;\n        $8796f90736e175cb$var$globalWarmedUp = false;\n      }, Math.max($8796f90736e175cb$var$TOOLTIP_COOLDOWN, closeDelay));\n    }\n  };\n  let warmupTooltip = () => {\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    if (!isOpen && !$8796f90736e175cb$var$globalWarmUpTimeout && !$8796f90736e175cb$var$globalWarmedUp) $8796f90736e175cb$var$globalWarmUpTimeout = setTimeout(() => {\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n      $8796f90736e175cb$var$globalWarmedUp = true;\n      showTooltip();\n    }, delay);else if (!isOpen) showTooltip();\n  };\n  // eslint-disable-next-line arrow-body-style\n  (0, $1OhDq$useEffect)(() => {\n    return () => {\n      clearTimeout(closeTimeout.current);\n      let tooltip = $8796f90736e175cb$var$tooltips[id];\n      if (tooltip) delete $8796f90736e175cb$var$tooltips[id];\n    };\n  }, [id]);\n  return {\n    isOpen: isOpen,\n    open: immediate => {\n      if (!immediate && delay > 0 && !closeTimeout.current) warmupTooltip();else showTooltip();\n    },\n    close: hideTooltip\n  };\n}\nexport { $8796f90736e175cb$export$4d40659c25ecb50b as useTooltipTriggerState };\n//# sourceMappingURL=module.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}