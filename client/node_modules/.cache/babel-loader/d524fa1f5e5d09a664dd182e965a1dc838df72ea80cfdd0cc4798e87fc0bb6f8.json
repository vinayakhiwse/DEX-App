{"ast":null,"code":"\"use client\";\n\nimport { usePopover } from \"./chunk-6WZQP7OD.mjs\";\n\n// src/free-solo-popover.tsx\nimport * as React from \"react\";\nimport { DismissButton, Overlay } from \"@react-aria/overlays\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { motion } from \"framer-motion\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { getTransformOrigins } from \"@nextui-org/aria-utils\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-transitions\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FreeSoloPopoverWrapper = ({\n  children,\n  motionProps,\n  placement,\n  disableAnimation,\n  style = {},\n  ...otherProps\n}) => {\n  return disableAnimation ? /* @__PURE__ */jsx(\"div\", {\n    ...otherProps,\n    children\n  }) : /* @__PURE__ */jsx(motion.div, {\n    animate: \"enter\",\n    exit: \"exit\",\n    initial: \"initial\",\n    style: {\n      ...style,\n      ...getTransformOrigins(placement === \"center\" ? \"top\" : placement)\n    },\n    variants: TRANSITION_VARIANTS.scaleSpringOpacity,\n    ...mergeProps(otherProps, motionProps),\n    children\n  });\n};\nvar FreeSoloPopover = forwardRef((props, ref) => {\n  const {\n    Component,\n    state,\n    children,\n    placement,\n    backdrop,\n    showArrow,\n    portalContainer,\n    disableAnimation,\n    motionProps,\n    isNonModal,\n    getPopoverProps,\n    getBackdropProps,\n    getDialogProps,\n    getArrowProps\n  } = usePopover({\n    ...props,\n    shouldCloseOnInteractOutside: void 0,\n    ref\n  });\n  const arrowContent = React.useMemo(() => {\n    if (!showArrow) return null;\n    return /* @__PURE__ */jsx(\"span\", {\n      ...getArrowProps()\n    });\n  }, [showArrow, getArrowProps]);\n  const backdropContent = React.useMemo(() => {\n    if (backdrop === \"transparent\") {\n      return null;\n    }\n    if (disableAnimation) {\n      return /* @__PURE__ */jsx(\"div\", {\n        ...getBackdropProps()\n      });\n    }\n    return /* @__PURE__ */jsx(motion.div, {\n      animate: \"enter\",\n      exit: \"exit\",\n      initial: \"exit\",\n      variants: TRANSITION_VARIANTS.fade,\n      ...getBackdropProps()\n    });\n  }, [backdrop, disableAnimation, getBackdropProps]);\n  return /* @__PURE__ */jsxs(Overlay, {\n    portalContainer,\n    children: [!isNonModal && backdropContent, /* @__PURE__ */jsx(Component, {\n      ...getPopoverProps(),\n      children: /* @__PURE__ */jsxs(FreeSoloPopoverWrapper, {\n        disableAnimation,\n        motionProps,\n        placement,\n        tabIndex: -1,\n        ...getDialogProps(),\n        children: [!isNonModal && /* @__PURE__ */jsx(DismissButton, {\n          onDismiss: state.close\n        }), children, arrowContent, /* @__PURE__ */jsx(DismissButton, {\n          onDismiss: state.close\n        })]\n      })\n    })]\n  });\n});\nFreeSoloPopover.displayName = \"NextUI.FreeSoloPopover\";\nvar free_solo_popover_default = FreeSoloPopover;\nexport { free_solo_popover_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}