{"ast":null,"code":"import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { isAddress } from './isAddress.js';\nexport function checksumAddress(address_, chainId) {\n  const hexAddress = chainId ? `${chainId}${address_.toLowerCase()}` : address_.substring(2).toLowerCase();\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n  const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase();\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase();\n    }\n  }\n  return `0x${address.join('')}`;\n}\nexport function getAddress(address, chainId) {\n  if (!isAddress(address)) throw new InvalidAddressError({\n    address\n  });\n  return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}