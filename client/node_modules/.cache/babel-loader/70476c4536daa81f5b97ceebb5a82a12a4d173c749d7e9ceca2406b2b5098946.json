{"ast":null,"code":"import { BaseError } from './base.js';\n/** @deprecated */\nexport class DataLengthTooLongError extends BaseError {\n  constructor({\n    consumed,\n    length\n  }) {\n    super(`Consumed bytes (${consumed}) is shorter than data length (${length - 1}).`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'DataLengthTooLongError'\n    });\n  }\n}\n/** @deprecated */\nexport class DataLengthTooShortError extends BaseError {\n  constructor({\n    length,\n    dataLength\n  }) {\n    super(`Data length (${dataLength - 1}) is shorter than consumed bytes length (${length - 1}).`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'DataLengthTooShortError'\n    });\n  }\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value\n  }) {\n    super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'IntegerOutOfRangeError'\n    });\n  }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes) {\n    super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidBytesBooleanError'\n    });\n  }\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex) {\n    super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidHexBooleanError'\n    });\n  }\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value) {\n    super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidHexValueError'\n    });\n  }\n}\n/** @deprecated */\nexport class OffsetOutOfBoundsError extends BaseError {\n  constructor({\n    nextOffset,\n    offset\n  }) {\n    super(`Next offset (${nextOffset}) is greater than previous offset + consumed bytes (${offset})`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'OffsetOutOfBoundsError'\n    });\n  }\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({\n    givenSize,\n    maxSize\n  }) {\n    super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'SizeOverflowError'\n    });\n  }\n}\n//# sourceMappingURL=encoding.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}