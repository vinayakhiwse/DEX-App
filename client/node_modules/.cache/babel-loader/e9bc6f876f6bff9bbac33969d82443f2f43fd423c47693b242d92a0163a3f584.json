{"ast":null,"code":"import { useGridRowGroup as $lJcFS$useGridRowGroup, useGrid as $lJcFS$useGrid, GridKeyboardDelegate as $lJcFS$GridKeyboardDelegate, useGridCell as $lJcFS$useGridCell, useGridRow as $lJcFS$useGridRow, useGridSelectionCheckbox as $lJcFS$useGridSelectionCheckbox } from \"@react-aria/grid\";\nimport { announce as $lJcFS$announce } from \"@react-aria/live-announcer\";\nimport { useId as $lJcFS$useId, useDescription as $lJcFS$useDescription, useUpdateEffect as $lJcFS$useUpdateEffect, mergeProps as $lJcFS$mergeProps, isAndroid as $lJcFS$isAndroid } from \"@react-aria/utils\";\nimport { useMemo as $lJcFS$useMemo } from \"react\";\nimport { useCollator as $lJcFS$useCollator, useLocale as $lJcFS$useLocale, useMessageFormatter as $lJcFS$useMessageFormatter } from \"@react-aria/i18n\";\nimport { useFocusable as $lJcFS$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $lJcFS$usePress } from \"@react-aria/interactions\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $6e31608fbba75bab$exports = {};\n$parcel$export($6e31608fbba75bab$exports, \"useTable\", () => $6e31608fbba75bab$export$25bceaac3c7e4dc7);\nconst $2140fb2337097f2d$export$552312adfd451dab = new WeakMap();\nfunction $2140fb2337097f2d$var$normalizeKey(key) {\n  if (typeof key === 'string') return key.replace(/\\s*/g, '');\n  return '' + key;\n}\nfunction $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\nfunction $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\nfunction $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(' ');\n}\nvar $ae7e9c471762b4d3$exports = {};\nvar $ce3de3ff2fd66848$exports = {};\n$ce3de3ff2fd66848$exports = JSON.parse(\"{\\\"ascending\\\":\\\"تصاعدي\\\",\\\"ascendingSort\\\":\\\"ترتيب حسب العمود {columnName} بترتيب تصاعدي\\\",\\\"descending\\\":\\\"تنازلي\\\",\\\"descendingSort\\\":\\\"ترتيب حسب العمود {columnName} بترتيب تنازلي\\\",\\\"select\\\":\\\"تحديد\\\",\\\"selectAll\\\":\\\"تحديد الكل\\\",\\\"sortable\\\":\\\"عمود قابل للترتيب\\\"}\");\nvar $cb80dcce530985b9$exports = {};\n$cb80dcce530985b9$exports = JSON.parse(\"{\\\"ascending\\\":\\\"възходящ\\\",\\\"ascendingSort\\\":\\\"сортирано по колона {columnName} във възходящ ред\\\",\\\"descending\\\":\\\"низходящ\\\",\\\"descendingSort\\\":\\\"сортирано по колона {columnName} в низходящ ред\\\",\\\"select\\\":\\\"Изберете\\\",\\\"selectAll\\\":\\\"Изберете всичко\\\",\\\"sortable\\\":\\\"сортираща колона\\\"}\");\nvar $68ac86749db4c0fb$exports = {};\n$68ac86749db4c0fb$exports = JSON.parse(\"{\\\"ascending\\\":\\\"vzestupně\\\",\\\"ascendingSort\\\":\\\"řazeno vzestupně podle sloupce {columnName}\\\",\\\"descending\\\":\\\"sestupně\\\",\\\"descendingSort\\\":\\\"řazeno sestupně podle sloupce {columnName}\\\",\\\"select\\\":\\\"Vybrat\\\",\\\"selectAll\\\":\\\"Vybrat vše\\\",\\\"sortable\\\":\\\"sloupec s možností řazení\\\"}\");\nvar $9a6cbac08487e661$exports = {};\n$9a6cbac08487e661$exports = JSON.parse(\"{\\\"ascending\\\":\\\"stigende\\\",\\\"ascendingSort\\\":\\\"sorteret efter kolonne {columnName} i stigende rækkefølge\\\",\\\"descending\\\":\\\"faldende\\\",\\\"descendingSort\\\":\\\"sorteret efter kolonne {columnName} i faldende rækkefølge\\\",\\\"select\\\":\\\"Vælg\\\",\\\"selectAll\\\":\\\"Vælg alle\\\",\\\"sortable\\\":\\\"sorterbar kolonne\\\"}\");\nvar $c963661d89486e72$exports = {};\n$c963661d89486e72$exports = JSON.parse(\"{\\\"ascending\\\":\\\"aufsteigend\\\",\\\"ascendingSort\\\":\\\"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\\\",\\\"descending\\\":\\\"absteigend\\\",\\\"descendingSort\\\":\\\"sortiert nach Spalte {columnName} in absteigender Reihenfolge\\\",\\\"select\\\":\\\"Auswählen\\\",\\\"selectAll\\\":\\\"Alles auswählen\\\",\\\"sortable\\\":\\\"sortierbare Spalte\\\"}\");\nvar $ac03861c6e8605f4$exports = {};\n$ac03861c6e8605f4$exports = JSON.parse(\"{\\\"ascending\\\":\\\"αύξουσα\\\",\\\"ascendingSort\\\":\\\"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\\\",\\\"descending\\\":\\\"φθίνουσα\\\",\\\"descendingSort\\\":\\\"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\\\",\\\"select\\\":\\\"Επιλογή\\\",\\\"selectAll\\\":\\\"Επιλογή όλων\\\",\\\"sortable\\\":\\\"Στήλη διαλογής\\\"}\");\nvar $09e6b82e0d6e466a$exports = {};\n$09e6b82e0d6e466a$exports = JSON.parse(\"{\\\"select\\\":\\\"Select\\\",\\\"selectAll\\\":\\\"Select All\\\",\\\"sortable\\\":\\\"sortable column\\\",\\\"ascending\\\":\\\"ascending\\\",\\\"descending\\\":\\\"descending\\\",\\\"ascendingSort\\\":\\\"sorted by column {columnName} in ascending order\\\",\\\"descendingSort\\\":\\\"sorted by column {columnName} in descending order\\\"}\");\nvar $8cc39eb66c2bf220$exports = {};\n$8cc39eb66c2bf220$exports = JSON.parse(\"{\\\"ascending\\\":\\\"de subida\\\",\\\"ascendingSort\\\":\\\"ordenado por columna {columnName} en orden de subida\\\",\\\"descending\\\":\\\"de bajada\\\",\\\"descendingSort\\\":\\\"ordenado por columna {columnName} en orden de bajada\\\",\\\"select\\\":\\\"Seleccionar\\\",\\\"selectAll\\\":\\\"Seleccionar todos\\\",\\\"sortable\\\":\\\"columna ordenable\\\"}\");\nvar $4e11db3c25a38112$exports = {};\n$4e11db3c25a38112$exports = JSON.parse(\"{\\\"ascending\\\":\\\"tõusev järjestus\\\",\\\"ascendingSort\\\":\\\"sorditud veeru järgi {columnName} tõusvas järjestuses\\\",\\\"descending\\\":\\\"laskuv järjestus\\\",\\\"descendingSort\\\":\\\"sorditud veeru järgi {columnName} laskuvas järjestuses\\\",\\\"select\\\":\\\"Vali\\\",\\\"selectAll\\\":\\\"Vali kõik\\\",\\\"sortable\\\":\\\"sorditav veerg\\\"}\");\nvar $da1e751a92575e02$exports = {};\n$da1e751a92575e02$exports = JSON.parse(\"{\\\"ascending\\\":\\\"nouseva\\\",\\\"ascendingSort\\\":\\\"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\\\",\\\"descending\\\":\\\"laskeva\\\",\\\"descendingSort\\\":\\\"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\\\",\\\"select\\\":\\\"Valitse\\\",\\\"selectAll\\\":\\\"Valitse kaikki\\\",\\\"sortable\\\":\\\"lajiteltava sarake\\\"}\");\nvar $1b5d6c6c47d55106$exports = {};\n$1b5d6c6c47d55106$exports = JSON.parse(\"{\\\"ascending\\\":\\\"croissant\\\",\\\"ascendingSort\\\":\\\"trié en fonction de la colonne {columnName} par ordre croissant\\\",\\\"descending\\\":\\\"décroissant\\\",\\\"descendingSort\\\":\\\"trié en fonction de la colonne {columnName} par ordre décroissant\\\",\\\"select\\\":\\\"Sélectionner\\\",\\\"selectAll\\\":\\\"Sélectionner tout\\\",\\\"sortable\\\":\\\"colonne triable\\\"}\");\nvar $7c18ba27b86d3308$exports = {};\n$7c18ba27b86d3308$exports = JSON.parse(\"{\\\"ascending\\\":\\\"עולה\\\",\\\"ascendingSort\\\":\\\"מוין לפי עמודה {columnName} בסדר עולה\\\",\\\"descending\\\":\\\"יורד\\\",\\\"descendingSort\\\":\\\"מוין לפי עמודה {columnName} בסדר יורד\\\",\\\"select\\\":\\\"בחר\\\",\\\"selectAll\\\":\\\"בחר הכול\\\",\\\"sortable\\\":\\\"עמודה שניתן למיין\\\"}\");\nvar $2cb40998e20e8a46$exports = {};\n$2cb40998e20e8a46$exports = JSON.parse(\"{\\\"ascending\\\":\\\"rastući\\\",\\\"ascendingSort\\\":\\\"razvrstano po stupcima {columnName} rastućem redoslijedom\\\",\\\"descending\\\":\\\"padajući\\\",\\\"descendingSort\\\":\\\"razvrstano po stupcima {columnName} padajućim redoslijedom\\\",\\\"select\\\":\\\"Odaberite\\\",\\\"selectAll\\\":\\\"Odaberite sve\\\",\\\"sortable\\\":\\\"stupac koji se može razvrstati\\\"}\");\nvar $189e23eec1d6aa3a$exports = {};\n$189e23eec1d6aa3a$exports = JSON.parse(\"{\\\"ascending\\\":\\\"növekvő\\\",\\\"ascendingSort\\\":\\\"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\\\",\\\"descending\\\":\\\"csökkenő\\\",\\\"descendingSort\\\":\\\"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\\\",\\\"select\\\":\\\"Kijelölés\\\",\\\"selectAll\\\":\\\"Összes kijelölése\\\",\\\"sortable\\\":\\\"rendezendő oszlop\\\"}\");\nvar $3c5ec8e4f015dfd0$exports = {};\n$3c5ec8e4f015dfd0$exports = JSON.parse(\"{\\\"ascending\\\":\\\"crescente\\\",\\\"ascendingSort\\\":\\\"in ordine crescente in base alla colonna {columnName}\\\",\\\"descending\\\":\\\"decrescente\\\",\\\"descendingSort\\\":\\\"in ordine decrescente in base alla colonna {columnName}\\\",\\\"select\\\":\\\"Seleziona\\\",\\\"selectAll\\\":\\\"Seleziona tutto\\\",\\\"sortable\\\":\\\"colonna ordinabile\\\"}\");\nvar $d021d50e6b315ebb$exports = {};\n$d021d50e6b315ebb$exports = JSON.parse(\"{\\\"ascending\\\":\\\"昇順\\\",\\\"ascendingSort\\\":\\\"列 {columnName} を昇順で並べ替え\\\",\\\"descending\\\":\\\"降順\\\",\\\"descendingSort\\\":\\\"列 {columnName} を降順で並べ替え\\\",\\\"select\\\":\\\"選択\\\",\\\"selectAll\\\":\\\"すべて選択\\\",\\\"sortable\\\":\\\"並べ替え可能な列\\\"}\");\nvar $52535c35c24ec937$exports = {};\n$52535c35c24ec937$exports = JSON.parse(\"{\\\"ascending\\\":\\\"오름차순\\\",\\\"ascendingSort\\\":\\\"{columnName} 열을 기준으로 오름차순으로 정렬됨\\\",\\\"descending\\\":\\\"내림차순\\\",\\\"descendingSort\\\":\\\"{columnName} 열을 기준으로 내림차순으로 정렬됨\\\",\\\"select\\\":\\\"선택\\\",\\\"selectAll\\\":\\\"모두 선택\\\",\\\"sortable\\\":\\\"정렬 가능한 열\\\"}\");\nvar $b37ee03672edfd1d$exports = {};\n$b37ee03672edfd1d$exports = JSON.parse(\"{\\\"ascending\\\":\\\"didėjančia tvarka\\\",\\\"ascendingSort\\\":\\\"surikiuota pagal stulpelį {columnName} didėjančia tvarka\\\",\\\"descending\\\":\\\"mažėjančia tvarka\\\",\\\"descendingSort\\\":\\\"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\\\",\\\"select\\\":\\\"Pasirinkti\\\",\\\"selectAll\\\":\\\"Pasirinkti viską\\\",\\\"sortable\\\":\\\"rikiuojamas stulpelis\\\"}\");\nvar $c7df6686b4189d56$exports = {};\n$c7df6686b4189d56$exports = JSON.parse(\"{\\\"ascending\\\":\\\"augošā secībā\\\",\\\"ascendingSort\\\":\\\"kārtots pēc kolonnas {columnName} augošā secībā\\\",\\\"descending\\\":\\\"dilstošā secībā\\\",\\\"descendingSort\\\":\\\"kārtots pēc kolonnas {columnName} dilstošā secībā\\\",\\\"select\\\":\\\"Atlasīt\\\",\\\"selectAll\\\":\\\"Atlasīt visu\\\",\\\"sortable\\\":\\\"kārtojamā kolonna\\\"}\");\nvar $da07fe8ec87e6b68$exports = {};\n$da07fe8ec87e6b68$exports = JSON.parse(\"{\\\"ascending\\\":\\\"stigende\\\",\\\"ascendingSort\\\":\\\"sortert etter kolonne {columnName} i stigende rekkefølge\\\",\\\"descending\\\":\\\"synkende\\\",\\\"descendingSort\\\":\\\"sortert etter kolonne {columnName} i synkende rekkefølge\\\",\\\"select\\\":\\\"Velg\\\",\\\"selectAll\\\":\\\"Velg alle\\\",\\\"sortable\\\":\\\"kolonne som kan sorteres\\\"}\");\nvar $64b7e390f5791490$exports = {};\n$64b7e390f5791490$exports = JSON.parse(\"{\\\"ascending\\\":\\\"oplopend\\\",\\\"ascendingSort\\\":\\\"gesorteerd in oplopende volgorde in kolom {columnName}\\\",\\\"descending\\\":\\\"aflopend\\\",\\\"descendingSort\\\":\\\"gesorteerd in aflopende volgorde in kolom {columnName}\\\",\\\"select\\\":\\\"Selecteren\\\",\\\"selectAll\\\":\\\"Alles selecteren\\\",\\\"sortable\\\":\\\"sorteerbare kolom\\\"}\");\nvar $2a03621e773f1678$exports = {};\n$2a03621e773f1678$exports = JSON.parse(\"{\\\"ascending\\\":\\\"rosnąco\\\",\\\"ascendingSort\\\":\\\"posortowano według kolumny {columnName} w porządku rosnącym\\\",\\\"descending\\\":\\\"malejąco\\\",\\\"descendingSort\\\":\\\"posortowano według kolumny {columnName} w porządku malejącym\\\",\\\"select\\\":\\\"Zaznacz\\\",\\\"selectAll\\\":\\\"Zaznacz wszystko\\\",\\\"sortable\\\":\\\"kolumna z możliwością sortowania\\\"}\");\nvar $0a79c0aba9e5ecc6$exports = {};\n$0a79c0aba9e5ecc6$exports = JSON.parse(\"{\\\"ascending\\\":\\\"crescente\\\",\\\"ascendingSort\\\":\\\"classificado pela coluna {columnName} em ordem crescente\\\",\\\"descending\\\":\\\"decrescente\\\",\\\"descendingSort\\\":\\\"classificado pela coluna {columnName} em ordem decrescente\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectAll\\\":\\\"Selecionar tudo\\\",\\\"sortable\\\":\\\"coluna classificável\\\"}\");\nvar $de7b4d0f7dc86fc8$exports = {};\n$de7b4d0f7dc86fc8$exports = JSON.parse(\"{\\\"ascending\\\":\\\"ascendente\\\",\\\"ascendingSort\\\":\\\"Ordenar por coluna {columnName} em ordem ascendente\\\",\\\"descending\\\":\\\"descendente\\\",\\\"descendingSort\\\":\\\"Ordenar por coluna {columnName} em ordem descendente\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectAll\\\":\\\"Selecionar tudo\\\",\\\"sortable\\\":\\\"Coluna ordenável\\\"}\");\nvar $28ea7e849d77bd1c$exports = {};\n$28ea7e849d77bd1c$exports = JSON.parse(\"{\\\"ascending\\\":\\\"crescătoare\\\",\\\"ascendingSort\\\":\\\"sortate după coloana {columnName} în ordine crescătoare\\\",\\\"descending\\\":\\\"descrescătoare\\\",\\\"descendingSort\\\":\\\"sortate după coloana {columnName} în ordine descrescătoare\\\",\\\"select\\\":\\\"Selectare\\\",\\\"selectAll\\\":\\\"Selectare totală\\\",\\\"sortable\\\":\\\"coloană sortabilă\\\"}\");\nvar $9a09321cf046b187$exports = {};\n$9a09321cf046b187$exports = JSON.parse(\"{\\\"ascending\\\":\\\"возрастание\\\",\\\"ascendingSort\\\":\\\"сортировать столбец {columnName} в порядке возрастания\\\",\\\"descending\\\":\\\"убывание\\\",\\\"descendingSort\\\":\\\"сортировать столбец {columnName} в порядке убывания\\\",\\\"select\\\":\\\"Выбрать\\\",\\\"selectAll\\\":\\\"Выбрать все\\\",\\\"sortable\\\":\\\"сортируемый столбец\\\"}\");\nvar $5afe469a63fcac7b$exports = {};\n$5afe469a63fcac7b$exports = JSON.parse(\"{\\\"ascending\\\":\\\"vzostupne\\\",\\\"ascendingSort\\\":\\\"zoradené zostupne podľa stĺpca {columnName}\\\",\\\"descending\\\":\\\"zostupne\\\",\\\"descendingSort\\\":\\\"zoradené zostupne podľa stĺpca {columnName}\\\",\\\"select\\\":\\\"Vybrať\\\",\\\"selectAll\\\":\\\"Vybrať všetko\\\",\\\"sortable\\\":\\\"zoraditeľný stĺpec\\\"}\");\nvar $2956757ac31a7ce2$exports = {};\n$2956757ac31a7ce2$exports = JSON.parse(\"{\\\"ascending\\\":\\\"naraščajoče\\\",\\\"ascendingSort\\\":\\\"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\\\",\\\"descending\\\":\\\"padajoče\\\",\\\"descendingSort\\\":\\\"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\\\",\\\"select\\\":\\\"Izberite\\\",\\\"selectAll\\\":\\\"Izberite vse\\\",\\\"sortable\\\":\\\"razvrstljivi stolpec\\\"}\");\nvar $cedee0e66b175529$exports = {};\n$cedee0e66b175529$exports = JSON.parse(\"{\\\"ascending\\\":\\\"rastući\\\",\\\"ascendingSort\\\":\\\"sortirano po kolonama {columnName} rastućim redosledom\\\",\\\"descending\\\":\\\"padajući\\\",\\\"descendingSort\\\":\\\"sortirano po kolonama {columnName} padajućim redosledom\\\",\\\"select\\\":\\\"Izaberite\\\",\\\"selectAll\\\":\\\"Izaberite sve\\\",\\\"sortable\\\":\\\"kolona koja se može sortirati\\\"}\");\nvar $6db19998ba4427da$exports = {};\n$6db19998ba4427da$exports = JSON.parse(\"{\\\"ascending\\\":\\\"stigande\\\",\\\"ascendingSort\\\":\\\"sorterat på kolumn {columnName} i stigande ordning\\\",\\\"descending\\\":\\\"fallande\\\",\\\"descendingSort\\\":\\\"sorterat på kolumn {columnName} i fallande ordning\\\",\\\"select\\\":\\\"Markera\\\",\\\"selectAll\\\":\\\"Markera allt\\\",\\\"sortable\\\":\\\"sorterbar kolumn\\\"}\");\nvar $166b7c9cc1adb1a1$exports = {};\n$166b7c9cc1adb1a1$exports = JSON.parse(\"{\\\"ascending\\\":\\\"artan sırada\\\",\\\"ascendingSort\\\":\\\"{columnName} sütuna göre artan düzende sırala\\\",\\\"descending\\\":\\\"azalan sırada\\\",\\\"descendingSort\\\":\\\"{columnName} sütuna göre azalan düzende sırala\\\",\\\"select\\\":\\\"Seç\\\",\\\"selectAll\\\":\\\"Tümünü Seç\\\",\\\"sortable\\\":\\\"Sıralanabilir sütun\\\"}\");\nvar $c7ab180b401e49ff$exports = {};\n$c7ab180b401e49ff$exports = JSON.parse(\"{\\\"ascending\\\":\\\"висхідний\\\",\\\"ascendingSort\\\":\\\"відсортовано за стовпцем {columnName} у висхідному порядку\\\",\\\"descending\\\":\\\"низхідний\\\",\\\"descendingSort\\\":\\\"відсортовано за стовпцем {columnName} у низхідному порядку\\\",\\\"select\\\":\\\"Вибрати\\\",\\\"selectAll\\\":\\\"Вибрати все\\\",\\\"sortable\\\":\\\"сортувальний стовпець\\\"}\");\nvar $1648ec00941567f3$exports = {};\n$1648ec00941567f3$exports = JSON.parse(\"{\\\"ascending\\\":\\\"升序\\\",\\\"ascendingSort\\\":\\\"按列 {columnName} 升序排序\\\",\\\"descending\\\":\\\"降序\\\",\\\"descendingSort\\\":\\\"按列 {columnName} 降序排序\\\",\\\"select\\\":\\\"选择\\\",\\\"selectAll\\\":\\\"全选\\\",\\\"sortable\\\":\\\"可排序的列\\\"}\");\nvar $b26f22384b3c1526$exports = {};\n$b26f22384b3c1526$exports = JSON.parse(\"{\\\"ascending\\\":\\\"遞增\\\",\\\"ascendingSort\\\":\\\"已依據「{columnName}」欄遞增排序\\\",\\\"descending\\\":\\\"遞減\\\",\\\"descendingSort\\\":\\\"已依據「{columnName}」欄遞減排序\\\",\\\"select\\\":\\\"選取\\\",\\\"selectAll\\\":\\\"全選\\\",\\\"sortable\\\":\\\"可排序的欄\\\"}\");\n$ae7e9c471762b4d3$exports = {\n  \"ar-AE\": $ce3de3ff2fd66848$exports,\n  \"bg-BG\": $cb80dcce530985b9$exports,\n  \"cs-CZ\": $68ac86749db4c0fb$exports,\n  \"da-DK\": $9a6cbac08487e661$exports,\n  \"de-DE\": $c963661d89486e72$exports,\n  \"el-GR\": $ac03861c6e8605f4$exports,\n  \"en-US\": $09e6b82e0d6e466a$exports,\n  \"es-ES\": $8cc39eb66c2bf220$exports,\n  \"et-EE\": $4e11db3c25a38112$exports,\n  \"fi-FI\": $da1e751a92575e02$exports,\n  \"fr-FR\": $1b5d6c6c47d55106$exports,\n  \"he-IL\": $7c18ba27b86d3308$exports,\n  \"hr-HR\": $2cb40998e20e8a46$exports,\n  \"hu-HU\": $189e23eec1d6aa3a$exports,\n  \"it-IT\": $3c5ec8e4f015dfd0$exports,\n  \"ja-JP\": $d021d50e6b315ebb$exports,\n  \"ko-KR\": $52535c35c24ec937$exports,\n  \"lt-LT\": $b37ee03672edfd1d$exports,\n  \"lv-LV\": $c7df6686b4189d56$exports,\n  \"nb-NO\": $da07fe8ec87e6b68$exports,\n  \"nl-NL\": $64b7e390f5791490$exports,\n  \"pl-PL\": $2a03621e773f1678$exports,\n  \"pt-BR\": $0a79c0aba9e5ecc6$exports,\n  \"pt-PT\": $de7b4d0f7dc86fc8$exports,\n  \"ro-RO\": $28ea7e849d77bd1c$exports,\n  \"ru-RU\": $9a09321cf046b187$exports,\n  \"sk-SK\": $5afe469a63fcac7b$exports,\n  \"sl-SI\": $2956757ac31a7ce2$exports,\n  \"sr-SP\": $cedee0e66b175529$exports,\n  \"sv-SE\": $6db19998ba4427da$exports,\n  \"tr-TR\": $166b7c9cc1adb1a1$exports,\n  \"uk-UA\": $c7ab180b401e49ff$exports,\n  \"zh-CN\": $1648ec00941567f3$exports,\n  \"zh-TW\": $b26f22384b3c1526$exports\n};\nclass $0ba3c81c7f1caedd$export$da43f8f5cb04028d extends $lJcFS$GridKeyboardDelegate {\n  isCell(node) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) return child.key;\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) return;\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n    return super.getKeyBelow(key);\n  }\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') return parent.key;\n      return;\n    }\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') return superKey;\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) return this.collection.columns[startItem.index].key;\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n  findNextColumnKey(column) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) return key;\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item1 of row.childNodes) {\n      if (item1.type === 'column') return item1.key;\n    }\n  }\n  findPreviousColumnKey(column) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) return key;\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') return item.key;\n    }\n  }\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);\n    return super.getKeyRightOf(key);\n  }\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);\n    return super.getKeyLeftOf(key);\n  }\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    if (key == null) return null;\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n      // Check each of the row header cells in this row for a match\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell' ? cell.key : item.key;\n          }\n        }\n      }\n      key = this.getKeyBelow(key);\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n    return null;\n  }\n}\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref1) {\n  let {\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized,\n    layout: layout\n  } = props;\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = $lJcFS$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let delegate = $lJcFS$useMemo(() => keyboardDelegate || new $0ba3c81c7f1caedd$export$da43f8f5cb04028d({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref1,\n    direction: direction,\n    collator: collator,\n    layout: layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref1, direction, collator, layout]);\n  let id = $lJcFS$useId();\n  $2140fb2337097f2d$export$552312adfd451dab.set(state, id);\n  let {\n    gridProps: gridProps\n  } = $lJcFS$useGrid({\n    ...props,\n    id: id,\n    keyboardDelegate: delegate,\n    getRowText(key) {\n      let added = state.collection.getItem(key);\n      if (!added) return '';\n      // If the row has a textValue, use that.\n      if (added.textValue != null) return added.textValue;\n      // Otherwise combine the text of each of the row header columns.\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n      if (rowHeaderColumnKeys) {\n        let text = [];\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);\n          if (text.length === rowHeaderColumnKeys.size) break;\n        }\n        return text.join(' ');\n      }\n      return '';\n    }\n  }, state, ref1);\n  // Override to include header rows\n  if (isVirtualized) gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  let {\n    column: column1,\n    direction: sortDirection\n  } = state.sortDescriptor || {};\n  let formatMessage = $lJcFS$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription = $lJcFS$useMemo(() => {\n    var ref;\n    let columnName = (ref = state.collection.columns.find(c => c.key === column1)) === null || ref === void 0 ? void 0 : ref.textValue;\n    return sortDirection && column1 ? formatMessage(`${sortDirection}Sort`, {\n      columnName: columnName\n    }) : undefined;\n  }, [sortDirection, column1, state.collection.columns]);\n  let descriptionProps = $lJcFS$useDescription(sortDescription);\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  $lJcFS$useUpdateEffect(() => {\n    $lJcFS$announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n  return {\n    gridProps: $lJcFS$mergeProps(gridProps, descriptionProps, {\n      // merge sort description with long press information\n      'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n    })\n  };\n}\nvar $f329116d8ad0aba0$exports = {};\n$parcel$export($f329116d8ad0aba0$exports, \"useTableColumnHeader\", () => $f329116d8ad0aba0$export$9514819a8c81e960);\nfunction $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {\n  var ref1, ref2;\n  let {\n    node: node\n  } = props;\n  // let allowsResizing = node.props.allowsResizing;\n  let allowsSorting = node.props.allowsSorting;\n  let {\n    gridCellProps: gridCellProps\n  } = $lJcFS$useGridCell(props, state, ref);\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    // Disabled for allowsResizing because if resizing is allowed, a menu trigger is added to the column header.\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    }\n  });\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {\n    focusableProps: focusableProps\n  } = $lJcFS$useFocusable({}, ref);\n  let ariaSort = null;\n  let isSortedColumn = ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.column) === node.key;\n  let sortDirection = (ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !$lJcFS$isAndroid()) ariaSort = isSortedColumn ? sortDirection : 'none';\n  let formatMessage = $lJcFS$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${formatMessage('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && $lJcFS$isAndroid()) sortDescription = `${sortDescription}, ${formatMessage(sortDirection)}`;\n  }\n  let descriptionProps = $lJcFS$useDescription(sortDescription);\n  return {\n    columnHeaderProps: {\n      ...$lJcFS$mergeProps(gridCellProps, pressProps, focusableProps, descriptionProps),\n      role: 'columnheader',\n      id: $2140fb2337097f2d$export$37cd4213f2ad742e(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\nvar $b2db214c022798eb$exports = {};\n$parcel$export($b2db214c022798eb$exports, \"useTableRow\", () => $b2db214c022798eb$export$7f2f6ae19e707aa5);\nfunction $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {\n  let {\n    node: node\n  } = props;\n  let {\n    rowProps: rowProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridRow(props, state, ref);\n  return {\n    rowProps: {\n      ...rowProps,\n      'aria-labelledby': $2140fb2337097f2d$export$85069b70317f543(state, node.key)\n    },\n    isPressed: isPressed\n  };\n}\nvar $f917ee10f4c32dab$exports = {};\n$parcel$export($f917ee10f4c32dab$exports, \"useTableHeaderRow\", () => $f917ee10f4c32dab$export$1b95a7d2d517b841);\nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let rowProps = {\n    role: 'row'\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps\n  };\n}\nvar $7713593715703b24$exports = {};\n$parcel$export($7713593715703b24$exports, \"useTableCell\", () => $7713593715703b24$export$49571c903d73624c);\nfunction $7713593715703b24$export$49571c903d73624c(props, state, ref) {\n  let {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridCell(props, state, ref);\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = $2140fb2337097f2d$export$19baff3266315d44(state, props.node.parentKey, columnKey);\n  }\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\nvar $2a795c53a101c542$exports = {};\n$parcel$export($2a795c53a101c542$exports, \"useTableSelectionCheckbox\", () => $2a795c53a101c542$export$16ea7f650bd7c1bb);\n$parcel$export($2a795c53a101c542$exports, \"useTableSelectAllCheckbox\", () => $2a795c53a101c542$export$1003db6a7e384b99);\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n  let {\n    key: key\n  } = props;\n  const {\n    checkboxProps: checkboxProps\n  } = $lJcFS$useGridSelectionCheckbox(props, state);\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${$2140fb2337097f2d$export$85069b70317f543(state, key)}`\n    }\n  };\n}\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n  let {\n    isEmpty: isEmpty,\n    isSelectAll: isSelectAll,\n    selectionMode: selectionMode\n  } = state.selectionManager;\n  const formatMessage = $lJcFS$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  return {\n    checkboxProps: {\n      'aria-label': formatMessage(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple',\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\nfunction $0047e6c294ea075f$export$6fb1613bd7b28198() {\n  return $lJcFS$useGridRowGroup();\n}\nexport { $0047e6c294ea075f$export$6fb1613bd7b28198 as useTableRowGroup, $6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable, $f329116d8ad0aba0$export$9514819a8c81e960 as useTableColumnHeader, $b2db214c022798eb$export$7f2f6ae19e707aa5 as useTableRow, $f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow, $7713593715703b24$export$49571c903d73624c as useTableCell, $2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox };\n//# sourceMappingURL=module.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}