{"ast":null,"code":"import { useRef as e, useMemo as o, useState as r, useCallback as s } from \"react\";\nimport { mergeProps as i } from \"@react-aria/utils\";\nimport { useOverlayPosition as t, useOverlayTrigger as l } from \"@react-aria/overlays\";\nimport { useOverlayTriggerState as a } from \"@react-stately/overlays\";\nimport { mergeRefs as n } from \"../utils/refs\";\nimport { getAriaPlacement as p } from \"./utils\";\nexport function usePopover(d = {}) {\n  const {\n      ref: u,\n      triggerRef: f,\n      scrollRef: m,\n      isOpen: g,\n      defaultOpen: O,\n      onOpenChange: c,\n      isBordered: b,\n      borderWeight: h,\n      disableShadow: y,\n      shouldFlip: P = !0,\n      offset: v = 12,\n      placement: C = \"bottom\",\n      onClose: R,\n      triggerType: D = \"dialog\",\n      isDismissable: B = !0,\n      shouldCloseOnBlur: x = !1,\n      isKeyboardDismissDisabled: w = !1,\n      disableAnimation: A = !1,\n      shouldCloseOnInteractOutside: E\n    } = d,\n    F = e(null),\n    I = e(null),\n    K = u || F,\n    S = f || I,\n    T = a({\n      isOpen: g,\n      defaultOpen: O,\n      onOpenChange: c\n    }),\n    [W, j] = r(!T.isOpen),\n    k = o(() => T.isOpen ? \"open\" : \"closed\", [T.isOpen]),\n    q = s(() => {\n      null == R || R(), T.close();\n    }, [T, R]),\n    z = s(() => {\n      j(!1);\n    }, []),\n    G = s(() => {\n      j(!0);\n    }, []),\n    {\n      triggerProps: H,\n      overlayProps: J\n    } = l({\n      type: D\n    }, T, S),\n    L = o(() => p(C), [C]),\n    {\n      overlayProps: M\n    } = t({\n      isOpen: T.isOpen,\n      targetRef: S,\n      scrollRef: m,\n      placement: L,\n      overlayRef: K,\n      shouldFlip: P,\n      offset: v\n    }),\n    N = s((e = {}, o = null) => ({\n      ...(null != f && f.current ? i(H, e) : i(e, H)),\n      ref: n(S, o)\n    }), [S, f, H]),\n    Q = s((e = {}) => ({\n      ...e,\n      ...J,\n      ...M,\n      \"data-state\": k,\n      \"data-placement\": C\n    }), [k, M, J, C]);\n  return {\n    state: T,\n    exited: W,\n    overlayRef: K,\n    triggerRef: S,\n    placement: C,\n    disableShadow: y,\n    disableAnimation: A,\n    shouldCloseOnBlur: x,\n    isDismissable: B,\n    isBordered: b,\n    borderWeight: h,\n    isKeyboardDismissDisabled: w,\n    shouldCloseOnInteractOutside: E,\n    isOpen: T.isOpen,\n    onClose: q,\n    onExited: G,\n    onEntered: z,\n    triggerProps: H,\n    overlayProps: J,\n    positionProps: M,\n    getTriggerProps: N,\n    getPopoverProps: Q\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}