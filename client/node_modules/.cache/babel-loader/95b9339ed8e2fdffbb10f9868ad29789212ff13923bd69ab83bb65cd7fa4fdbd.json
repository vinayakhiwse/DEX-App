{"ast":null,"code":"\"use client\";\n\n// src/use-scroll-shadow.ts\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { scrollShadow } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useDataScrollOverflow } from \"@nextui-org/use-data-scroll-overflow\";\nimport { useMemo } from \"react\";\nfunction useScrollShadow(originalProps) {\n  var _a;\n  const [props, variantProps] = mapPropsVariants(originalProps, scrollShadow.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    className,\n    size = 40,\n    offset = 0,\n    isEnabled = true,\n    style,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  useDataScrollOverflow({\n    domRef,\n    offset,\n    isEnabled,\n    overflowCheck: (_a = originalProps.orientation) != null ? _a : \"vertical\"\n  });\n  const styles = useMemo(() => scrollShadow({\n    ...variantProps,\n    className\n  }), [...Object.values(variantProps), className]);\n  const getBaseProps = (props2 = {}) => {\n    var _a2;\n    return {\n      ref: domRef,\n      className: styles,\n      \"data-orientation\": (_a2 = originalProps.orientation) != null ? _a2 : \"vertical\",\n      style: {\n        \"--scroll-shadow-size\": `${size}px`,\n        ...style,\n        ...props2.style\n      },\n      ...otherProps,\n      ...props2\n    };\n  };\n  return {\n    Component,\n    styles,\n    domRef,\n    children,\n    getBaseProps\n  };\n}\nexport { useScrollShadow };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}