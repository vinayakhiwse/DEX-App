{"ast":null,"code":"import t, { useMemo as e } from \"react\";\nimport r from \"../utils/with-defaults\";\nimport { useDOMRef as o } from \"../utils/dom\";\nimport { __DEV__ as i } from \"../utils/assertion\";\nimport l from \"./child\";\nimport { jsx as s } from \"react/jsx-runtime\";\nconst m = (t, e, r, o) => {\n  if (!t.length) return e;\n  const i = t.slice(1, t.length);\n  return s(l, {\n    tag: t[0],\n    size: r,\n    transform: o,\n    children: m(i, e, r)\n  });\n};\nexport const Text = t.forwardRef((t, r) => {\n  const {\n      h1: i,\n      h2: n,\n      h3: h,\n      h4: a,\n      h5: f,\n      h6: c,\n      b: u,\n      small: d,\n      i: p,\n      span: x,\n      del: b,\n      em: g,\n      blockquote: k,\n      transform: T,\n      size: j,\n      margin: q,\n      children: y,\n      ...z\n    } = t,\n    w = o(r),\n    N = {\n      h1: i,\n      h2: n,\n      h3: h,\n      h4: a,\n      h5: f,\n      h6: c,\n      blockquote: k\n    },\n    O = {\n      span: x,\n      small: d,\n      b: u,\n      em: g,\n      i: p,\n      del: b\n    },\n    I = Object.keys(N).filter(t => N[t]),\n    R = Object.keys(O).filter(t => O[t]),\n    S = e(() => I[0] ? I[0] : R[0] ? R[0] : \"p\", [I, R]),\n    U = R.filter(t => t !== S),\n    v = e(() => U.length ? m(U, y, j, T) : y, [U, y, j, T]);\n  return s(l, {\n    ref: w,\n    transform: T,\n    tag: S,\n    margin: q,\n    size: j,\n    ...z,\n    children: v\n  });\n});\ni && (Text.displayName = \"NextUI.Text\"), Text.toString = () => \".nextui-text\";\nconst n = t.memo(Text);\nexport default r(n, {\n  h1: !1,\n  h2: !1,\n  h3: !1,\n  h4: !1,\n  h5: !1,\n  h6: !1,\n  b: !1,\n  small: !1,\n  transform: \"none\",\n  i: !1,\n  span: !1,\n  del: !1,\n  em: !1,\n  blockquote: !1,\n  color: \"default\"\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}