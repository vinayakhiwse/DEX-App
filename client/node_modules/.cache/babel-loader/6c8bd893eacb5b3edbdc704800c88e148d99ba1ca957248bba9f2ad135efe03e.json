{"ast":null,"code":"import t, { useEffect as e, useRef as i } from \"react\";\nimport { styled as r, keyframes as o } from \"../theme/stitches.config\";\nimport n from \"../utils/with-defaults\";\nimport l from \"../utils/clsx\";\nimport { jsx as s } from \"react/jsx-runtime\";\nconst a = o({\n  \"0%\": {\n    opacity: 0,\n    transform: \"scale(0.25)\"\n  },\n  \"30%\": {\n    opacity: 1\n  },\n  \"80%\": {\n    opacity: .5\n  },\n  \"100%\": {\n    transform: \"scale(28)\",\n    opacity: 0\n  }\n});\nexport const StyledDrip = r(\"div\", {\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  \"& svg\": {\n    position: \"absolute\",\n    animation: `350ms linear ${a}`,\n    animationFillMode: \"forwards\",\n    width: \"$md\",\n    height: \"$md\"\n  }\n});\nconst m = ({\n    visible: t,\n    x: r,\n    y: o,\n    color: n,\n    onCompleted: a,\n    className: m,\n    ...c\n  }) => {\n    const d = i(null),\n      p = Number.isNaN(+o) ? 0 : o - 10,\n      u = Number.isNaN(+r) ? 0 : r - 10;\n    return e(() => {\n      if (d.current) return d.current.addEventListener(\"animationend\", a), () => {\n        d.current && d.current.removeEventListener(\"animationend\", a);\n      };\n    }), t ? s(StyledDrip, {\n      ref: d,\n      className: l(\"nextui-drip\", m),\n      ...c,\n      children: s(\"svg\", {\n        width: \"20\",\n        height: \"20\",\n        viewBox: \"0 0 20 20\",\n        style: {\n          top: p,\n          left: u\n        },\n        children: s(\"g\", {\n          stroke: \"none\",\n          strokeWidth: \"1\",\n          fill: \"none\",\n          fillRule: \"evenodd\",\n          children: s(\"g\", {\n            className: \"nextui-drip-filler\",\n            fill: n,\n            children: s(\"rect\", {\n              width: \"100%\",\n              height: \"100%\",\n              rx: \"10\"\n            })\n          })\n        })\n      })\n    }) : null;\n  },\n  c = t.memo(m);\nexport default n(c, {\n  visible: !1,\n  x: 0,\n  y: 0,\n  className: \"\"\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}