{"ast":null,"code":"import t, { useMemo as r } from \"react\";\nimport e from \"../utils/with-defaults\";\nimport { isNormalColor as o } from \"../utils/color\";\nimport { useDOMRef as i } from \"../utils/dom\";\nimport { __DEV__ as m } from \"../utils/assertion\";\nimport { StyledText as s } from \"./text.styles\";\nimport { jsx as l } from \"react/jsx-runtime\";\nexport const TextChild = t.forwardRef((t, e) => {\n  const {\n      children: m,\n      tag: f,\n      color: n,\n      transform: a,\n      margin: x,\n      size: d,\n      css: c,\n      ...p\n    } = t,\n    u = i(e),\n    h = r(() => o(n) ? \"default\" === n ? \"$text\" : `$${n}` : n, [n]),\n    C = r(() => d ? \"number\" == typeof d ? `${d}px` : d : \"inherit\", [d]),\n    T = r(() => x ? \"number\" == typeof x ? `${d}px` : x : \"inherit\", [x]);\n  return l(s, {\n    ref: u,\n    as: f,\n    css: {\n      color: h,\n      fontSize: d ? C : \"\",\n      margin: T,\n      tt: a,\n      ...c\n    },\n    ...p,\n    children: m\n  });\n});\nm && (TextChild.displayName = \"NextUI.TextChild\"), TextChild.toString = () => \".nextui-text-child\";\nconst f = t.memo(TextChild);\nexport default e(f, {\n  color: \"default\"\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}