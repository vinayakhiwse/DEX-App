{"ast":null,"code":"import { useId as $1Hnir$useId, mergeProps as $1Hnir$mergeProps, filterDOMProps as $1Hnir$filterDOMProps, useSlotId as $1Hnir$useSlotId } from \"@react-aria/utils\";\nimport { useLongPress as $1Hnir$useLongPress, usePress as $1Hnir$usePress, useHover as $1Hnir$useHover, isFocusVisible as $1Hnir$isFocusVisible } from \"@react-aria/interactions\";\nimport { useMessageFormatter as $1Hnir$useMessageFormatter } from \"@react-aria/i18n\";\nimport { useOverlayTrigger as $1Hnir$useOverlayTrigger } from \"@react-aria/overlays\";\nimport { useSelectableList as $1Hnir$useSelectableList, useSelectableItem as $1Hnir$useSelectableItem } from \"@react-aria/selection\";\nimport { getItemCount as $1Hnir$getItemCount } from \"@react-stately/collections\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $168583247155ddda$exports = {};\n$parcel$export($168583247155ddda$exports, \"useMenuTrigger\", () => $168583247155ddda$export$dc9c12ed27dd1b49);\nvar $9bdd31893c9700c3$exports = {};\nvar $c0398ad35c3639b7$exports = {};\n$c0398ad35c3639b7$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\\\"}\");\nvar $7af657c4165927c3$exports = {};\n$7af657c4165927c3$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\\\"}\");\nvar $d95d4da6d531ab81$exports = {};\n$d95d4da6d531ab81$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\\\"}\");\nvar $24ebda9c775dca17$exports = {};\n$24ebda9c775dca17$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\\\"}\");\nvar $743e0dfca6cab1e9$exports = {};\n$743e0dfca6cab1e9$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\\\"}\");\nvar $a2f41026e05f1c84$exports = {};\n$a2f41026e05f1c84$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\\\"}\");\nvar $43b800e97c901737$exports = {};\n$43b800e97c901737$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Long press or press Alt + ArrowDown to open menu\\\"}\");\nvar $442f5f6ac211e29f$exports = {};\n$442f5f6ac211e29f$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\\\"}\");\nvar $dff280acfeb2d8ac$exports = {};\n$dff280acfeb2d8ac$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\\\"}\");\nvar $51608325613944d7$exports = {};\n$51608325613944d7$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\\\"}\");\nvar $c4a1b1eabeaa87be$exports = {};\n$c4a1b1eabeaa87be$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\\\"}\");\nvar $8c74815cdee18d1b$exports = {};\n$8c74815cdee18d1b$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\\\"}\");\nvar $fd0e9ef6a7fe0ec9$exports = {};\n$fd0e9ef6a7fe0ec9$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\\\"}\");\nvar $a89a74a39eba465a$exports = {};\n$a89a74a39eba465a$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\\\"}\");\nvar $edc7c66594a0ae8a$exports = {};\n$edc7c66594a0ae8a$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Premere a lungo o premere Alt + Freccia giù per aprire il menu\\\"}\");\nvar $f1ab51510712db52$exports = {};\n$f1ab51510712db52$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"長押しまたは Alt+下矢印キーでメニューを開く\\\"}\");\nvar $f9b672d9b82fa3d6$exports = {};\n$f9b672d9b82fa3d6$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\\\"}\");\nvar $a385f3910feda499$exports = {};\n$a385f3910feda499$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\\\"}\");\nvar $4f1bde932c441789$exports = {};\n$4f1bde932c441789$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\\\"}\");\nvar $914a51a8a594d5be$exports = {};\n$914a51a8a594d5be$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Langt trykk eller trykk Alt + PilNed for å åpne menyen\\\"}\");\nvar $89aaf803103bb500$exports = {};\n$89aaf803103bb500$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\\\"}\");\nvar $c685891476dbaaca$exports = {};\n$c685891476dbaaca$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\\\"}\");\nvar $885879b9b10c2959$exports = {};\n$885879b9b10c2959$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\\\"}\");\nvar $6b39616688a51692$exports = {};\n$6b39616688a51692$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\\\"}\");\nvar $f26362aed63f47e2$exports = {};\n$f26362aed63f47e2$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\\\"}\");\nvar $06cbade644558bf0$exports = {};\n$06cbade644558bf0$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\\\"}\");\nvar $0a391ff68f9d59b1$exports = {};\n$0a391ff68f9d59b1$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\\\"}\");\nvar $8193cf0e649c7928$exports = {};\n$8193cf0e649c7928$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\\\"}\");\nvar $f398debcce5a5c55$exports = {};\n$f398debcce5a5c55$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\\\"}\");\nvar $9e9fef000aa4c013$exports = {};\n$9e9fef000aa4c013$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\\\"}\");\nvar $c016c8183bbe3d68$exports = {};\n$c016c8183bbe3d68$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\\\"}\");\nvar $ca4f6c8462244e62$exports = {};\n$ca4f6c8462244e62$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\\\"}\");\nvar $2d9960c02ccac927$exports = {};\n$2d9960c02ccac927$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"长按或按 Alt + 向下方向键以打开菜单\\\"}\");\nvar $f1b682a4c8c5631c$exports = {};\n$f1b682a4c8c5631c$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"長按或按 Alt+向下鍵以開啟功能表\\\"}\");\n$9bdd31893c9700c3$exports = {\n  \"ar-AE\": $c0398ad35c3639b7$exports,\n  \"bg-BG\": $7af657c4165927c3$exports,\n  \"cs-CZ\": $d95d4da6d531ab81$exports,\n  \"da-DK\": $24ebda9c775dca17$exports,\n  \"de-DE\": $743e0dfca6cab1e9$exports,\n  \"el-GR\": $a2f41026e05f1c84$exports,\n  \"en-US\": $43b800e97c901737$exports,\n  \"es-ES\": $442f5f6ac211e29f$exports,\n  \"et-EE\": $dff280acfeb2d8ac$exports,\n  \"fi-FI\": $51608325613944d7$exports,\n  \"fr-FR\": $c4a1b1eabeaa87be$exports,\n  \"he-IL\": $8c74815cdee18d1b$exports,\n  \"hr-HR\": $fd0e9ef6a7fe0ec9$exports,\n  \"hu-HU\": $a89a74a39eba465a$exports,\n  \"it-IT\": $edc7c66594a0ae8a$exports,\n  \"ja-JP\": $f1ab51510712db52$exports,\n  \"ko-KR\": $f9b672d9b82fa3d6$exports,\n  \"lt-LT\": $a385f3910feda499$exports,\n  \"lv-LV\": $4f1bde932c441789$exports,\n  \"nb-NO\": $914a51a8a594d5be$exports,\n  \"nl-NL\": $89aaf803103bb500$exports,\n  \"pl-PL\": $c685891476dbaaca$exports,\n  \"pt-BR\": $885879b9b10c2959$exports,\n  \"pt-PT\": $6b39616688a51692$exports,\n  \"ro-RO\": $f26362aed63f47e2$exports,\n  \"ru-RU\": $06cbade644558bf0$exports,\n  \"sk-SK\": $0a391ff68f9d59b1$exports,\n  \"sl-SI\": $8193cf0e649c7928$exports,\n  \"sr-SP\": $f398debcce5a5c55$exports,\n  \"sv-SE\": $9e9fef000aa4c013$exports,\n  \"tr-TR\": $c016c8183bbe3d68$exports,\n  \"uk-UA\": $ca4f6c8462244e62$exports,\n  \"zh-CN\": $2d9960c02ccac927$exports,\n  \"zh-TW\": $f1b682a4c8c5631c$exports\n};\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n  let {\n    type = 'menu',\n    isDisabled: isDisabled,\n    trigger = 'press'\n  } = props;\n  let menuTriggerId = $1Hnir$useId();\n  let {\n    triggerProps: triggerProps,\n    overlayProps: overlayProps\n  } = $1Hnir$useOverlayTrigger({\n    type: type\n  }, state, ref);\n  let onKeyDown = e => {\n    if (isDisabled) return;\n    if (trigger === 'longPress' && !e.altKey) return;\n    if (ref && ref.current) switch (e.key) {\n      case 'Enter':\n      case ' ':\n        if (trigger === 'longPress') return;\n      // fallthrough\n      case 'ArrowDown':\n        // Stop propagation, unless it would already be handled by useKeyboard.\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('first');\n        break;\n      case 'ArrowUp':\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('last');\n        break;\n    }\n  };\n  let formatMessage = $1Hnir$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($9bdd31893c9700c3$exports));\n  let {\n    longPressProps: longPressProps\n  } = $1Hnir$useLongPress({\n    isDisabled: isDisabled || trigger !== 'longPress',\n    accessibilityDescription: formatMessage('longPressMessage'),\n    onLongPressStart() {\n      state.close();\n    },\n    onLongPress() {\n      state.open('first');\n    }\n  });\n  let pressProps = {\n    onPressStart(e) {\n      // For consistency with native, open the menu on mouse/key down, but touch up.\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled)\n        // If opened with a screen reader, auto focus the first item.\n        // Otherwise, the menu itself will be focused.\n        state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n    },\n    onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) state.toggle();\n    }\n  };\n  triggerProps = $1Hnir$mergeProps(triggerProps, trigger === 'press' ? pressProps : longPressProps);\n  return {\n    menuTriggerProps: {\n      ...triggerProps,\n      id: menuTriggerId,\n      onKeyDown: onKeyDown\n    },\n    menuProps: {\n      ...overlayProps,\n      'aria-labelledby': menuTriggerId\n    }\n  };\n}\nvar $d5336fe17ce95402$exports = {};\n$parcel$export($d5336fe17ce95402$exports, \"useMenu\", () => $d5336fe17ce95402$export$38eaa17faae8f579);\nfunction $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {\n  let {\n    shouldFocusWrap = true,\n    ...otherProps\n  } = props;\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  let domProps = $1Hnir$filterDOMProps(props, {\n    labelable: true\n  });\n  let {\n    listProps: listProps\n  } = $1Hnir$useSelectableList({\n    ...otherProps,\n    ref: ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap: shouldFocusWrap\n  });\n  return {\n    menuProps: $1Hnir$mergeProps(domProps, {\n      role: 'menu',\n      ...listProps\n    })\n  };\n}\nvar $a2e5df62f93c7633$exports = {};\n$parcel$export($a2e5df62f93c7633$exports, \"useMenuItem\", () => $a2e5df62f93c7633$export$9d32628fc2aea7da);\nfunction $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {\n  let {\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    key: key,\n    onClose: onClose,\n    closeOnSelect: closeOnSelect,\n    isVirtualized: isVirtualized,\n    onAction: onAction\n  } = props;\n  let role = 'menuitem';\n  if (state.selectionManager.selectionMode === 'single') role = 'menuitemradio';else if (state.selectionManager.selectionMode === 'multiple') role = 'menuitemcheckbox';\n  let labelId = $1Hnir$useSlotId();\n  let descriptionId = $1Hnir$useSlotId();\n  let keyboardId = $1Hnir$useSlotId();\n  let ariaProps = {\n    'aria-disabled': isDisabled,\n    role: role,\n    'aria-label': props['aria-label'],\n    'aria-labelledby': labelId,\n    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n  };\n  if (state.selectionManager.selectionMode !== 'none') ariaProps['aria-checked'] = isSelected;\n  if (isVirtualized) {\n    ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n    ariaProps['aria-setsize'] = $1Hnir$getItemCount(state.collection);\n  }\n  let onKeyDown = e => {\n    // Ignore repeating events, which may have started on the menu trigger before moving\n    // focus to the menu item. We want to wait for a second complete key press sequence.\n    if (e.repeat) return;\n    switch (e.key) {\n      case ' ':\n        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) onClose();\n        break;\n      case 'Enter':\n        // The Enter key should always close on select, except if overridden.\n        if (!isDisabled && closeOnSelect !== false && onClose) onClose();\n        break;\n    }\n  };\n  let onPressStart = e => {\n    if (e.pointerType === 'keyboard' && onAction) onAction(key);\n  };\n  let onPressUp = e => {\n    if (e.pointerType !== 'keyboard') {\n      if (onAction) onAction(key);\n      // Pressing a menu item should close by default in single selection mode but not multiple\n      // selection mode, except if overridden by the closeOnSelect prop.\n      if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== 'multiple')) onClose();\n    }\n  };\n  let {\n    itemProps: itemProps\n  } = $1Hnir$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: key,\n    ref: ref,\n    shouldSelectOnPressUp: true,\n    allowsDifferentPressOrigin: true\n  });\n  let {\n    pressProps: pressProps\n  } = $1Hnir$usePress({\n    onPressStart: onPressStart,\n    onPressUp: onPressUp,\n    isDisabled: isDisabled\n  });\n  let {\n    hoverProps: hoverProps\n  } = $1Hnir$useHover({\n    isDisabled: isDisabled,\n    onHoverStart() {\n      if (!$1Hnir$isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n    }\n  });\n  return {\n    menuItemProps: {\n      ...ariaProps,\n      ...$1Hnir$mergeProps(itemProps, pressProps, hoverProps, {\n        onKeyDown: onKeyDown\n      })\n    },\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    }\n  };\n}\nvar $3e5eb2498db5b506$exports = {};\n$parcel$export($3e5eb2498db5b506$exports, \"useMenuSection\", () => $3e5eb2498db5b506$export$73f7a44322579622);\nfunction $3e5eb2498db5b506$export$73f7a44322579622(props) {\n  let {\n    heading: heading,\n    'aria-label': ariaLabel\n  } = props;\n  let headingId = $1Hnir$useId();\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      // Techincally, menus cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, and only use it\n      // as a label for the nested group.\n      id: headingId,\n      'aria-hidden': true\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\nexport { $168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger, $d5336fe17ce95402$export$38eaa17faae8f579 as useMenu, $a2e5df62f93c7633$export$9d32628fc2aea7da as useMenuItem, $3e5eb2498db5b506$export$73f7a44322579622 as useMenuSection };\n//# sourceMappingURL=module.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}