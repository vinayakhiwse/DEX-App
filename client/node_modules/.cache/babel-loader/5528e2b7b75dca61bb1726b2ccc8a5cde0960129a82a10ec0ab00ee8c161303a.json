{"ast":null,"code":"import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n  return err instanceof TransactionRejectedRpcError || err instanceof InvalidInputRpcError || err instanceof RpcRequestError && err.code === ExecutionRevertedError.code;\n}\nexport function getNodeError(err, args) {\n  const message = (err.details || '').toLowerCase();\n  const executionRevertedError = err.walk(e => e.code === ExecutionRevertedError.code);\n  if (executionRevertedError instanceof BaseError) {\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details\n    });\n  } else if (ExecutionRevertedError.nodeMessage.test(message)) return new ExecutionRevertedError({\n    cause: err,\n    message: err.details\n  });else if (FeeCapTooHighError.nodeMessage.test(message)) return new FeeCapTooHighError({\n    cause: err,\n    maxFeePerGas: args?.maxFeePerGas\n  });else if (FeeCapTooLowError.nodeMessage.test(message)) return new FeeCapTooLowError({\n    cause: err,\n    maxFeePerGas: args?.maxFeePerGas\n  });else if (NonceTooHighError.nodeMessage.test(message)) return new NonceTooHighError({\n    cause: err,\n    nonce: args?.nonce\n  });else if (NonceTooLowError.nodeMessage.test(message)) return new NonceTooLowError({\n    cause: err,\n    nonce: args?.nonce\n  });else if (NonceMaxValueError.nodeMessage.test(message)) return new NonceMaxValueError({\n    cause: err,\n    nonce: args?.nonce\n  });else if (InsufficientFundsError.nodeMessage.test(message)) return new InsufficientFundsError({\n    cause: err\n  });else if (IntrinsicGasTooHighError.nodeMessage.test(message)) return new IntrinsicGasTooHighError({\n    cause: err,\n    gas: args?.gas\n  });else if (IntrinsicGasTooLowError.nodeMessage.test(message)) return new IntrinsicGasTooLowError({\n    cause: err,\n    gas: args?.gas\n  });else if (TransactionTypeNotSupportedError.nodeMessage.test(message)) return new TransactionTypeNotSupportedError({\n    cause: err\n  });else if (TipAboveFeeCapError.nodeMessage.test(message)) return new TipAboveFeeCapError({\n    cause: err,\n    maxFeePerGas: args?.maxFeePerGas,\n    maxPriorityFeePerGas: args?.maxPriorityFeePerGas\n  });\n  return new UnknownNodeError({\n    cause: err\n  });\n}\n//# sourceMappingURL=getNodeError.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}