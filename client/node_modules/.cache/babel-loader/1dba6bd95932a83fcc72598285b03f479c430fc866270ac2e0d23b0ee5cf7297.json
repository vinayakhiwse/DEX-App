{"ast":null,"code":"function f(r) {\n  throw new Error(\"Unexpected object: \" + r);\n}\nvar a = (e => (e[e.First = 0] = \"First\", e[e.Previous = 1] = \"Previous\", e[e.Next = 2] = \"Next\", e[e.Last = 3] = \"Last\", e[e.Specific = 4] = \"Specific\", e[e.Nothing = 5] = \"Nothing\", e))(a || {});\nfunction x(r, n) {\n  let t = n.resolveItems();\n  if (t.length <= 0) return null;\n  let l = n.resolveActiveIndex(),\n    s = l != null ? l : -1,\n    d = (() => {\n      switch (r.focus) {\n        case 0:\n          return t.findIndex(e => !n.resolveDisabled(e));\n        case 1:\n          {\n            let e = t.slice().reverse().findIndex((i, c, u) => s !== -1 && u.length - c - 1 >= s ? !1 : !n.resolveDisabled(i));\n            return e === -1 ? e : t.length - 1 - e;\n          }\n        case 2:\n          return t.findIndex((e, i) => i <= s ? !1 : !n.resolveDisabled(e));\n        case 3:\n          {\n            let e = t.slice().reverse().findIndex(i => !n.resolveDisabled(i));\n            return e === -1 ? e : t.length - 1 - e;\n          }\n        case 4:\n          return t.findIndex(e => n.resolveId(e) === r.id);\n        case 5:\n          return null;\n        default:\n          f(r);\n      }\n    })();\n  return d === -1 ? l : d;\n}\nexport { a as Focus, x as calculateActiveIndex };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}