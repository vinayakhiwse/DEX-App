{"ast":null,"code":"\"use client\";\n\n// src/table-row.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableRow } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableRow = forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    as,\n    className,\n    children,\n    node,\n    slots,\n    state,\n    isSelectable,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"tr\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const {\n    rowProps\n  } = useTableRow({\n    node\n  }, state, domRef);\n  const trStyles = clsx(classNames == null ? void 0 : classNames.tr, className, (_a = node.props) == null ? void 0 : _a.className);\n  const {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing();\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isSelected = state.selectionManager.isSelected(node.key);\n  const {\n    isHovered,\n    hoverProps\n  } = useHover({\n    isDisabled\n  });\n  const {\n    isFirst,\n    isLast,\n    isMiddle,\n    isOdd\n  } = useMemo(() => {\n    const isFirst2 = node.key === state.collection.getFirstKey();\n    const isLast2 = node.key === state.collection.getLastKey();\n    const isMiddle2 = !isFirst2 && !isLast2;\n    const isOdd2 = (node == null ? void 0 : node.index) ? (node.index + 1) % 2 === 0 : false;\n    return {\n      isFirst: isFirst2,\n      isLast: isLast2,\n      isMiddle: isMiddle2,\n      isOdd: isOdd2\n    };\n  }, [node, state.collection]);\n  return /* @__PURE__ */jsx(Component, {\n    ref: domRef,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-first\": dataAttr(isFirst),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-hover\": dataAttr(isHovered),\n    \"data-last\": dataAttr(isLast),\n    \"data-middle\": dataAttr(isMiddle),\n    \"data-odd\": dataAttr(isOdd),\n    \"data-selected\": dataAttr(isSelected),\n    ...mergeProps(rowProps, focusProps, isSelectable ? hoverProps : {}, filterDOMProps(node.props, {\n      enabled: shouldFilterDOMProps\n    }), otherProps),\n    className: (_b = slots.tr) == null ? void 0 : _b.call(slots, {\n      class: trStyles\n    }),\n    children\n  });\n});\nTableRow.displayName = \"NextUI.TableRow\";\nvar table_row_default = TableRow;\nexport { table_row_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}