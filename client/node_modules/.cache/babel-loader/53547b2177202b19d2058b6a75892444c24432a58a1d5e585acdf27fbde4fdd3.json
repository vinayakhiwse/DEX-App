{"ast":null,"code":"import { filterDOMProps as $e3Dei$filterDOMProps, clamp as $e3Dei$clamp, mergeProps as $e3Dei$mergeProps } from \"@react-aria/utils\";\nimport { useLabel as $e3Dei$useLabel } from \"@react-aria/label\";\nimport { useNumberFormatter as $e3Dei$useNumberFormatter } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $204d9ebcedfb8806$export$ed5abd763a836edc(props) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel: valueLabel,\n    isIndeterminate: isIndeterminate,\n    formatOptions = {\n      style: \"percent\"\n    }\n  } = props;\n  let domProps = (0, $e3Dei$filterDOMProps)(props, {\n    labelable: true\n  });\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  } = (0, $e3Dei$useLabel)({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: \"span\"\n  });\n  value = (0, $e3Dei$clamp)(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = (0, $e3Dei$useNumberFormatter)(formatOptions);\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === \"percent\" ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n  return {\n    progressBarProps: (0, $e3Dei$mergeProps)(domProps, {\n      ...fieldProps,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuemin\": minValue,\n      \"aria-valuemax\": maxValue,\n      \"aria-valuetext\": isIndeterminate ? undefined : valueLabel,\n      role: \"progressbar\"\n    }),\n    labelProps: labelProps\n  };\n}\nexport { $204d9ebcedfb8806$export$ed5abd763a836edc as useProgressBar };\n//# sourceMappingURL=module.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}