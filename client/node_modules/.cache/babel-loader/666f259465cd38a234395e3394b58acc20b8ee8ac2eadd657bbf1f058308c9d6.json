{"ast":null,"code":"import { contract } from \"./contract\";\nimport { toWei } from \"./ether-utils\";\nexport const TransactionRecord = async () => {\n  try {\n    const TransactionObj = await contract();\n    const count = await TransactionObj.transactionCount();\n    const newCount = Number(toWei(count.toString())) / 1000000000000000000;\n    let transactionArray = [];\n    for (let i = 0; i < newCount; i++) {\n      const data = await TransactionObj.transaction(i);\n      clg;\n      transactionArray.push({\n        ...data\n      });\n    }\n    return transactionArray;\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c = TransactionRecord;\nvar _c;\n$RefreshReg$(_c, \"TransactionRecord\");","map":{"version":3,"names":["contract","toWei","TransactionRecord","TransactionObj","count","transactionCount","newCount","Number","toString","transactionArray","i","data","transaction","clg","push","error","console","log","_c","$RefreshReg$"],"sources":["/home/hp/Desktop/client/src/utils/transactionRecord.js"],"sourcesContent":["import { contract } from \"./contract\";\nimport { toWei } from \"./ether-utils\";\n\nexport const TransactionRecord = async () => {\n  try {\n    const TransactionObj = await contract();\n    const count = await TransactionObj.transactionCount();\n    const newCount = Number(toWei(count.toString())) / 1000000000000000000;\n    let transactionArray = [];\n    for (let i = 0; i < newCount; i++) {\n      const data = await TransactionObj.transaction(i);\n      clg\n      transactionArray.push({ ...data });\n    }\n    return transactionArray;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAQ,eAAe;AAErC,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMH,QAAQ,CAAC,CAAC;IACvC,MAAMI,KAAK,GAAG,MAAMD,cAAc,CAACE,gBAAgB,CAAC,CAAC;IACrD,MAAMC,QAAQ,GAAGC,MAAM,CAACN,KAAK,CAACG,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,mBAAmB;IACtE,IAAIC,gBAAgB,GAAG,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;MACjC,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAACS,WAAW,CAACF,CAAC,CAAC;MAChDG,GAAG;MACHJ,gBAAgB,CAACK,IAAI,CAAC;QAAE,GAAGH;MAAK,CAAC,CAAC;IACpC;IACA,OAAOF,gBAAgB;EACzB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAACG,EAAA,GAfWhB,iBAAiB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}