{"ast":null,"code":"import e from \"react\";\nexport const getId = () => Math.random().toString(32).slice(2, 10);\nexport const hasChild = (t, n) => (e.Children.map(t, t => e.isValidElement(t) ? t.type : null) || []).includes(n);\nexport const pick = (e, t) => e.reduce((e, n) => (e[n] = t[n], e), {});\nexport const pickChild = (t, n) => {\n  let r = [];\n  return [e.Children.map(t, t => e.isValidElement(t) && t.type === n ? (r.push(t), null) : t), r.length >= 0 ? r : void 0];\n};\nexport const pickSingleChild = (e, t) => {\n  const [n, r] = pickChild(e, t);\n  let o = null;\n  return r && r.length >= 1 && (o = r.length >= 0 ? r[0] : void 0), [n, o];\n};\nexport const isChildElement = (e, t) => {\n  if (!e || !t) return !1;\n  let n = t;\n  for (; n;) {\n    if (n === e) return !0;\n    n = n.parentNode;\n  }\n  return !1;\n};\nexport const isBrowser = () => Boolean(\"undefined\" != typeof window && window.document && window.document.createElement);\nexport const isMac = () => !!Boolean(\"undefined\" != typeof window && window.document && window.document.createElement) && navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\nexport const setChildrenIndex = (t, n = []) => {\n  if (0 === e.Children.count(t)) return [];\n  const r = 0 === n.length,\n    o = (t, n = {}) => e.cloneElement(t, n);\n  let i = 0;\n  return e.Children.map(t, t => {\n    if (!e.isValidElement(t)) return t;\n    if (i += 1, r) return o(t, {\n      index: i\n    });\n    return n.find(e => e === t.type) ? o(t, {\n      index: i\n    }) : (i -= 1, t);\n  });\n};\nexport const flattenArray = e => e.reduce((e, t) => e.concat(Array.isArray(t) ? flattenArray(t) : t), []);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}