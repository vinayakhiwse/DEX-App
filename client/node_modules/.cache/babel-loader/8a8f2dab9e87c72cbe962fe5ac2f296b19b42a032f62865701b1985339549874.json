{"ast":null,"code":"import e, { useCallback as t, useEffect as a, useMemo as i, useState as o } from \"react\";\nimport r from \"../utils/with-defaults\";\nimport n from \"../use-warning\";\nimport s, { KeyCode as d } from \"../use-keyboard\";\nimport { StyledSwitch as c, StyledSwitchContainer as l, StyledSwitchInput as m, StyledSwitchCircle as h } from \"./switch.styles\";\nimport u from \"../utils/clsx\";\nimport { __DEV__ as p } from \"../utils/assertion\";\nimport { jsx as f } from \"react/jsx-runtime\";\nimport { jsxs as b } from \"react/jsx-runtime\";\nconst k = \"nextui-switch\",\n  x = ({\n    initialChecked: e,\n    checked: r,\n    disabled: x,\n    onChange: v,\n    squared: w,\n    bordered: g,\n    shadow: $,\n    icon: D,\n    iconOn: j,\n    iconOff: C,\n    animated: O,\n    preventDefault: q,\n    ...y\n  }) => {\n    const [E, N] = o(e);\n    D && p && (j || C) && n('Remove props \"icon\" if iconOn or iconOff exists.', \"Switch\");\n    const S = t(e => {\n        if (x) return;\n        const t = {\n          target: {\n            checked: !E\n          },\n          stopPropagation: e.stopPropagation,\n          preventDefault: e.preventDefault,\n          nativeEvent: e\n        };\n        N(!E), v && v(t);\n      }, [x, E, v]),\n      {\n        bindings: B\n      } = s(e => {\n        S(e);\n      }, [d.Enter, d.Space], {\n        disableGlobalEvent: !0,\n        preventDefault: q\n      }),\n      I = i(() => {\n        const e = D || j || C,\n          t = Boolean(j),\n          a = Boolean(C);\n        return e ? t && E ? j : a && !E ? C : e : null;\n      }, [E, D, j, C]);\n    a(() => {\n      void 0 !== r && N(r);\n    }, [r]);\n    const P = i(() => E ? \"checked\" : \"unchecked\", [E]);\n    return b(l, {\n      \"data-state\": P,\n      disabled: x,\n      animated: O,\n      ...y,\n      children: [f(m, {\n        tabIndex: -1,\n        type: \"checkbox\",\n        className: u(`${k}-input`),\n        \"data-state\": P,\n        disabled: x,\n        checked: E,\n        onChange: S\n      }), f(c, {\n        role: \"switch\",\n        tabIndex: x ? -1 : 0,\n        checked: E,\n        \"aria-checked\": E,\n        \"aria-disabled\": x,\n        animated: O,\n        disabled: x,\n        squared: w,\n        bordered: g,\n        shadow: $,\n        \"data-state\": P,\n        className: u(k, `${k}--${P}`, {\n          [`${k}-checked`]: E,\n          [`${k}-disabled`]: x\n        }),\n        ...B,\n        children: f(h, {\n          className: `${k}-circle`,\n          children: I\n        })\n      })]\n    });\n  };\nx.toString = () => \".nextui-switch\";\nconst v = e.memo(x);\nexport default r(v, {\n  disabled: !1,\n  bordered: !1,\n  shadow: !1,\n  squared: !1,\n  animated: !0,\n  preventDefault: !0,\n  initialChecked: !1\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}