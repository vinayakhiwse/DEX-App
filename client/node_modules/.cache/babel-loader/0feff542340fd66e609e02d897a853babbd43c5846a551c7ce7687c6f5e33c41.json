{"ast":null,"code":"import e, { useMemo as t } from \"react\";\nimport { DOTS as r } from \"../use-pagination\";\nimport n from \"../utils/clsx\";\nimport a from \"../utils/with-defaults\";\nimport { StyledPaginationItem as i, StyledPaginationItemContent as o } from \"./pagination.styles\";\nimport { jsx as s } from \"react/jsx-runtime\";\nconst l = e => {\n    if (e) switch (e) {\n      case r:\n        return \"dots element\";\n      case \"<\":\n        return \"previous page button\";\n      case \">\":\n        return \"next page button\";\n      case \"first\":\n        return \"first page button\";\n      case \"last\":\n        return \"last page button\";\n      default:\n        return `${e} item`;\n    }\n  },\n  c = \"nextui-pagination-item\",\n  d = ({\n    active: e,\n    value: r,\n    children: a,\n    disabled: d,\n    animated: m,\n    bordered: u,\n    onClick: p,\n    onlyDots: b,\n    preserveContent: f,\n    ...v\n  }) => {\n    const g = t(() => e ? `${l(r)} active` : l(r), [r, e]);\n    return s(i, {\n      className: n(c, {\n        [`${c}-active`]: e,\n        [`${c}-animated`]: m,\n        [`${c}-disabled`]: d,\n        [`${c}-bordered`]: u,\n        [`${c}-only-dots`]: b,\n        [`${c}-preserve-content`]: f\n      }),\n      animated: m,\n      active: e,\n      disabled: d,\n      bordered: u,\n      onlyDots: b,\n      preserveContent: f,\n      onClick: e => {\n        d || p && p(e);\n      },\n      \"aria-label\": g,\n      tabIndex: d ? -1 : 0,\n      ...v,\n      children: s(o, {\n        className: `${c}-content`,\n        children: a\n      })\n    });\n  };\nd.toString = () => \".nextui-pagination-item\";\nexport default a(d, {\n  preserveContent: !1\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}