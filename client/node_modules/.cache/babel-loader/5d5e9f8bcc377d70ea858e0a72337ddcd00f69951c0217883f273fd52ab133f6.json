{"ast":null,"code":"\"use client\";\n\n// src/use-pagination-item.ts\nimport { useMemo } from \"react\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useHover, usePress } from \"@react-aria/interactions\";\nimport { useFocusRing } from \"@react-aria/focus\";\nfunction usePaginationItem(props) {\n  const {\n    as,\n    ref,\n    value,\n    children,\n    isActive,\n    isDisabled,\n    onPress,\n    onClick,\n    getAriaLabel,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"li\";\n  const domRef = useDOMRef(ref);\n  const ariaLabel = useMemo(() => isActive ? `${getAriaLabel == null ? void 0 : getAriaLabel(value)} active` : getAriaLabel == null ? void 0 : getAriaLabel(value), [value, isActive]);\n  const {\n    isPressed,\n    pressProps\n  } = usePress({\n    isDisabled,\n    onPress\n  });\n  const {\n    focusProps,\n    isFocused,\n    isFocusVisible\n  } = useFocusRing({});\n  const {\n    isHovered,\n    hoverProps\n  } = useHover({\n    isDisabled\n  });\n  const getItemProps = (props2 = {}) => {\n    return {\n      ref: domRef,\n      role: \"button\",\n      tabIndex: isDisabled ? -1 : 0,\n      \"aria-label\": ariaLabel,\n      \"aria-current\": dataAttr(isActive),\n      \"aria-disabled\": dataAttr(isDisabled),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-active\": dataAttr(isActive),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-pressed\": dataAttr(isPressed),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      ...mergeProps(props2, pressProps, focusProps, hoverProps, otherProps),\n      className: clsx(className, props2.className),\n      onClick: chain(pressProps.onClick, onClick)\n    };\n  };\n  return {\n    Component,\n    children,\n    ariaLabel,\n    isFocused,\n    isFocusVisible,\n    getItemProps\n  };\n}\nexport { usePaginationItem };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}