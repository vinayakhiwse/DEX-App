{"ast":null,"code":"// src/use-skeleton.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { skeleton } from \"@nextui-org/theme\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nfunction useSkeleton(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, skeleton.variantKeys);\n  const {\n    as,\n    children,\n    isLoaded = false,\n    className,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const slots = useMemo(() => skeleton({\n    ...variantProps\n  }), [...Object.values(variantProps), children]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getSkeletonProps = (props2 = {}) => {\n    return {\n      \"data-loaded\": dataAttr(isLoaded),\n      className: slots.base({\n        class: clsx(baseStyles, props2 == null ? void 0 : props2.className)\n      }),\n      ...otherProps\n    };\n  };\n  const getContentProps = (props2 = {}) => {\n    return {\n      className: slots.content({\n        class: clsx(classNames == null ? void 0 : classNames.content, props2 == null ? void 0 : props2.className)\n      })\n    };\n  };\n  return {\n    Component,\n    children,\n    slots,\n    classNames,\n    getSkeletonProps,\n    getContentProps\n  };\n}\nexport { useSkeleton };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}