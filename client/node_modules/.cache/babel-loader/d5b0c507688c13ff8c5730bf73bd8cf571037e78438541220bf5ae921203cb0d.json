{"ast":null,"code":"import { useControlledState as $bOkae$useControlledState } from \"@react-stately/utils\";\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $3017fa7ffdddec74$exports = {};\n$parcel$export($3017fa7ffdddec74$exports, \"useToggleState\", () => $3017fa7ffdddec74$export$8042c6c013fd5226);\nfunction $3017fa7ffdddec74$export$8042c6c013fd5226(props = {}) {\n  let {\n    isReadOnly: isReadOnly\n  } = props;\n  // have to provide an empty function so useControlledState doesn't throw a fit\n  // can't use useControlledState's prop calling because we need the event object from the change\n  let [isSelected, setSelected] = $bOkae$useControlledState(props.isSelected, props.defaultSelected || false, props.onChange);\n  function updateSelected(value) {\n    if (!isReadOnly) setSelected(value);\n  }\n  function toggleState() {\n    if (!isReadOnly) setSelected(!isSelected);\n  }\n  return {\n    isSelected: isSelected,\n    setSelected: updateSelected,\n    toggle: toggleState\n  };\n}\nexport { $3017fa7ffdddec74$export$8042c6c013fd5226 as useToggleState };\n//# sourceMappingURL=module.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}