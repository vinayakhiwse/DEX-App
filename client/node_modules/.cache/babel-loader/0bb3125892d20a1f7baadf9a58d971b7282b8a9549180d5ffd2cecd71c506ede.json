{"ast":null,"code":"import r, { useRef as e, useImperativeHandle as o } from \"react\";\nimport { useTableColumnHeader as t } from \"@react-aria/table\";\nimport { StyledTableColumnHeader as i } from \"./table.styles\";\nimport { useFocusRing as s } from \"@react-aria/focus\";\nimport { mergeProps as a } from \"@react-aria/utils\";\nimport { VisuallyHidden as l } from \"@react-aria/visually-hidden\";\nimport c, { ICON_SIZE as n } from \"./table-sort-icon\";\nimport m from \"../utils/clsx\";\nimport { jsx as u } from \"react/jsx-runtime\";\nimport { jsxs as d } from \"react/jsx-runtime\";\nconst p = r.forwardRef(({\n  column: r,\n  state: p,\n  ...f\n}, b) => {\n  var x, h;\n  const v = e(null);\n  o(b, () => null == v ? void 0 : v.current);\n  const {\n      columnHeaderProps: g\n    } = t({\n      node: r\n    }, p, v),\n    {\n      isFocusVisible: j,\n      focusProps: y\n    } = s(),\n    {\n      hideHeader: N,\n      ...H\n    } = r.props;\n  return d(i, {\n    ref: v,\n    isFocusVisible: j,\n    colSpan: r.colspan,\n    className: m(\"nextui-table-column-header\", f.className),\n    ...a(f, g, y, H),\n    children: [N ? u(l, {\n      children: r.rendered\n    }) : r.rendered, H.allowsSorting && u(c, {\n      visible: (null == (x = p.sortDescriptor) ? void 0 : x.column) === r.key,\n      ascending: \"ascending\" === (null == (h = p.sortDescriptor) ? void 0 : h.direction),\n      css: {\n        position: \"absolute\",\n        m: \"0 $2\",\n        bottom: `calc(50% - ${n / 2}px)`\n      }\n    })]\n  });\n});\np.displayName = \"NextUI.TableColumnHeader\", p.toString = () => \".nextui-table-column-header\";\nexport default p;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}