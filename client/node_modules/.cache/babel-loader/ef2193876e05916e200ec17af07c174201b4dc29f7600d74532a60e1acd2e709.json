{"ast":null,"code":"import { AbiFunctionNotFoundError } from '../../errors/abi.js';\nimport { concatHex } from '../data/concat.js';\nimport { getFunctionSelector } from '../hash/getFunctionSelector.js';\nimport { encodeAbiParameters } from './encodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nexport function encodeFunctionData({\n  abi,\n  args,\n  functionName\n}) {\n  let abiItem = abi[0];\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName\n    });\n    if (!abiItem) throw new AbiFunctionNotFoundError(functionName, {\n      docsPath: '/docs/contract/encodeFunctionData'\n    });\n  }\n  if (abiItem.type !== 'function') throw new AbiFunctionNotFoundError(undefined, {\n    docsPath: '/docs/contract/encodeFunctionData'\n  });\n  const definition = formatAbiItem(abiItem);\n  const signature = getFunctionSelector(definition);\n  const data = 'inputs' in abiItem && abiItem.inputs ? encodeAbiParameters(abiItem.inputs, args ?? []) : undefined;\n  return concatHex([signature, data ?? '0x']);\n}\n//# sourceMappingURL=encodeFunctionData.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}