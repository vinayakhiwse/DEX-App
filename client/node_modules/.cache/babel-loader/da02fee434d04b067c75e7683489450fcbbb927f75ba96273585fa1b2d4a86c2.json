{"ast":null,"code":"\"use client\";\n\nimport { menu_item_default } from \"./chunk-ZIIFKCEW.mjs\";\n\n// src/menu-section.tsx\nimport { menuSection } from \"@nextui-org/theme\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { Divider } from \"@nextui-org/divider\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuSection = forwardRef(({\n  item,\n  state,\n  as,\n  variant,\n  color,\n  disableAnimation,\n  onAction,\n  closeOnSelect,\n  className,\n  classNames,\n  showDivider = false,\n  dividerProps = {},\n  itemClasses,\n  title,\n  ...otherProps\n}, _) => {\n  const Component = as || \"li\";\n  const slots = useMemo(() => menuSection(), []);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const dividerStyles = clsx(classNames == null ? void 0 : classNames.divider, dividerProps == null ? void 0 : dividerProps.className);\n  const {\n    itemProps,\n    headingProps,\n    groupProps\n  } = useMenuSection({\n    heading: item.rendered,\n    \"aria-label\": item[\"aria-label\"]\n  });\n  return /* @__PURE__ */jsxs(Component, {\n    \"data-slot\": \"base\",\n    ...mergeProps(itemProps, otherProps),\n    className: slots.base({\n      class: baseStyles\n    }),\n    children: [item.rendered && /* @__PURE__ */jsx(\"span\", {\n      ...headingProps,\n      className: slots.heading({\n        class: classNames == null ? void 0 : classNames.heading\n      }),\n      \"data-slot\": \"heading\",\n      children: item.rendered\n    }), /* @__PURE__ */jsxs(\"ul\", {\n      ...groupProps,\n      className: slots.group({\n        class: classNames == null ? void 0 : classNames.group\n      }),\n      \"data-has-title\": !!item.rendered,\n      \"data-slot\": \"group\",\n      children: [[...item.childNodes].map(node => {\n        const {\n          key: nodeKey,\n          props: nodeProps\n        } = node;\n        let menuItem = /* @__PURE__ */jsx(menu_item_default, {\n          classNames: itemClasses,\n          closeOnSelect,\n          color,\n          disableAnimation,\n          item: node,\n          state,\n          variant,\n          onAction,\n          ...nodeProps\n        }, nodeKey);\n        if (node.wrapper) {\n          menuItem = node.wrapper(menuItem);\n        }\n        return menuItem;\n      }), showDivider && /* @__PURE__ */jsx(Divider, {\n        as: \"li\",\n        className: slots.divider({\n          class: dividerStyles\n        }),\n        ...dividerProps\n      })]\n    })]\n  });\n});\nMenuSection.displayName = \"NextUI.MenuSection\";\nvar menu_section_default = MenuSection;\nexport { menu_section_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}