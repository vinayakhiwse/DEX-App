{"ast":null,"code":"\"use client\";\n\nimport { useProgress } from \"./chunk-HB7GJPUL.mjs\";\n\n// src/progress.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Progress = forwardRef((props, ref) => {\n  const {\n    Component,\n    slots,\n    classNames,\n    label,\n    percentage,\n    showValueLabel,\n    getProgressBarProps,\n    getLabelProps\n  } = useProgress({\n    ...props,\n    ref\n  });\n  const progressBarProps = getProgressBarProps();\n  const shouldShowLabelWrapper = label || showValueLabel;\n  return /* @__PURE__ */jsxs(Component, {\n    ...progressBarProps,\n    children: [shouldShowLabelWrapper ? /* @__PURE__ */jsxs(\"div\", {\n      className: slots.labelWrapper({\n        class: classNames == null ? void 0 : classNames.labelWrapper\n      }),\n      children: [label && /* @__PURE__ */jsx(\"span\", {\n        ...getLabelProps(),\n        children: label\n      }), showValueLabel && /* @__PURE__ */jsx(\"span\", {\n        className: slots.value({\n          class: classNames == null ? void 0 : classNames.value\n        }),\n        children: progressBarProps[\"aria-valuetext\"]\n      })]\n    }) : null, /* @__PURE__ */jsx(\"div\", {\n      className: slots.track({\n        class: classNames == null ? void 0 : classNames.track\n      }),\n      children: /* @__PURE__ */jsx(\"div\", {\n        className: slots.indicator({\n          class: classNames == null ? void 0 : classNames.indicator\n        }),\n        style: {\n          transform: `translateX(-${100 - (percentage || 0)}%)`\n        }\n      })\n    })]\n  });\n});\nProgress.displayName = \"NextUI.Progress\";\nvar progress_default = Progress;\nexport { progress_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}