{"ast":null,"code":"import t, { useEffect as e, useMemo as r, useState as o } from \"react\";\nimport a from \"./image.skeleton\";\nimport i from \"../use-real-shape\";\nimport s from \"../use-current-state\";\nimport m from \"../use-resize\";\nimport { useDOMRef as n } from \"../utils/dom\";\nimport { __DEV__ as c } from \"../utils/assertion\";\nimport { StyledImage as u, StyledImageContainer as l } from \"./image.styles\";\nimport p from \"../utils/clsx\";\nimport { jsx as f } from \"react/jsx-runtime\";\nimport { jsxs as d } from \"react/jsx-runtime\";\nexport const Image = t.forwardRef((t, c) => {\n  const {\n      src: g,\n      width: h,\n      height: x,\n      showSkeleton: w = !0,\n      className: y,\n      maxDelay: j = 3e3,\n      autoResize: I = !1,\n      objectFit: N = \"scale-down\",\n      containerCss: b,\n      css: T,\n      ...$\n    } = t,\n    k = n(c),\n    [z, F] = o(!0),\n    [R, S] = o(w),\n    {\n      w: C,\n      h: D\n    } = r(() => ({\n      w: h ? \"number\" == typeof h ? `${h}px` : h : \"auto\",\n      h: x ? \"number\" == typeof x ? `${x}px` : x : \"auto\"\n    }), [h, x]),\n    [L, U, q] = s(D),\n    [v, A] = i(k),\n    B = w && !!h && !!x;\n  e(() => {\n    k.current && k.current.complete && (F(!1), S(!1));\n  }), e(() => {\n    const t = setTimeout(() => {\n      B && S(!1), clearTimeout(t);\n    }, j);\n    return () => clearTimeout(t);\n  }, [z]), e(() => {\n    if (!I) return;\n    const t = 0 === v.width,\n      e = \"auto\" === q.current;\n    !t && h && x && (v.width < h ? !e && U(\"auto\") : e && U(D));\n  }, [v, h]), m(() => {\n    I && A();\n  });\n  const E = r(() => z ? \"loading\" : \"ready\", [z]);\n  return d(l, {\n    className: p(\"nextui-image-container\", `nextui-image--${E}`, y),\n    \"data-state\": E,\n    ready: !z || R,\n    css: {\n      width: C,\n      height: L,\n      ...b\n    },\n    children: [R && f(a, {\n      opacity: 1\n    }), f(u, {\n      ref: k,\n      className: \"nextui-image\",\n      width: h,\n      height: x,\n      onLoad: () => {\n        F(!1);\n      },\n      src: g,\n      \"data-state\": E,\n      alt: t.alt || \"\",\n      css: {\n        objectFit: N,\n        ...T\n      },\n      ...$\n    })]\n  });\n});\nc && (Image.displayName = \"NextUI.Image\"), Image.toString = () => \".nextui-image\";\nexport default t.memo(Image);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}