{"ast":null,"code":"import { useGridRowGroup as $lJcFS$useGridRowGroup, useGrid as $lJcFS$useGrid, GridKeyboardDelegate as $lJcFS$GridKeyboardDelegate, useGridCell as $lJcFS$useGridCell, useGridRow as $lJcFS$useGridRow, useGridSelectionCheckbox as $lJcFS$useGridSelectionCheckbox } from \"@react-aria/grid\";\nimport { announce as $lJcFS$announce } from \"@react-aria/live-announcer\";\nimport { useId as $lJcFS$useId, useDescription as $lJcFS$useDescription, useUpdateEffect as $lJcFS$useUpdateEffect, mergeProps as $lJcFS$mergeProps, isAndroid as $lJcFS$isAndroid, getSyntheticLinkProps as $lJcFS$getSyntheticLinkProps, useEffectEvent as $lJcFS$useEffectEvent } from \"@react-aria/utils\";\nimport { useMemo as $lJcFS$useMemo, useEffect as $lJcFS$useEffect, useRef as $lJcFS$useRef, useCallback as $lJcFS$useCallback } from \"react\";\nimport { tableNestedRows as $lJcFS$tableNestedRows } from \"@react-stately/flags\";\nimport { useCollator as $lJcFS$useCollator, useLocale as $lJcFS$useLocale, useLocalizedStringFormatter as $lJcFS$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { getFirstItem as $lJcFS$getFirstItem, getChildNodes as $lJcFS$getChildNodes, getNthItem as $lJcFS$getNthItem, getLastItem as $lJcFS$getLastItem } from \"@react-stately/collections\";\nimport { useFocusable as $lJcFS$useFocusable, focusSafely as $lJcFS$focusSafely } from \"@react-aria/focus\";\nimport { usePress as $lJcFS$usePress, useKeyboard as $lJcFS$useKeyboard, useMove as $lJcFS$useMove, useInteractionModality as $lJcFS$useInteractionModality } from \"@react-aria/interactions\";\nimport { useVisuallyHidden as $lJcFS$useVisuallyHidden } from \"@react-aria/visually-hidden\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst $2140fb2337097f2d$export$552312adfd451dab = new WeakMap();\nfunction $2140fb2337097f2d$var$normalizeKey(key) {\n  if (typeof key === \"string\") return key.replace(/\\s*/g, \"\");\n  return \"\" + key;\n}\nfunction $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error(\"Unknown grid\");\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\nfunction $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error(\"Unknown grid\");\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\nfunction $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(\" \");\n}\nvar $7476b46781682bf5$exports = {};\nvar $ce3de3ff2fd66848$exports = {};\n$ce3de3ff2fd66848$exports = {\n  \"ascending\": `تصاعدي`,\n  \"ascendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,\n  \"columnSize\": args => `${args.value} بالبكسل`,\n  \"descending\": `تنازلي`,\n  \"descendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,\n  \"resizerDescription\": `اضغط على مفتاح Enter لبدء تغيير الحجم`,\n  \"select\": `تحديد`,\n  \"selectAll\": `تحديد الكل`,\n  \"sortable\": `عمود قابل للترتيب`\n};\nvar $cb80dcce530985b9$exports = {};\n$cb80dcce530985b9$exports = {\n  \"ascending\": `възходящ`,\n  \"ascendingSort\": args => `сортирано по колона ${args.columnName} във възходящ ред`,\n  \"columnSize\": args => `${args.value} пиксела`,\n  \"descending\": `низходящ`,\n  \"descendingSort\": args => `сортирано по колона ${args.columnName} в низходящ ред`,\n  \"resizerDescription\": `Натиснете „Enter“, за да започнете да преоразмерявате`,\n  \"select\": `Изберете`,\n  \"selectAll\": `Изберете всичко`,\n  \"sortable\": `сортираща колона`\n};\nvar $68ac86749db4c0fb$exports = {};\n$68ac86749db4c0fb$exports = {\n  \"ascending\": `vzestupně`,\n  \"ascendingSort\": args => `řazeno vzestupně podle sloupce ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixelů`,\n  \"descending\": `sestupně`,\n  \"descendingSort\": args => `řazeno sestupně podle sloupce ${args.columnName}`,\n  \"resizerDescription\": `Stisknutím klávesy Enter začnete měnit velikost`,\n  \"select\": `Vybrat`,\n  \"selectAll\": `Vybrat vše`,\n  \"sortable\": `sloupec s možností řazení`\n};\nvar $9a6cbac08487e661$exports = {};\n$9a6cbac08487e661$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `faldende`,\n  \"descendingSort\": args => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,\n  \"resizerDescription\": `Tryk på Enter for at ændre størrelse`,\n  \"select\": `Vælg`,\n  \"selectAll\": `Vælg alle`,\n  \"sortable\": `sorterbar kolonne`\n};\nvar $c963661d89486e72$exports = {};\n$c963661d89486e72$exports = {\n  \"ascending\": `aufsteigend`,\n  \"ascendingSort\": args => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,\n  \"columnSize\": args => `${args.value} Pixel`,\n  \"descending\": `absteigend`,\n  \"descendingSort\": args => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,\n  \"resizerDescription\": `Eingabetaste zum Starten der Größenänderung drücken`,\n  \"select\": `Auswählen`,\n  \"selectAll\": `Alles auswählen`,\n  \"sortable\": `sortierbare Spalte`\n};\nvar $ac03861c6e8605f4$exports = {};\n$ac03861c6e8605f4$exports = {\n  \"ascending\": `αύξουσα`,\n  \"ascendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `φθίνουσα`,\n  \"descendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,\n  \"resizerDescription\": `Πατήστε Enter για έναρξη της αλλαγής μεγέθους`,\n  \"select\": `Επιλογή`,\n  \"selectAll\": `Επιλογή όλων`,\n  \"sortable\": `Στήλη διαλογής`\n};\nvar $09e6b82e0d6e466a$exports = {};\n$09e6b82e0d6e466a$exports = {\n  \"select\": `Select`,\n  \"selectAll\": `Select All`,\n  \"sortable\": `sortable column`,\n  \"ascending\": `ascending`,\n  \"descending\": `descending`,\n  \"ascendingSort\": args => `sorted by column ${args.columnName} in ascending order`,\n  \"descendingSort\": args => `sorted by column ${args.columnName} in descending order`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"resizerDescription\": `Press Enter to start resizing`\n};\nvar $8cc39eb66c2bf220$exports = {};\n$8cc39eb66c2bf220$exports = {\n  \"ascending\": `de subida`,\n  \"ascendingSort\": args => `ordenado por columna ${args.columnName} en orden de subida`,\n  \"columnSize\": args => `${args.value} píxeles`,\n  \"descending\": `de bajada`,\n  \"descendingSort\": args => `ordenado por columna ${args.columnName} en orden de bajada`,\n  \"resizerDescription\": `Pulse Intro para empezar a redimensionar`,\n  \"select\": `Seleccionar`,\n  \"selectAll\": `Seleccionar todos`,\n  \"sortable\": `columna ordenable`\n};\nvar $4e11db3c25a38112$exports = {};\n$4e11db3c25a38112$exports = {\n  \"ascending\": `tõusev järjestus`,\n  \"ascendingSort\": args => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,\n  \"columnSize\": args => `${args.value} pikslit`,\n  \"descending\": `laskuv järjestus`,\n  \"descendingSort\": args => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,\n  \"resizerDescription\": `Suuruse muutmise alustamiseks vajutage klahvi Enter`,\n  \"select\": `Vali`,\n  \"selectAll\": `Vali kõik`,\n  \"sortable\": `sorditav veerg`\n};\nvar $da1e751a92575e02$exports = {};\n$da1e751a92575e02$exports = {\n  \"ascending\": `nouseva`,\n  \"ascendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,\n  \"columnSize\": args => `${args.value} pikseliä`,\n  \"descending\": `laskeva`,\n  \"descendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,\n  \"resizerDescription\": `Aloita koon muutos painamalla Enter-näppäintä`,\n  \"select\": `Valitse`,\n  \"selectAll\": `Valitse kaikki`,\n  \"sortable\": `lajiteltava sarake`\n};\nvar $1b5d6c6c47d55106$exports = {};\n$1b5d6c6c47d55106$exports = {\n  \"ascending\": `croissant`,\n  \"ascendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `décroissant`,\n  \"descendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,\n  \"resizerDescription\": `Appuyez sur Entrée pour commencer le redimensionnement.`,\n  \"select\": `Sélectionner`,\n  \"selectAll\": `Sélectionner tout`,\n  \"sortable\": `colonne triable`\n};\nvar $7c18ba27b86d3308$exports = {};\n$7c18ba27b86d3308$exports = {\n  \"ascending\": `עולה`,\n  \"ascendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר עולה`,\n  \"columnSize\": args => `${args.value} פיקסלים`,\n  \"descending\": `יורד`,\n  \"descendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר יורד`,\n  \"resizerDescription\": `הקש Enter כדי לשנות את הגודל`,\n  \"select\": `בחר`,\n  \"selectAll\": `בחר הכול`,\n  \"sortable\": `עמודה שניתן למיין`\n};\nvar $2cb40998e20e8a46$exports = {};\n$2cb40998e20e8a46$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,\n  \"columnSize\": args => `${args.value} piksela`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,\n  \"resizerDescription\": `Pritisnite Enter da biste započeli promenu veličine`,\n  \"select\": `Odaberite`,\n  \"selectAll\": `Odaberite sve`,\n  \"sortable\": `stupac koji se može razvrstati`\n};\nvar $189e23eec1d6aa3a$exports = {};\n$189e23eec1d6aa3a$exports = {\n  \"ascending\": `növekvő`,\n  \"ascendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,\n  \"columnSize\": args => `${args.value} képpont`,\n  \"descending\": `csökkenő`,\n  \"descendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,\n  \"resizerDescription\": `Nyomja le az Enter billentyűt az átméretezés megkezdéséhez`,\n  \"select\": `Kijelölés`,\n  \"selectAll\": `Összes kijelölése`,\n  \"sortable\": `rendezendő oszlop`\n};\nvar $3c5ec8e4f015dfd0$exports = {};\n$3c5ec8e4f015dfd0$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `in ordine crescente in base alla colonna ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `in ordine decrescente in base alla colonna ${args.columnName}`,\n  \"resizerDescription\": `Premi Invio per iniziare a ridimensionare`,\n  \"select\": `Seleziona`,\n  \"selectAll\": `Seleziona tutto`,\n  \"sortable\": `colonna ordinabile`\n};\nvar $d021d50e6b315ebb$exports = {};\n$d021d50e6b315ebb$exports = {\n  \"ascending\": `昇順`,\n  \"ascendingSort\": args => `列 ${args.columnName} を昇順で並べ替え`,\n  \"columnSize\": args => `${args.value} ピクセル`,\n  \"descending\": `降順`,\n  \"descendingSort\": args => `列 ${args.columnName} を降順で並べ替え`,\n  \"resizerDescription\": `Enter キーを押してサイズ変更を開始`,\n  \"select\": `選択`,\n  \"selectAll\": `すべて選択`,\n  \"sortable\": `並べ替え可能な列`\n};\nvar $52535c35c24ec937$exports = {};\n$52535c35c24ec937$exports = {\n  \"ascending\": `오름차순`,\n  \"ascendingSort\": args => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,\n  \"columnSize\": args => `${args.value} 픽셀`,\n  \"descending\": `내림차순`,\n  \"descendingSort\": args => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,\n  \"resizerDescription\": `크기 조정을 시작하려면 Enter를 누르세요.`,\n  \"select\": `선택`,\n  \"selectAll\": `모두 선택`,\n  \"sortable\": `정렬 가능한 열`\n};\nvar $b37ee03672edfd1d$exports = {};\n$b37ee03672edfd1d$exports = {\n  \"ascending\": `didėjančia tvarka`,\n  \"ascendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,\n  \"columnSize\": args => `${args.value} piks.`,\n  \"descending\": `mažėjančia tvarka`,\n  \"descendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,\n  \"resizerDescription\": `Paspauskite „Enter“, kad pradėtumėte keisti dydį`,\n  \"select\": `Pasirinkti`,\n  \"selectAll\": `Pasirinkti viską`,\n  \"sortable\": `rikiuojamas stulpelis`\n};\nvar $c7df6686b4189d56$exports = {};\n$c7df6686b4189d56$exports = {\n  \"ascending\": `augošā secībā`,\n  \"ascendingSort\": args => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,\n  \"columnSize\": args => `${args.value} pikseļi`,\n  \"descending\": `dilstošā secībā`,\n  \"descendingSort\": args => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,\n  \"resizerDescription\": `Nospiediet Enter, lai sāktu izmēru mainīšanu`,\n  \"select\": `Atlasīt`,\n  \"selectAll\": `Atlasīt visu`,\n  \"sortable\": `kārtojamā kolonna`\n};\nvar $da07fe8ec87e6b68$exports = {};\n$da07fe8ec87e6b68$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,\n  \"columnSize\": args => `${args.value} piksler`,\n  \"descending\": `synkende`,\n  \"descendingSort\": args => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,\n  \"resizerDescription\": `Trykk på Enter for å starte størrelsesendring`,\n  \"select\": `Velg`,\n  \"selectAll\": `Velg alle`,\n  \"sortable\": `kolonne som kan sorteres`\n};\nvar $64b7e390f5791490$exports = {};\n$64b7e390f5791490$exports = {\n  \"ascending\": `oplopend`,\n  \"ascendingSort\": args => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `aflopend`,\n  \"descendingSort\": args => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,\n  \"resizerDescription\": `Druk op Enter om het formaat te wijzigen`,\n  \"select\": `Selecteren`,\n  \"selectAll\": `Alles selecteren`,\n  \"sortable\": `sorteerbare kolom`\n};\nvar $2a03621e773f1678$exports = {};\n$2a03621e773f1678$exports = {\n  \"ascending\": `rosnąco`,\n  \"ascendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,\n  \"columnSize\": args => `Liczba pikseli: ${args.value}`,\n  \"descending\": `malejąco`,\n  \"descendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku malejącym`,\n  \"resizerDescription\": `Naciśnij Enter, aby rozpocząć zmienianie rozmiaru`,\n  \"select\": `Zaznacz`,\n  \"selectAll\": `Zaznacz wszystko`,\n  \"sortable\": `kolumna z możliwością sortowania`\n};\nvar $0a79c0aba9e5ecc6$exports = {};\n$0a79c0aba9e5ecc6$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `classificado pela coluna ${args.columnName} em ordem crescente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `classificado pela coluna ${args.columnName} em ordem decrescente`,\n  \"resizerDescription\": `Pressione Enter para começar a redimensionar`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `coluna classificável`\n};\nvar $de7b4d0f7dc86fc8$exports = {};\n$de7b4d0f7dc86fc8$exports = {\n  \"ascending\": `ascendente`,\n  \"ascendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem ascendente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `descendente`,\n  \"descendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem descendente`,\n  \"resizerDescription\": `Prima Enter para iniciar o redimensionamento`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `Coluna ordenável`\n};\nvar $28ea7e849d77bd1c$exports = {};\n$28ea7e849d77bd1c$exports = {\n  \"ascending\": `crescătoare`,\n  \"ascendingSort\": args => `sortate după coloana ${args.columnName} în ordine crescătoare`,\n  \"columnSize\": args => `${args.value} pixeli`,\n  \"descending\": `descrescătoare`,\n  \"descendingSort\": args => `sortate după coloana ${args.columnName} în ordine descrescătoare`,\n  \"resizerDescription\": `Apăsați pe Enter pentru a începe redimensionarea`,\n  \"select\": `Selectare`,\n  \"selectAll\": `Selectare totală`,\n  \"sortable\": `coloană sortabilă`\n};\nvar $9a09321cf046b187$exports = {};\n$9a09321cf046b187$exports = {\n  \"ascending\": `возрастание`,\n  \"ascendingSort\": args => `сортировать столбец ${args.columnName} в порядке возрастания`,\n  \"columnSize\": args => `${args.value} пикс.`,\n  \"descending\": `убывание`,\n  \"descendingSort\": args => `сортировать столбец ${args.columnName} в порядке убывания`,\n  \"resizerDescription\": `Нажмите клавишу Enter для начала изменения размеров`,\n  \"select\": `Выбрать`,\n  \"selectAll\": `Выбрать все`,\n  \"sortable\": `сортируемый столбец`\n};\nvar $5afe469a63fcac7b$exports = {};\n$5afe469a63fcac7b$exports = {\n  \"ascending\": `vzostupne`,\n  \"ascendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"columnSize\": args => `Počet pixelov: ${args.value}`,\n  \"descending\": `zostupne`,\n  \"descendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"resizerDescription\": `Stlačením klávesu Enter začnete zmenu veľkosti`,\n  \"select\": `Vybrať`,\n  \"selectAll\": `Vybrať všetko`,\n  \"sortable\": `zoraditeľný stĺpec`\n};\nvar $2956757ac31a7ce2$exports = {};\n$2956757ac31a7ce2$exports = {\n  \"ascending\": `naraščajoče`,\n  \"ascendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,\n  \"columnSize\": args => `${args.value} slikovnih pik`,\n  \"descending\": `padajoče`,\n  \"descendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,\n  \"resizerDescription\": `Pritisnite tipko Enter da začnete spreminjati velikost`,\n  \"select\": `Izberite`,\n  \"selectAll\": `Izberite vse`,\n  \"sortable\": `razvrstljivi stolpec`\n};\nvar $cedee0e66b175529$exports = {};\n$cedee0e66b175529$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `sortirano po kolonama ${args.columnName} padajućim redosledom`,\n  \"columnSize\": args => `${args.value} piksela`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `sortirano po kolonama ${args.columnName} padajućim redosledom`,\n  \"resizerDescription\": `Pritisnite Enter da biste započeli promenu veličine`,\n  \"select\": `Izaberite`,\n  \"selectAll\": `Izaberite sve`,\n  \"sortable\": `kolona koja se može sortirati`\n};\nvar $6db19998ba4427da$exports = {};\n$6db19998ba4427da$exports = {\n  \"ascending\": `stigande`,\n  \"ascendingSort\": args => `sorterat på kolumn ${args.columnName} i stigande ordning`,\n  \"columnSize\": args => `${args.value} pixlar`,\n  \"descending\": `fallande`,\n  \"descendingSort\": args => `sorterat på kolumn ${args.columnName} i fallande ordning`,\n  \"resizerDescription\": `Tryck på Retur för att börja ändra storlek`,\n  \"select\": `Markera`,\n  \"selectAll\": `Markera allt`,\n  \"sortable\": `sorterbar kolumn`\n};\nvar $166b7c9cc1adb1a1$exports = {};\n$166b7c9cc1adb1a1$exports = {\n  \"ascending\": `artan sırada`,\n  \"ascendingSort\": args => `${args.columnName} sütuna göre artan düzende sırala`,\n  \"columnSize\": args => `${args.value} piksel`,\n  \"descending\": `azalan sırada`,\n  \"descendingSort\": args => `${args.columnName} sütuna göre azalan düzende sırala`,\n  \"resizerDescription\": `Yeniden boyutlandırmak için Enter'a basın`,\n  \"select\": `Seç`,\n  \"selectAll\": `Tümünü Seç`,\n  \"sortable\": `Sıralanabilir sütun`\n};\nvar $c7ab180b401e49ff$exports = {};\n$c7ab180b401e49ff$exports = {\n  \"ascending\": `висхідний`,\n  \"ascendingSort\": args => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,\n  \"columnSize\": args => `${args.value} пікс.`,\n  \"descending\": `низхідний`,\n  \"descendingSort\": args => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,\n  \"resizerDescription\": `Натисніть Enter, щоб почати зміну розміру`,\n  \"select\": `Вибрати`,\n  \"selectAll\": `Вибрати все`,\n  \"sortable\": `сортувальний стовпець`\n};\nvar $1648ec00941567f3$exports = {};\n$1648ec00941567f3$exports = {\n  \"ascending\": `升序`,\n  \"ascendingSort\": args => `按列 ${args.columnName} 升序排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `降序`,\n  \"descendingSort\": args => `按列 ${args.columnName} 降序排序`,\n  \"resizerDescription\": `按“输入”键开始调整大小。`,\n  \"select\": `选择`,\n  \"selectAll\": `全选`,\n  \"sortable\": `可排序的列`\n};\nvar $b26f22384b3c1526$exports = {};\n$b26f22384b3c1526$exports = {\n  \"ascending\": `遞增`,\n  \"ascendingSort\": args => `已依據「${args.columnName}」欄遞增排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `遞減`,\n  \"descendingSort\": args => `已依據「${args.columnName}」欄遞減排序`,\n  \"resizerDescription\": `按 Enter 鍵以開始調整大小`,\n  \"select\": `選取`,\n  \"selectAll\": `全選`,\n  \"sortable\": `可排序的欄`\n};\n$7476b46781682bf5$exports = {\n  \"ar-AE\": $ce3de3ff2fd66848$exports,\n  \"bg-BG\": $cb80dcce530985b9$exports,\n  \"cs-CZ\": $68ac86749db4c0fb$exports,\n  \"da-DK\": $9a6cbac08487e661$exports,\n  \"de-DE\": $c963661d89486e72$exports,\n  \"el-GR\": $ac03861c6e8605f4$exports,\n  \"en-US\": $09e6b82e0d6e466a$exports,\n  \"es-ES\": $8cc39eb66c2bf220$exports,\n  \"et-EE\": $4e11db3c25a38112$exports,\n  \"fi-FI\": $da1e751a92575e02$exports,\n  \"fr-FR\": $1b5d6c6c47d55106$exports,\n  \"he-IL\": $7c18ba27b86d3308$exports,\n  \"hr-HR\": $2cb40998e20e8a46$exports,\n  \"hu-HU\": $189e23eec1d6aa3a$exports,\n  \"it-IT\": $3c5ec8e4f015dfd0$exports,\n  \"ja-JP\": $d021d50e6b315ebb$exports,\n  \"ko-KR\": $52535c35c24ec937$exports,\n  \"lt-LT\": $b37ee03672edfd1d$exports,\n  \"lv-LV\": $c7df6686b4189d56$exports,\n  \"nb-NO\": $da07fe8ec87e6b68$exports,\n  \"nl-NL\": $64b7e390f5791490$exports,\n  \"pl-PL\": $2a03621e773f1678$exports,\n  \"pt-BR\": $0a79c0aba9e5ecc6$exports,\n  \"pt-PT\": $de7b4d0f7dc86fc8$exports,\n  \"ro-RO\": $28ea7e849d77bd1c$exports,\n  \"ru-RU\": $9a09321cf046b187$exports,\n  \"sk-SK\": $5afe469a63fcac7b$exports,\n  \"sl-SI\": $2956757ac31a7ce2$exports,\n  \"sr-SP\": $cedee0e66b175529$exports,\n  \"sv-SE\": $6db19998ba4427da$exports,\n  \"tr-TR\": $166b7c9cc1adb1a1$exports,\n  \"uk-UA\": $c7ab180b401e49ff$exports,\n  \"zh-CN\": $1648ec00941567f3$exports,\n  \"zh-TW\": $b26f22384b3c1526$exports\n};\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nclass $0ba3c81c7f1caedd$export$da43f8f5cb04028d extends (0, $lJcFS$GridKeyboardDelegate) {\n  isCell(node) {\n    return node.type === \"cell\" || node.type === \"rowheader\" || node.type === \"column\";\n  }\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === \"column\") {\n      let child = (0, $lJcFS$getFirstItem)((0, $lJcFS$getChildNodes)(startItem, this.collection));\n      if (child) return child.key;\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) return;\n      let firstItem = this.collection.getItem(firstKey);\n      return (0, $lJcFS$getNthItem)((0, $lJcFS$getChildNodes)(firstItem, this.collection), startItem.index).key;\n    }\n    return super.getKeyBelow(key);\n  }\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === \"column\") {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === \"column\") return parent.key;\n      return;\n    }\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== \"headerrow\") return superKey;\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) return this.collection.columns[startItem.index].key;\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n  findNextColumnKey(column) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === \"column\");\n    if (key != null) return key;\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item of (0, $lJcFS$getChildNodes)(row, this.collection)) {\n      if (item.type === \"column\") return item.key;\n    }\n  }\n  findPreviousColumnKey(column) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === \"column\");\n    if (key != null) return key;\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...(0, $lJcFS$getChildNodes)(row, this.collection)];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === \"column\") return item.key;\n    }\n  }\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus was on a column, then focus the next column\n    if (item.type === \"column\") return this.direction === \"rtl\" ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);\n    return super.getKeyRightOf(key);\n  }\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus was on a column, then focus the previous column\n    if (item.type === \"column\") return this.direction === \"rtl\" ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);\n    return super.getKeyLeftOf(key);\n  }\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    if (key == null) return null;\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === \"cell\") key = startItem.parentKey;\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n      // Check each of the row header cells in this row for a match\n      for (let cell of (0, $lJcFS$getChildNodes)(item, this.collection)) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === \"cell\" ? cell.key : item.key;\n          }\n        }\n      }\n      key = this.getKeyBelow(key);\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n    return null;\n  }\n}\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref) {\n  let {\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized,\n    layout: layout\n  } = props;\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = (0, $lJcFS$useCollator)({\n    usage: \"search\",\n    sensitivity: \"base\"\n  });\n  let {\n    direction: direction\n  } = (0, $lJcFS$useLocale)();\n  let disabledBehavior = state.selectionManager.disabledBehavior;\n  let delegate = (0, $lJcFS$useMemo)(() => keyboardDelegate || new (0, $0ba3c81c7f1caedd$export$da43f8f5cb04028d)({\n    collection: state.collection,\n    disabledKeys: disabledBehavior === \"selection\" ? new Set() : state.disabledKeys,\n    ref: ref,\n    direction: direction,\n    collator: collator,\n    layout: layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, disabledBehavior, ref, direction, collator, layout]);\n  let id = (0, $lJcFS$useId)(props.id);\n  (0, $2140fb2337097f2d$export$552312adfd451dab).set(state, id);\n  let {\n    gridProps: gridProps\n  } = (0, $lJcFS$useGrid)({\n    ...props,\n    id: id,\n    keyboardDelegate: delegate\n  }, state, ref);\n  // Override to include header rows\n  if (isVirtualized) gridProps[\"aria-rowcount\"] = state.collection.size + state.collection.headerRows.length;\n  if ((0, $lJcFS$tableNestedRows)() && \"expandedKeys\" in state) gridProps.role = \"treegrid\";\n  let {\n    column: column,\n    direction: sortDirection\n  } = state.sortDescriptor || {};\n  let stringFormatter = (0, $lJcFS$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($7476b46781682bf5$exports)));\n  let sortDescription = (0, $lJcFS$useMemo)(() => {\n    var _state_collection_columns_find;\n    let columnName = (_state_collection_columns_find = state.collection.columns.find(c => c.key === column)) === null || _state_collection_columns_find === void 0 ? void 0 : _state_collection_columns_find.textValue;\n    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {\n      columnName: columnName\n    }) : undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortDirection, column, state.collection.columns]);\n  let descriptionProps = (0, $lJcFS$useDescription)(sortDescription);\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  (0, $lJcFS$useUpdateEffect)(() => {\n    (0, $lJcFS$announce)(sortDescription, \"assertive\", 500);\n  }, [sortDescription]);\n  return {\n    gridProps: (0, $lJcFS$mergeProps)(gridProps, descriptionProps, {\n      // merge sort description with long press information\n      \"aria-describedby\": [descriptionProps[\"aria-describedby\"], gridProps[\"aria-describedby\"]].filter(Boolean).join(\" \")\n    })\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {\n  var _state_sortDescriptor, _state_sortDescriptor1;\n  let {\n    node: node\n  } = props;\n  let allowsSorting = node.props.allowsSorting;\n  // if there are no focusable children, the column header will focus the cell\n  let {\n    gridCellProps: gridCellProps\n  } = (0, $lJcFS$useGridCell)({\n    ...props,\n    focusMode: \"child\"\n  }, state, ref);\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === \"single\";\n  let {\n    pressProps: pressProps\n  } = (0, $lJcFS$usePress)({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    },\n    ref: ref\n  });\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {\n    focusableProps: focusableProps\n  } = (0, $lJcFS$useFocusable)({}, ref);\n  let ariaSort = null;\n  let isSortedColumn = ((_state_sortDescriptor = state.sortDescriptor) === null || _state_sortDescriptor === void 0 ? void 0 : _state_sortDescriptor.column) === node.key;\n  let sortDirection = (_state_sortDescriptor1 = state.sortDescriptor) === null || _state_sortDescriptor1 === void 0 ? void 0 : _state_sortDescriptor1.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !(0, $lJcFS$isAndroid)()) ariaSort = isSortedColumn ? sortDirection : \"none\";\n  let stringFormatter = (0, $lJcFS$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($7476b46781682bf5$exports)));\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format(\"sortable\")}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && (0, $lJcFS$isAndroid)()) sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n  }\n  let descriptionProps = (0, $lJcFS$useDescription)(sortDescription);\n  let shouldDisableFocus = state.collection.size === 0;\n  (0, $lJcFS$useEffect)(() => {\n    if (shouldDisableFocus && state.selectionManager.focusedKey === node.key) state.selectionManager.setFocusedKey(null);\n  }, [shouldDisableFocus, state.selectionManager, node.key]);\n  return {\n    columnHeaderProps: {\n      ...(0, $lJcFS$mergeProps)(gridCellProps, pressProps, focusableProps, descriptionProps,\n      // If the table is empty, make all column headers untabbable\n      shouldDisableFocus && {\n        tabIndex: -1\n      }),\n      role: \"columnheader\",\n      id: (0, $2140fb2337097f2d$export$37cd4213f2ad742e)(state, node.key),\n      \"aria-colspan\": node.colspan && node.colspan > 1 ? node.colspan : null,\n      \"aria-sort\": ariaSort\n    }\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $b2db214c022798eb$var$EXPANSION_KEYS = {\n  expand: {\n    ltr: \"ArrowRight\",\n    rtl: \"ArrowLeft\"\n  },\n  \"collapse\": {\n    ltr: \"ArrowLeft\",\n    rtl: \"ArrowRight\"\n  }\n};\nfunction $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let {\n    rowProps: rowProps,\n    ...states\n  } = (0, $lJcFS$useGridRow)(props, state, ref);\n  let {\n    direction: direction\n  } = (0, $lJcFS$useLocale)();\n  if (isVirtualized && !((0, $lJcFS$tableNestedRows)() && \"expandedKeys\" in state)) rowProps[\"aria-rowindex\"] = node.index + 1 + state.collection.headerRows.length; // aria-rowindex is 1 based\n  else delete rowProps[\"aria-rowindex\"];\n  let treeGridRowProps = {};\n  if ((0, $lJcFS$tableNestedRows)() && \"expandedKeys\" in state) {\n    let treeNode = state.keyMap.get(node.key);\n    if (treeNode != null) {\n      var _treeNode_props, _treeNode_props1, _treeNode_props_children;\n      let hasChildRows = ((_treeNode_props = treeNode.props) === null || _treeNode_props === void 0 ? void 0 : _treeNode_props.UNSTABLE_childItems) || ((_treeNode_props1 = treeNode.props) === null || _treeNode_props1 === void 0 ? void 0 : (_treeNode_props_children = _treeNode_props1.children) === null || _treeNode_props_children === void 0 ? void 0 : _treeNode_props_children.length) > state.userColumnCount;\n      treeGridRowProps = {\n        onKeyDown: e => {\n          if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS[\"expand\"][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && state.expandedKeys !== \"all\" && !state.expandedKeys.has(treeNode.key)) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          } else if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS[\"collapse\"][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && (state.expandedKeys === \"all\" || state.expandedKeys.has(treeNode.key))) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          }\n        },\n        \"aria-expanded\": hasChildRows ? state.expandedKeys === \"all\" || state.expandedKeys.has(node.key) : undefined,\n        \"aria-level\": treeNode.level,\n        \"aria-posinset\": treeNode.indexOfType + 1,\n        \"aria-setsize\": treeNode.level > 1 ? (0, $lJcFS$getLastItem)(state.keyMap.get(treeNode === null || treeNode === void 0 ? void 0 : treeNode.parentKey).childNodes).indexOfType + 1 : (0, $lJcFS$getLastItem)(state.keyMap.get(state.collection.body.key).childNodes).indexOfType + 1\n      };\n    }\n  }\n  let linkProps = states.hasAction ? (0, $lJcFS$getSyntheticLinkProps)(node.props) : {};\n  return {\n    rowProps: {\n      ...(0, $lJcFS$mergeProps)(rowProps, treeGridRowProps, linkProps),\n      \"aria-labelledby\": (0, $2140fb2337097f2d$export$85069b70317f543)(state, node.key)\n    },\n    ...states\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let rowProps = {\n    role: \"row\"\n  };\n  if (isVirtualized && !((0, $lJcFS$tableNestedRows)() && \"expandedKeys\" in state)) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $7713593715703b24$export$49571c903d73624c(props, state, ref) {\n  let {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  } = (0, $lJcFS$useGridCell)(props, state, ref);\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = \"rowheader\";\n    gridCellProps.id = (0, $2140fb2337097f2d$export$19baff3266315d44)(state, props.node.parentKey, columnKey);\n  }\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n  let {\n    key: key\n  } = props;\n  const {\n    checkboxProps: checkboxProps\n  } = (0, $lJcFS$useGridSelectionCheckbox)(props, state);\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      \"aria-labelledby\": `${checkboxProps.id} ${(0, $2140fb2337097f2d$export$85069b70317f543)(state, key)}`\n    }\n  };\n}\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n  let {\n    isEmpty: isEmpty,\n    isSelectAll: isSelectAll,\n    selectionMode: selectionMode\n  } = state.selectionManager;\n  const stringFormatter = (0, $lJcFS$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($7476b46781682bf5$exports)));\n  return {\n    checkboxProps: {\n      \"aria-label\": stringFormatter.format(selectionMode === \"single\" ? \"select\" : \"selectAll\"),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== \"multiple\" || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $e91ef4e5004e3774$export$52994e973806c219(props, state, ref) {\n  let {\n    column: item,\n    triggerRef: triggerRef,\n    isDisabled: isDisabled,\n    onResizeStart: onResizeStart,\n    onResize: onResize,\n    onResizeEnd: onResizeEnd,\n    \"aria-label\": ariaLabel\n  } = props;\n  const stringFormatter = (0, $lJcFS$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($7476b46781682bf5$exports)));\n  let id = (0, $lJcFS$useId)();\n  let isResizing = state.resizingColumn === item.key;\n  let isResizingRef = (0, $lJcFS$useRef)(isResizing);\n  let lastSize = (0, $lJcFS$useRef)(null);\n  let wasFocusedOnResizeStart = (0, $lJcFS$useRef)(false);\n  let editModeEnabled = state.tableState.isKeyboardNavigationDisabled;\n  let {\n    direction: direction\n  } = (0, $lJcFS$useLocale)();\n  let {\n    keyboardProps: keyboardProps\n  } = (0, $lJcFS$useKeyboard)({\n    onKeyDown: e => {\n      if (editModeEnabled) {\n        if (e.key === \"Escape\" || e.key === \"Enter\" || e.key === \" \" || e.key === \"Tab\") {\n          e.preventDefault();\n          endResize(item);\n        }\n      } else {\n        // Continue propagation on keydown events so they still bubbles to useSelectableCollection and are handled there\n        e.continuePropagation();\n        if (e.key === \"Enter\") startResize(item);\n      }\n    }\n  });\n  let startResize = (0, $lJcFS$useEffectEvent)(item => {\n    if (!isResizingRef.current) {\n      lastSize.current = state.updateResizedColumns(item.key, state.getColumnWidth(item.key));\n      state.startResize(item.key);\n      state.tableState.setKeyboardNavigationDisabled(true);\n      onResizeStart === null || onResizeStart === void 0 ? void 0 : onResizeStart(lastSize.current);\n    }\n    isResizingRef.current = true;\n  });\n  let resize = (0, $lJcFS$useEffectEvent)((item, newWidth) => {\n    let sizes = state.updateResizedColumns(item.key, newWidth);\n    onResize === null || onResize === void 0 ? void 0 : onResize(sizes);\n    lastSize.current = sizes;\n  });\n  let endResize = (0, $lJcFS$useEffectEvent)(item => {\n    if (isResizingRef.current) {\n      if (lastSize.current == null) lastSize.current = state.updateResizedColumns(item.key, state.getColumnWidth(item.key));\n      state.endResize();\n      state.tableState.setKeyboardNavigationDisabled(false);\n      onResizeEnd === null || onResizeEnd === void 0 ? void 0 : onResizeEnd(lastSize.current);\n      isResizingRef.current = false;\n      if ((triggerRef === null || triggerRef === void 0 ? void 0 : triggerRef.current) && !wasFocusedOnResizeStart.current)\n        // switch focus back to the column header unless the resizer was already focused when resizing started.\n        (0, $lJcFS$focusSafely)(triggerRef.current);\n    }\n    lastSize.current = null;\n  });\n  const columnResizeWidthRef = (0, $lJcFS$useRef)(0);\n  const {\n    moveProps: moveProps\n  } = (0, $lJcFS$useMove)({\n    onMoveStart() {\n      columnResizeWidthRef.current = state.getColumnWidth(item.key);\n      startResize(item);\n    },\n    onMove(e) {\n      let {\n        deltaX: deltaX,\n        deltaY: deltaY,\n        pointerType: pointerType\n      } = e;\n      if (direction === \"rtl\") deltaX *= -1;\n      if (pointerType === \"keyboard\") {\n        if (deltaY !== 0 && deltaX === 0) deltaX = deltaY * -1;\n        deltaX *= 10;\n      }\n      // if moving up/down only, no need to resize\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        resize(item, columnResizeWidthRef.current);\n      }\n    },\n    onMoveEnd(e) {\n      let {\n        pointerType: pointerType\n      } = e;\n      columnResizeWidthRef.current = 0;\n      if (pointerType === \"mouse\" || pointerType === \"touch\" && wasFocusedOnResizeStart.current) endResize(item);\n    }\n  });\n  let onKeyDown = (0, $lJcFS$useCallback)(e => {\n    if (editModeEnabled) moveProps.onKeyDown(e);\n  }, [editModeEnabled, moveProps]);\n  let min = Math.floor(state.getColumnMinWidth(item.key));\n  let max = Math.floor(state.getColumnMaxWidth(item.key));\n  if (max === Infinity) max = Number.MAX_SAFE_INTEGER;\n  let value = Math.floor(state.getColumnWidth(item.key));\n  let modality = (0, $lJcFS$useInteractionModality)();\n  if (modality === \"virtual\" && typeof window !== \"undefined\" && \"ontouchstart\" in window) modality = \"touch\";\n  let description = (triggerRef === null || triggerRef === void 0 ? void 0 : triggerRef.current) == null && (modality === \"keyboard\" || modality === \"virtual\") && !isResizing ? stringFormatter.format(\"resizerDescription\") : undefined;\n  let descriptionProps = (0, $lJcFS$useDescription)(description);\n  let ariaProps = {\n    \"aria-label\": ariaLabel,\n    \"aria-orientation\": \"horizontal\",\n    \"aria-labelledby\": `${id} ${(0, $2140fb2337097f2d$export$37cd4213f2ad742e)(state.tableState, item.key)}`,\n    \"aria-valuetext\": stringFormatter.format(\"columnSize\", {\n      value: value\n    }),\n    \"type\": \"range\",\n    min: min,\n    max: max,\n    value: value,\n    ...descriptionProps\n  };\n  const focusInput = (0, $lJcFS$useCallback)(() => {\n    if (ref.current) (0, $lJcFS$focusSafely)(ref.current);\n  }, [ref]);\n  let resizingColumn = state.resizingColumn;\n  let prevResizingColumn = (0, $lJcFS$useRef)(null);\n  (0, $lJcFS$useEffect)(() => {\n    if (prevResizingColumn.current !== resizingColumn && resizingColumn != null && resizingColumn === item.key) {\n      wasFocusedOnResizeStart.current = document.activeElement === ref.current;\n      startResize(item);\n      // Delay focusing input until Android Chrome's delayed click after touchend happens: https://bugs.chromium.org/p/chromium/issues/detail?id=1150073\n      let timeout = setTimeout(() => focusInput(), 0);\n      // VoiceOver on iOS has problems focusing the input from a menu.\n      let VOTimeout = setTimeout(focusInput, 400);\n      return () => {\n        clearTimeout(timeout);\n        clearTimeout(VOTimeout);\n      };\n    }\n    prevResizingColumn.current = resizingColumn;\n  }, [resizingColumn, item, focusInput, ref, startResize]);\n  let onChange = e => {\n    let currentWidth = state.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n    if (nextValue > currentWidth) nextValue = currentWidth + 10;else nextValue = currentWidth - 10;\n    resize(item, nextValue);\n  };\n  let {\n    pressProps: pressProps\n  } = (0, $lJcFS$usePress)({\n    onPressStart: e => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === \"keyboard\") return;\n      if (e.pointerType === \"virtual\" && state.resizingColumn != null) {\n        endResize(item);\n        return;\n      }\n      // Sometimes onPress won't trigger for quick taps on mobile so we want to focus the input so blurring away\n      // can cancel resize mode for us.\n      focusInput();\n      // If resizer is always visible, mobile screenreader user can access the visually hidden resizer directly and thus we don't need\n      // to handle a virtual click to start the resizer.\n      if (e.pointerType !== \"virtual\") startResize(item);\n    },\n    onPress: e => {\n      if ((e.pointerType === \"touch\" && wasFocusedOnResizeStart.current || e.pointerType === \"mouse\") && state.resizingColumn != null) endResize(item);\n    }\n  });\n  let {\n    visuallyHiddenProps: visuallyHiddenProps\n  } = (0, $lJcFS$useVisuallyHidden)();\n  return {\n    resizerProps: (0, $lJcFS$mergeProps)(keyboardProps, {\n      ...moveProps,\n      onKeyDown: onKeyDown\n    }, pressProps, {\n      style: {\n        touchAction: \"none\"\n      }\n    }),\n    inputProps: (0, $lJcFS$mergeProps)(visuallyHiddenProps, {\n      id: id,\n      onBlur: () => {\n        endResize(item);\n      },\n      onChange: onChange,\n      disabled: isDisabled\n    }, ariaProps),\n    isResizing: isResizing\n  };\n}\nfunction $0047e6c294ea075f$export$6fb1613bd7b28198() {\n  return (0, $lJcFS$useGridRowGroup)();\n}\nexport { $0047e6c294ea075f$export$6fb1613bd7b28198 as useTableRowGroup, $6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable, $f329116d8ad0aba0$export$9514819a8c81e960 as useTableColumnHeader, $b2db214c022798eb$export$7f2f6ae19e707aa5 as useTableRow, $f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow, $7713593715703b24$export$49571c903d73624c as useTableCell, $2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox, $e91ef4e5004e3774$export$52994e973806c219 as useTableColumnResize };\n//# sourceMappingURL=module.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}