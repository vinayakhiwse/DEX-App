{"ast":null,"code":"\"use client\";\n\nimport { useChip } from \"./chunk-IFLVSJDD.mjs\";\n\n// src/chip.tsx\nimport { CloseFilledIcon } from \"@nextui-org/shared-icons\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Chip = forwardRef((props, ref) => {\n  const {\n    Component,\n    children,\n    slots,\n    classNames,\n    isDot,\n    isCloseable,\n    startContent,\n    endContent,\n    getCloseButtonProps,\n    getChipProps\n  } = useChip({\n    ...props,\n    ref\n  });\n  const start = useMemo(() => {\n    if (isDot && !startContent) {\n      return /* @__PURE__ */jsx(\"span\", {\n        className: slots.dot({\n          class: classNames == null ? void 0 : classNames.dot\n        })\n      });\n    }\n    return startContent;\n  }, [slots, startContent, isDot]);\n  const end = useMemo(() => {\n    if (isCloseable) {\n      return /* @__PURE__ */jsx(\"span\", {\n        ...getCloseButtonProps(),\n        children: endContent || /* @__PURE__ */jsx(CloseFilledIcon, {})\n      });\n    }\n    return endContent;\n  }, [endContent, isCloseable, getCloseButtonProps]);\n  return /* @__PURE__ */jsxs(Component, {\n    ...getChipProps(),\n    children: [start, /* @__PURE__ */jsx(\"span\", {\n      className: slots.content({\n        class: classNames == null ? void 0 : classNames.content\n      }),\n      children\n    }), end]\n  });\n});\nChip.displayName = \"NextUI.Chip\";\nvar chip_default = Chip;\nexport { chip_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}