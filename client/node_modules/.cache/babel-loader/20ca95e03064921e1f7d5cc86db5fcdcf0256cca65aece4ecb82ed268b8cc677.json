{"ast":null,"code":"\"use client\";\n\nimport { accordion_item_default } from \"./chunk-AL6VE56H.mjs\";\nimport { useAccordion } from \"./chunk-AWBPGPDD.mjs\";\n\n// src/accordion.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { LayoutGroup } from \"framer-motion\";\nimport { Divider } from \"@nextui-org/divider\";\nimport { Fragment, useCallback, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar AccordionGroup = forwardRef((props, ref) => {\n  const {\n    Component,\n    values,\n    state,\n    isSplitted,\n    showDivider,\n    getBaseProps,\n    disableAnimation,\n    handleFocusChanged: handleFocusChangedProps,\n    itemClasses\n  } = useAccordion({\n    ...props,\n    ref\n  });\n  const handleFocusChanged = useCallback((isFocused, key) => handleFocusChangedProps(isFocused, key), [handleFocusChangedProps]);\n  const content = useMemo(() => {\n    return [...state.collection].map((item, index) => {\n      const classNames = {\n        ...itemClasses,\n        ...(item.props.classNames || {})\n      };\n      return /* @__PURE__ */jsxs(Fragment, {\n        children: [/* @__PURE__ */jsx(accordion_item_default, {\n          item,\n          onFocusChange: handleFocusChanged,\n          ...values,\n          ...item.props,\n          classNames\n        }), !isSplitted && showDivider && index < state.collection.size - 1 && /* @__PURE__ */jsx(Divider, {})]\n      }, item.key);\n    });\n  }, [values, itemClasses, handleFocusChanged, isSplitted, showDivider, state.collection]);\n  return /* @__PURE__ */jsx(Component, {\n    ...getBaseProps(),\n    children: disableAnimation ? content : /* @__PURE__ */jsx(LayoutGroup, {\n      children: content\n    })\n  });\n});\nAccordionGroup.displayName = \"NextUI.Accordion\";\nvar accordion_default = AccordionGroup;\nexport { accordion_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}