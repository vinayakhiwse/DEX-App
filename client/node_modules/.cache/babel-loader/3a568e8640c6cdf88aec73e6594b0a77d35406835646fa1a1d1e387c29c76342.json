{"ast":null,"code":"\"use client\";\n\n// src/use-aria-popover.ts\nimport { useEffect } from \"react\";\nimport { useOverlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { ariaHideOutside, toReactAriaPlacement } from \"@nextui-org/aria-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useReactAriaPopover(props, state) {\n  const {\n    triggerRef,\n    popoverRef,\n    showArrow,\n    offset = 7,\n    crossOffset = 0,\n    scrollRef,\n    shouldFlip,\n    boundaryElement,\n    shouldCloseOnBlur = true,\n    placement: placementProp = \"top\",\n    containerPadding,\n    shouldCloseOnInteractOutside,\n    isNonModal: isNonModalProp,\n    isKeyboardDismissDisabled,\n    ...otherProps\n  } = props;\n  const isNonModal = isNonModalProp || true;\n  const {\n    overlayProps,\n    underlayProps\n  } = useOverlay({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur,\n    isDismissable: true,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside ? shouldCloseOnInteractOutside : element => {\n      let trigger = triggerRef == null ? void 0 : triggerRef.current;\n      return !trigger || !trigger.contains(element);\n    }\n  }, popoverRef);\n  const {\n    overlayProps: positionProps,\n    arrowProps,\n    placement\n  } = useOverlayPosition({\n    ...otherProps,\n    shouldFlip,\n    crossOffset,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    scrollRef,\n    boundaryElement,\n    containerPadding,\n    placement: toReactAriaPlacement(placementProp),\n    offset: showArrow ? offset + 3 : offset,\n    onClose: () => {}\n  });\n  useEffect(() => {\n    if (state.isOpen && !isNonModal && popoverRef.current) {\n      return ariaHideOutside([popoverRef.current]);\n    }\n  }, [isNonModal, state.isOpen, popoverRef]);\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps,\n    underlayProps,\n    placement\n  };\n}\nexport { useReactAriaPopover };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}