{"ast":null,"code":"import { colorVariants } from \"./chunk-2PIR7DFM.mjs\";\nimport { tv } from \"./chunk-6AEINX52.mjs\";\nimport { dataFocusVisibleClasses, translateCenterClasses } from \"./chunk-T7JNS25F.mjs\";\n\n// src/components/avatar.ts\nvar avatar = tv({\n  slots: {\n    base: [\"flex\", \"relative\", \"justify-center\", \"items-center\", \"box-border\", \"overflow-hidden\", \"align-middle\", \"text-white\", \"z-10\", ...dataFocusVisibleClasses],\n    img: [\"flex\", \"object-cover\", \"w-full\", \"h-full\", \"transition-opacity\", \"!duration-500\", \"opacity-0\", \"data-[loaded=true]:opacity-100\"],\n    fallback: [...translateCenterClasses, \"flex\", \"items-center\", \"justify-center\"],\n    name: [...translateCenterClasses, \"font-normal\", \"text-center\", \"text-inherit\"],\n    icon: [...translateCenterClasses, \"flex\", \"items-center\", \"justify-center\", \"text-inherit\", \"w-full\", \"h-full\"]\n  },\n  variants: {\n    size: {\n      sm: {\n        base: \"w-8 h-8 text-tiny\"\n      },\n      md: {\n        base: \"w-10 h-10 text-tiny\"\n      },\n      lg: {\n        base: \"w-14 h-14 text-small\"\n      }\n    },\n    color: {\n      default: {\n        base: colorVariants.solid.default\n      },\n      primary: {\n        base: colorVariants.solid.primary\n      },\n      secondary: {\n        base: colorVariants.solid.secondary\n      },\n      success: {\n        base: colorVariants.solid.success\n      },\n      warning: {\n        base: colorVariants.solid.warning\n      },\n      danger: {\n        base: colorVariants.solid.danger\n      }\n    },\n    radius: {\n      none: {\n        base: \"rounded-none\"\n      },\n      sm: {\n        base: \"rounded-small\"\n      },\n      md: {\n        base: \"rounded-medium\"\n      },\n      lg: {\n        base: \"rounded-large\"\n      },\n      full: {\n        base: \"rounded-full\"\n      }\n    },\n    isBordered: {\n      true: {\n        base: \"ring-2 ring-offset-2 ring-offset-background dark:ring-offset-background-dark\"\n      }\n    },\n    isDisabled: {\n      true: {\n        base: \"opacity-disabled\"\n      }\n    },\n    isInGroup: {\n      true: {\n        base: [\"-ml-2 data-[hover=true]:-translate-x-3 transition-transform\", \"data-[focus-visible=true]:-translate-x-3\"]\n      }\n    },\n    isInGridGroup: {\n      true: {\n        base: \"m-0 data-[hover=true]:translate-x-0\"\n      }\n    }\n  },\n  defaultVariants: {\n    size: \"md\",\n    color: \"default\",\n    radius: \"full\"\n  },\n  compoundVariants: [{\n    color: \"default\",\n    isBordered: true,\n    class: {\n      base: \"ring-default\"\n    }\n  }, {\n    color: \"primary\",\n    isBordered: true,\n    class: {\n      base: \"ring-focus\"\n    }\n  }, {\n    color: \"secondary\",\n    isBordered: true,\n    class: {\n      base: \"ring-secondary\"\n    }\n  }, {\n    color: \"success\",\n    isBordered: true,\n    class: {\n      base: \"ring-success\"\n    }\n  }, {\n    color: \"warning\",\n    isBordered: true,\n    class: {\n      base: \"ring-warning\"\n    }\n  }, {\n    color: \"danger\",\n    isBordered: true,\n    class: {\n      base: \"ring-danger\"\n    }\n  }]\n});\nvar avatarGroup = tv({\n  base: \"flex items-center justify-center h-auto w-max-content\",\n  variants: {\n    isGrid: {\n      true: \"inline-grid grid-cols-4 gap-3\"\n    }\n  }\n});\nexport { avatar, avatarGroup };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}