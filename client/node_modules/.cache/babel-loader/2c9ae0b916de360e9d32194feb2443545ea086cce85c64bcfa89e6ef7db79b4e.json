{"ast":null,"code":"import { IEvents as e } from \"@walletconnect/events\";\nimport c, { EventEmitter as i } from \"events\";\nclass n extends e {\n  constructor(s) {\n    super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n  }\n}\nclass l {\n  constructor(s, t, o) {\n    this.core = s, this.logger = t;\n  }\n}\nclass h extends e {\n  constructor(s, t) {\n    super(), this.core = s, this.logger = t, this.records = new Map();\n  }\n}\nclass a {\n  constructor(s, t) {\n    this.logger = s, this.core = t;\n  }\n}\nclass u extends e {\n  constructor(s, t) {\n    super(), this.relayer = s, this.logger = t;\n  }\n}\nclass g extends e {\n  constructor(s) {\n    super();\n  }\n}\nclass p {\n  constructor(s, t, o, w) {\n    this.core = s, this.logger = t, this.name = o;\n  }\n}\nclass I {\n  constructor() {\n    this.map = new Map();\n  }\n}\nclass d extends e {\n  constructor(s, t) {\n    super(), this.relayer = s, this.logger = t;\n  }\n}\nclass x {\n  constructor(s, t) {\n    this.core = s, this.logger = t;\n  }\n}\nclass E extends e {\n  constructor(s, t) {\n    super(), this.core = s, this.logger = t;\n  }\n}\nclass m {\n  constructor(s, t) {\n    this.logger = s, this.core = t;\n  }\n}\nclass y {\n  constructor(s, t) {\n    this.projectId = s, this.logger = t;\n  }\n}\nclass v extends c {\n  constructor() {\n    super();\n  }\n}\nclass b {\n  constructor(s) {\n    this.opts = s, this.protocol = \"wc\", this.version = 2;\n  }\n}\nclass C extends i {\n  constructor() {\n    super();\n  }\n}\nclass S {\n  constructor(s) {\n    this.client = s;\n  }\n}\nexport { n as ICore, l as ICrypto, S as IEngine, C as IEngineEvents, E as IExpirer, h as IJsonRpcHistory, x as IKeyChain, a as IMessageTracker, m as IPairing, u as IPublisher, g as IRelayer, b as ISignClient, v as ISignClientEvents, p as IStore, d as ISubscriber, I as ISubscriberTopicMap, y as IVerify };\n//# sourceMappingURL=index.es.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}