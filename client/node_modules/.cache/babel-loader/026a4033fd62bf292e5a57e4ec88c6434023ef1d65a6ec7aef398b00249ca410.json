{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/client/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BsFillArrowDownSquareFill } from \"react-icons/bs\";\nimport { FcSettings } from \"react-icons/fc\";\nimport Modal from \"../components/Modal\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { useAccount } from \"wagmi\";\nimport { SwapTokenToEth, hasValidAllowance, increaseAllowances, swapEthToToken, swapTokenToToken } from \"../utils/queries\";\nimport { Toast } from \"../toast/toast\";\nimport TransactionStatus from \"../toast/TransactionStatus\";\nimport TokenBalance from \"../components/TokenBalance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const {\n    address\n  } = useAccount();\n  const [srcToken, setSrcToken] = useState(\"Eth\");\n  const [destToken, setDestToken] = useState(\"Select a token\");\n  const [txPending, setTxPending] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValue, setOutputValue] = useState(\"\");\n  const [swapBtnText, setSwapBtnText] = useState(\"ENTER_AMOUNT\");\n  const [tokenBalComp, setTokenBalComp] = useState();\n  const handleModal = () => {\n    setModal(true);\n  };\n  const handleModal1 = () => {\n    setModal1(true);\n  };\n  useEffect(() => {\n    // Handling the text of the submit button\n    if (!address) setSwapBtnText(\"CONNECT_WALLET\");else if (!inputValue) setSwapBtnText(\"ENTER_AMOUNT\");else setSwapBtnText(\"SWAP\");\n  }, [inputValue, outputValue, address]);\n  async function performSwap() {\n    setTxPending(true);\n    let receipt;\n    if (srcToken === \"Eth\" && destToken !== \"Eth\") {\n      receipt = await swapEthToToken(destToken, inputValue);\n    } else if (srcToken !== \"Eth\" && destToken === \"Eth\") {\n      receipt = await SwapTokenToEth(srcToken, inputValue);\n    } else {\n      receipt = await swapTokenToToken(srcToken, destToken, inputValue);\n    }\n    setTxPending(false);\n    if (receipt && !receipt.hasOwnProperty(\"transactionHash\")) Toast.error(receipt);else Toast.success(\"Transaction completed.\");\n  }\n  async function handleSwap() {\n    if (srcToken === \"Eth\" && destToken !== \"Eth\") {\n      performSwap();\n    } else {\n      // Check whether there is allowance when the swap deals with tokenToEth/tokenToToken\n      setTxPending(true);\n      const result = await hasValidAllowance(address, srcToken, inputValue);\n      setTxPending(false);\n      if (result) {\n        performSwap();\n      } else {\n        handleInsufficientAllowance();\n      }\n    }\n  }\n  async function handleIncreaseAllowance() {\n    // Increase the allowance\n    setTxPending(true);\n    await increaseAllowances(srcToken, inputValue);\n    setTxPending(false);\n    setSwapBtnText(\"SWAP\");\n  }\n  function handleInsufficientAllowance() {\n    setSwapBtnText(\"INCREASE_ALLOWANCE\");\n    Toast.error(\"Insufficient Allowance.\");\n    return;\n  }\n  useEffect(() => {\n    setTokenBalComp( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TokenBalance, {\n        name: \"CoinA\",\n        walletAddress: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenBalance, {\n        name: \"CoinB\",\n        walletAddress: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenBalance, {\n        name: \"CoinC\",\n        walletAddress: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true));\n    if (!address) {\n      Toast.warning(\"Please Connect Wallet.\");\n      return;\n    }\n  }, [address]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"d7iitrEIQocTUPn2uctqks+UvdE=\", false, function () {\n  return [useAccount];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","BsFillArrowDownSquareFill","FcSettings","Modal","IoIosArrowDown","useAccount","SwapTokenToEth","hasValidAllowance","increaseAllowances","swapEthToToken","swapTokenToToken","Toast","TransactionStatus","TokenBalance","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","modal","setModal","modal1","setModal1","address","srcToken","setSrcToken","destToken","setDestToken","txPending","setTxPending","inputValue","setInputValue","outputValue","setOutputValue","swapBtnText","setSwapBtnText","tokenBalComp","setTokenBalComp","handleModal","handleModal1","performSwap","receipt","hasOwnProperty","error","success","handleSwap","result","handleInsufficientAllowance","handleIncreaseAllowance","children","name","walletAddress","fileName","_jsxFileName","lineNumber","columnNumber","warning","_c","$RefreshReg$"],"sources":["/home/hp/Desktop/client/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BsFillArrowDownSquareFill } from \"react-icons/bs\";\nimport { FcSettings } from \"react-icons/fc\";\nimport Modal from \"../components/Modal\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { useAccount } from \"wagmi\";\nimport {\n  SwapTokenToEth,\n  hasValidAllowance,\n  increaseAllowances,\n  swapEthToToken,\n  swapTokenToToken,\n} from \"../utils/queries\";\nimport { Toast } from \"../toast/toast\";\nimport TransactionStatus from \"../toast/TransactionStatus\";\nimport TokenBalance from \"../components/TokenBalance\";\n\nexport default function Home() {\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const { address } = useAccount();\n  const [srcToken, setSrcToken] = useState(\"Eth\");\n  const [destToken, setDestToken] = useState(\"Select a token\");\n  const [txPending, setTxPending] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValue, setOutputValue] = useState(\"\");\n  const [swapBtnText, setSwapBtnText] = useState(\"ENTER_AMOUNT\");\n  const [tokenBalComp, setTokenBalComp] = useState();\n\n  const handleModal = () => {\n    setModal(true);\n  };\n  const handleModal1 = () => {\n    setModal1(true);\n  };\n\n  useEffect(() => {\n    // Handling the text of the submit button\n    if (!address) setSwapBtnText(\"CONNECT_WALLET\");\n    else if (!inputValue) setSwapBtnText(\"ENTER_AMOUNT\");\n    else setSwapBtnText(\"SWAP\");\n  }, [inputValue, outputValue, address]);\n\n  async function performSwap() {\n    setTxPending(true);\n    let receipt;\n    if (srcToken === \"Eth\" && destToken !== \"Eth\") {\n      receipt = await swapEthToToken(destToken, inputValue);\n    } else if (srcToken !== \"Eth\" && destToken === \"Eth\") {\n      receipt = await SwapTokenToEth(srcToken, inputValue);\n    } else {\n      receipt = await swapTokenToToken(srcToken, destToken, inputValue);\n    }\n    setTxPending(false);\n    if (receipt && !receipt.hasOwnProperty(\"transactionHash\"))\n      Toast.error(receipt);\n    else Toast.success(\"Transaction completed.\");\n  }\n\n  async function handleSwap() {\n    if (srcToken === \"Eth\" && destToken !== \"Eth\") {\n      performSwap();\n    } else {\n      // Check whether there is allowance when the swap deals with tokenToEth/tokenToToken\n      setTxPending(true);\n      const result = await hasValidAllowance(address, srcToken, inputValue);\n      setTxPending(false);\n      if (result) {\n        performSwap();\n      } else {\n        handleInsufficientAllowance();\n      }\n    }\n  }\n\n  async function handleIncreaseAllowance() {\n    // Increase the allowance\n    setTxPending(true);\n    await increaseAllowances(srcToken, inputValue);\n    setTxPending(false);\n    setSwapBtnText(\"SWAP\");\n  }\n\n  function handleInsufficientAllowance() {\n    setSwapBtnText(\"INCREASE_ALLOWANCE\");\n    Toast.error(\"Insufficient Allowance.\");\n    return;\n  }\n\n  useEffect(() => {\n    setTokenBalComp(\n      <>\n        <TokenBalance name={\"CoinA\"} walletAddress={address} />\n        <TokenBalance name={\"CoinB\"} walletAddress={address} />\n        <TokenBalance name={\"CoinC\"} walletAddress={address} />\n      </>\n    );\n\n    if (!address) {\n      Toast.warning(\"Please Connect Wallet.\");\n      return;\n    }\n  }, [address]);\n\n  return (\n    <>\n    <div>\n\n    </div>\n     \n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}