{"ast":null,"code":"import e, { useRef as o, useImperativeHandle as r } from \"react\";\nimport { useTableColumnHeader as t, useTableSelectAllCheckbox as l } from \"@react-aria/table\";\nimport { VisuallyHidden as a } from \"@react-aria/visually-hidden\";\nimport { useFocusRing as c } from \"@react-aria/focus\";\nimport { mergeProps as i } from \"@react-aria/utils\";\nimport s from \"../checkbox\";\nimport { StyledTableHeaderCell as m } from \"./table.styles\";\nimport n from \"../utils/clsx\";\nimport { jsx as u } from \"react/jsx-runtime\";\nconst b = e.forwardRef(({\n  column: e,\n  state: b,\n  color: d,\n  animated: f,\n  ...p\n}, x) => {\n  const h = o(null);\n  r(x, () => null == h ? void 0 : h.current);\n  const k = \"single\" === b.selectionManager.selectionMode,\n    {\n      columnHeaderProps: y\n    } = t({\n      node: e\n    }, b, h),\n    {\n      checkboxProps: N\n    } = l(b),\n    {\n      isFocusVisible: $,\n      focusProps: g\n    } = c();\n  return u(m, {\n    ref: h,\n    isFocusVisible: $,\n    className: n(\"nextui-table-select-all-checkbox\", p.className),\n    ...i(y, g, p),\n    children: k ? u(a, {\n      children: N[\"aria-label\"]\n    }) : u(s, {\n      ...N,\n      color: d,\n      disableAnimation: !f,\n      css: {\n        display: \"inherit\",\n        $$checkboxBorderColor: \"$colors$accents3\"\n      }\n    })\n  });\n});\nb.displayName = \"NextUI.TableSelectAllCheckbox\", b.toString = () => \".nextui-table-select-all-checkbox\";\nexport default b;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}