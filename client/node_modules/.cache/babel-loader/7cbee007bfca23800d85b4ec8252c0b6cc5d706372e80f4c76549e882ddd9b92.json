{"ast":null,"code":"import { AbiDecodingZeroDataError } from '../../errors/abi.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ContractFunctionExecutionError, ContractFunctionRevertedError, ContractFunctionZeroDataError, RawContractError } from '../../errors/contract.js';\nimport { InternalRpcError } from '../../errors/rpc.js';\nconst EXECUTION_REVERTED_ERROR_CODE = 3;\nexport function getContractError(err, {\n  abi,\n  address,\n  args,\n  docsPath,\n  functionName,\n  sender\n}) {\n  const {\n    code,\n    data,\n    message,\n    shortMessage\n  } = err instanceof RawContractError ? err : err instanceof BaseError ? err.walk(err => 'data' in err) || err.walk() : {};\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError) return new ContractFunctionZeroDataError({\n      functionName\n    });\n    if ([EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) && (data || message || shortMessage)) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message: shortMessage ?? message\n      });\n    }\n    return err;\n  })();\n  return new ContractFunctionExecutionError(cause, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender\n  });\n}\n//# sourceMappingURL=getContractError.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}