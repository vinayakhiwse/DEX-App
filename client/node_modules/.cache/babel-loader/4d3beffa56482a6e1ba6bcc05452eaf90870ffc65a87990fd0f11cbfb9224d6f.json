{"ast":null,"code":"\"use client\";\n\n// src/tab-panel.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useTabPanel } from \"@react-aria/tabs\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TabPanel = forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n    as,\n    state,\n    className,\n    slots,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const {\n    tabPanelProps\n  } = useTabPanel(props, state, domRef);\n  const {\n    focusProps,\n    isFocused,\n    isFocusVisible\n  } = useFocusRing();\n  const selectedItem = state.selectedItem;\n  const content = (_a = selectedItem == null ? void 0 : selectedItem.props) == null ? void 0 : _a.children;\n  const tabPanelStyles = clsx(classNames == null ? void 0 : classNames.panel, className, (_b = selectedItem == null ? void 0 : selectedItem.props) == null ? void 0 : _b.className);\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */jsx(Component, {\n    ref: domRef,\n    \"data-focus\": isFocused,\n    \"data-focus-visible\": isFocusVisible,\n    ...mergeProps(tabPanelProps, focusProps, otherProps),\n    className: (_c = slots.panel) == null ? void 0 : _c.call(slots, {\n      class: tabPanelStyles\n    }),\n    \"data-slot\": \"panel\",\n    children: content\n  });\n});\nTabPanel.displayName = \"NextUI.TabPanel\";\nvar tab_panel_default = TabPanel;\nexport { tab_panel_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}