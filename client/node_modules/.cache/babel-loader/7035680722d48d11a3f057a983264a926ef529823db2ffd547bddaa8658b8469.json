{"ast":null,"code":"import { compute as e } from \"compute-scroll-into-view\";\nconst o = e => !1 === e ? {\n  block: \"end\",\n  inline: \"nearest\"\n} : (e => e === Object(e) && 0 !== Object.keys(e).length)(e) ? e : {\n  block: \"start\",\n  inline: \"nearest\"\n};\nfunction t(t, n) {\n  if (!t.isConnected || !(e => {\n    let o = e;\n    for (; o && o.parentNode;) {\n      if (o.parentNode === document) return !0;\n      o = o.parentNode instanceof ShadowRoot ? o.parentNode.host : o.parentNode;\n    }\n    return !1;\n  })(t)) return;\n  if ((e => \"object\" == typeof e && \"function\" == typeof e.behavior)(n)) return n.behavior(e(t, n));\n  const r = \"boolean\" == typeof n || null == n ? void 0 : n.behavior;\n  for (const {\n    el: i,\n    top: a,\n    left: l\n  } of e(t, o(n))) i.scroll({\n    top: a,\n    left: l,\n    behavior: r\n  });\n}\nexport { t as default }; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}