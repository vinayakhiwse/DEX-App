{"ast":null,"code":"// src/use-spinner.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { spinner } from \"@nextui-org/theme\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useSpinner(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, spinner.variantKeys);\n  const {\n    children,\n    className,\n    classNames,\n    label: labelProp,\n    ...otherProps\n  } = props;\n  const slots = useMemo(() => spinner({\n    ...variantProps\n  }), [...Object.values(variantProps)]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const label = labelProp || children;\n  const ariaLabel = useMemo(() => {\n    if (label && typeof label === \"string\") {\n      return label;\n    }\n    return !otherProps[\"aria-label\"] ? \"Loading\" : \"\";\n  }, [children, label, otherProps[\"aria-label\"]]);\n  const getSpinnerProps = useCallback(() => ({\n    \"aria-label\": ariaLabel,\n    className: slots.base({\n      class: baseStyles\n    }),\n    ...otherProps\n  }), [ariaLabel, slots, baseStyles, otherProps]);\n  return {\n    label,\n    slots,\n    classNames,\n    getSpinnerProps\n  };\n}\nexport { useSpinner };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}