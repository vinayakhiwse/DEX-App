{"ast":null,"code":"\"use client\";\n\nimport { useInput } from \"./chunk-JECUHD2P.mjs\";\n\n// src/input.tsx\nimport { CloseFilledIcon } from \"@nextui-org/shared-icons\";\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Input = forwardRef((props, ref) => {\n  const {\n    Component,\n    label,\n    description,\n    isClearable,\n    startContent,\n    endContent,\n    labelPlacement,\n    hasPlaceholder,\n    hasHelper,\n    isLabelOutside,\n    isLabelOutsideAsPlaceholder,\n    shouldLabelBeOutside,\n    errorMessage,\n    getBaseProps,\n    getLabelProps,\n    getInputProps,\n    getInnerWrapperProps,\n    getInputWrapperProps,\n    getMainWrapperProps,\n    getHelperWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps,\n    getClearButtonProps\n  } = useInput({\n    ...props,\n    ref\n  });\n  const labelContent = label ? /* @__PURE__ */jsx(\"label\", {\n    ...getLabelProps(),\n    children: label\n  }) : null;\n  const end = useMemo(() => {\n    if (isClearable) {\n      return /* @__PURE__ */jsx(\"span\", {\n        ...getClearButtonProps(),\n        children: endContent || /* @__PURE__ */jsx(CloseFilledIcon, {})\n      });\n    }\n    return endContent;\n  }, [isClearable, getClearButtonProps]);\n  const helperWrapper = useMemo(() => {\n    if (!hasHelper) return null;\n    return /* @__PURE__ */jsx(\"div\", {\n      ...getHelperWrapperProps(),\n      children: errorMessage ? /* @__PURE__ */jsx(\"div\", {\n        ...getErrorMessageProps(),\n        children: errorMessage\n      }) : description ? /* @__PURE__ */jsx(\"div\", {\n        ...getDescriptionProps(),\n        children: description\n      }) : null\n    });\n  }, [hasHelper, errorMessage, description, getHelperWrapperProps, getErrorMessageProps, getDescriptionProps]);\n  const innerWrapper = useMemo(() => {\n    if (startContent || end) {\n      return /* @__PURE__ */jsxs(\"div\", {\n        ...getInnerWrapperProps(),\n        children: [startContent, /* @__PURE__ */jsx(\"input\", {\n          ...getInputProps()\n        }), end]\n      });\n    }\n    return /* @__PURE__ */jsx(\"input\", {\n      ...getInputProps()\n    });\n  }, [startContent, end, getInputProps, getInnerWrapperProps]);\n  const mainWrapper = useMemo(() => {\n    if (shouldLabelBeOutside) {\n      return /* @__PURE__ */jsxs(\"div\", {\n        ...getMainWrapperProps(),\n        children: [/* @__PURE__ */jsxs(\"div\", {\n          ...getInputWrapperProps(),\n          children: [isLabelOutsideAsPlaceholder ? labelContent : null, innerWrapper]\n        }), helperWrapper]\n      });\n    }\n    return /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsxs(\"div\", {\n        ...getInputWrapperProps(),\n        children: [labelContent, innerWrapper]\n      }), helperWrapper]\n    });\n  }, [labelPlacement, helperWrapper, shouldLabelBeOutside, isLabelOutsideAsPlaceholder, hasPlaceholder, labelContent, innerWrapper, errorMessage, description, getMainWrapperProps, getInputWrapperProps, getErrorMessageProps, getDescriptionProps]);\n  return /* @__PURE__ */jsxs(Component, {\n    ...getBaseProps(),\n    children: [isLabelOutside ? labelContent : null, mainWrapper]\n  });\n});\nInput.displayName = \"NextUI.Input\";\nvar input_default = Input;\nexport { input_default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}