{"ast":null,"code":"var _jsxFileName = \"/home/pc/Downloads/New-Dex2/New-Dex/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { EthereumClient, w3mConnectors, w3mProvider } from \"@web3modal/ethereum\";\nimport { Web3Modal } from \"@web3modal/react\";\nimport { configureChains, createConfig, WagmiConfig } from \"wagmi\";\nimport { arbitrum, mainnet, polygon } from \"wagmi/chains\";\n//import { alchemyProvider } from \"wagmi/providers/alchemy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chains = [arbitrum, mainnet, polygon];\nconst projectId = \"a5ad2e1e12b4cb00a9f020f512ca9068\";\nconst {\n  publicClient\n} = configureChains(chains, [w3mProvider({\n  projectId\n})]);\nconst wagmiConfig = createConfig({\n  autoConnect: true,\n  connectors: w3mConnectors({\n    projectId,\n    chains\n  }),\n  publicClient\n});\nconst ethereumClient = new EthereumClient(wagmiConfig, chains);\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(WagmiConfig, {\n    config: wagmiConfig,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Web3Modal, {\n    projectId: projectId,\n    ethereumClient: ethereumClient\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","EthereumClient","w3mConnectors","w3mProvider","Web3Modal","configureChains","createConfig","WagmiConfig","arbitrum","mainnet","polygon","jsxDEV","_jsxDEV","chains","projectId","publicClient","wagmiConfig","autoConnect","connectors","ethereumClient","root","createRoot","document","getElementById","render","StrictMode","children","config","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/pc/Downloads/New-Dex2/New-Dex/client/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport {\n  EthereumClient,\n  w3mConnectors,\n  w3mProvider,\n} from \"@web3modal/ethereum\";\nimport { Web3Modal } from \"@web3modal/react\";\nimport { configureChains, createConfig, WagmiConfig } from \"wagmi\";\nimport { arbitrum, mainnet, polygon } from \"wagmi/chains\";\n//import { alchemyProvider } from \"wagmi/providers/alchemy\";\n\nconst chains = [arbitrum, mainnet, polygon];\nconst projectId = \"a5ad2e1e12b4cb00a9f020f512ca9068\";\n\nconst { publicClient } = configureChains(chains, [w3mProvider({ projectId })]);\nconst wagmiConfig = createConfig({\n  autoConnect: true,\n  connectors: w3mConnectors({ projectId, chains }),\n  publicClient,\n});\nconst ethereumClient = new EthereumClient(wagmiConfig, chains);\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <WagmiConfig config={wagmiConfig}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </WagmiConfig>\n    <Web3Modal projectId={projectId} ethereumClient={ethereumClient} />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAEvB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SACEC,cAAc,EACdC,aAAa,EACbC,WAAW,QACN,qBAAqB;AAC5B,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,EAAEC,YAAY,EAAEC,WAAW,QAAQ,OAAO;AAClE,SAASC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,QAAQ,cAAc;AACzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAG,CAACL,QAAQ,EAAEC,OAAO,EAAEC,OAAO,CAAC;AAC3C,MAAMI,SAAS,GAAG,kCAAkC;AAEpD,MAAM;EAAEC;AAAa,CAAC,GAAGV,eAAe,CAACQ,MAAM,EAAE,CAACV,WAAW,CAAC;EAAEW;AAAU,CAAC,CAAC,CAAC,CAAC;AAC9E,MAAME,WAAW,GAAGV,YAAY,CAAC;EAC/BW,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAEhB,aAAa,CAAC;IAAEY,SAAS;IAAED;EAAO,CAAC,CAAC;EAChDE;AACF,CAAC,CAAC;AACF,MAAMI,cAAc,GAAG,IAAIlB,cAAc,CAACe,WAAW,EAAEH,MAAM,CAAC;AAE9D,MAAMO,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTZ,OAAA,CAACf,KAAK,CAAC4B,UAAU;EAAAC,QAAA,gBACfd,OAAA,CAACL,WAAW;IAACoB,MAAM,EAAEX,WAAY;IAAAU,QAAA,eAC/Bd,OAAA,CAACZ,aAAa;MAAA0B,QAAA,eACZd,OAAA,CAACb,GAAG;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,eACdnB,OAAA,CAACR,SAAS;IAACU,SAAS,EAAEA,SAAU;IAACK,cAAc,EAAEA;EAAe;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACnD,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}