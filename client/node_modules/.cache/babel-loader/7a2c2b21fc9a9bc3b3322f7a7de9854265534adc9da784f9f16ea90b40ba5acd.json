{"ast":null,"code":"import e, { useEffect as r, useRef as t, useMemo as o, useState as n } from \"react\";\nimport l from \"../utils/with-defaults\";\nimport i from \"../utils/css-transition\";\nimport { isChildElement as s } from \"../utils/collections\";\nimport c from \"./modal-close-button\";\nimport { KeyCode as a } from \"../use-keyboard\";\nimport { StyledModal as u, StyledModalHideTab as m } from \"./modal.styles\";\nimport d from \"../utils/clsx\";\nimport { jsx as f } from \"react/jsx-runtime\";\nimport { jsxs as b } from \"react/jsx-runtime\";\nimport { Fragment as p } from \"react/jsx-runtime\";\nconst x = \"nextui-modal\",\n  h = ({\n    className: e,\n    children: l,\n    visible: h,\n    fullScreen: $,\n    closeButton: T,\n    rebound: v,\n    animated: j,\n    onCloseButtonClick: w,\n    scroll: y,\n    ...N\n  }) => {\n    const k = t(null),\n      C = t(null),\n      g = t(null),\n      [B, I] = n(!1);\n    r(() => {\n      const e = setTimeout(() => {\n        I(!0), clearTimeout(e);\n      }, 300);\n      return () => clearTimeout(e);\n    }, []), r(() => {\n      if (!h) return;\n      const e = document.activeElement;\n      s(k.current, e) || C.current && C.current.focus();\n    }, [h]);\n    const S = e => {\n        const r = e.keyCode === a.Tab;\n        if (!h || !r) return;\n        const t = document.activeElement;\n        e.shiftKey ? t === C.current && g.current && g.current.focus() : t === g.current && C.current && C.current.focus();\n      },\n      E = () => {\n        w && w();\n      },\n      K = o(() => h ? \"open\" : \"closed\", [h]),\n      D = o(() => b(u, {\n        role: \"dialog\",\n        tabIndex: -1,\n        \"aria-modal\": h,\n        ref: k,\n        \"data-state\": K,\n        fullScreen: $,\n        scroll: y,\n        closeButton: T,\n        className: d(x, `${x}--${K}`, {\n          [`${x}-fullscreen`]: $,\n          [`${x}-with-close-button`]: T,\n          [`${x}-rebound`]: v,\n          [`${x}-rendered`]: B\n        }, e),\n        ...N,\n        onKeyDown: S,\n        children: [f(m, {\n          role: \"button\",\n          tabIndex: 0,\n          className: `${x}-hide-tab`,\n          \"aria-hidden\": \"true\",\n          ref: C\n        }), T && f(c, {\n          onClick: E\n        }), l, f(m, {\n          role: \"button\",\n          tabIndex: 0,\n          className: `${x}-hide-tab`,\n          \"aria-hidden\": \"true\",\n          ref: g\n        })]\n      }), [v, l]);\n    return f(p, {\n      children: j ? f(i, {\n        name: `${x}-wrapper`,\n        visible: h,\n        enterTime: 20,\n        leaveTime: 20,\n        clearTime: 300,\n        children: D\n      }) : h ? D : null\n    });\n  };\nh.toString = () => \".nextui-modal-wrapper\";\nexport default l(h, {\n  className: \"\",\n  visible: !1,\n  rebound: !1\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}