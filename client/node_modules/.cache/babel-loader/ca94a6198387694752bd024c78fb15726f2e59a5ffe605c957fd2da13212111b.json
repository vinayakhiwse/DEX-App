{"ast":null,"code":"import e from \"react\";\nimport { useModal as o, useOverlay as s, DismissButton as r } from \"@react-aria/overlays\";\nimport { useDialog as i } from \"@react-aria/dialog\";\nimport { FocusScope as t, useFocusRing as n } from \"@react-aria/focus\";\nimport { mergeProps as a } from \"@react-aria/utils\";\nimport l from \"../utils/css-transition\";\nimport { __DEV__ as m } from \"../utils/assertion\";\nimport { mergeRefs as p } from \"../utils/refs\";\nimport { StyledPopoverContentContainer as c, StyledPopoverContent as d } from \"./popover.styles\";\nimport { usePopoverContext as u } from \"./popover-context\";\nimport { getTransformOrigin as f } from \"./utils\";\nimport b from \"../utils/clsx\";\nimport { jsx as h } from \"react/jsx-runtime\";\nimport { jsxs as x } from \"react/jsx-runtime\";\nimport { Fragment as v } from \"react/jsx-runtime\";\nconst O = e.forwardRef((e, m) => {\n  const {\n      children: O,\n      as: g,\n      css: D,\n      className: y,\n      ...C\n    } = e,\n    {\n      state: P,\n      placement: j,\n      overlayRef: F,\n      disableAnimation: N,\n      disableShadow: B,\n      shouldCloseOnBlur: E,\n      isDismissable: w,\n      isKeyboardDismissDisabled: I,\n      shouldCloseOnInteractOutside: S,\n      getPopoverProps: T,\n      isBordered: K,\n      borderWeight: R,\n      onClose: V,\n      onEntered: W,\n      onExited: A\n    } = u(),\n    U = f(j),\n    {\n      modalProps: k\n    } = o({\n      isDisabled: !0\n    }),\n    {\n      dialogProps: q\n    } = i({\n      role: \"dialog\"\n    }, F),\n    {\n      overlayProps: z\n    } = s({\n      onClose: V,\n      isOpen: P.isOpen,\n      isDismissable: w && P.isOpen,\n      shouldCloseOnBlur: E,\n      isKeyboardDismissDisabled: I,\n      shouldCloseOnInteractOutside: S\n    }, F),\n    G = a({\n      isBordered: K,\n      disableShadow: B,\n      borderWeight: R\n    }, C),\n    {\n      isFocusVisible: H,\n      focusProps: J\n    } = n(),\n    L = x(c, {\n      ref: p(F, m),\n      ...T(a(z, k, q, J, G)),\n      className: b(\"nextui-popover-content-container\", y),\n      isFocusVisible: H,\n      as: g,\n      css: {\n        transformOrigin: U,\n        ...D\n      },\n      children: [h(r, {\n        onDismiss: V\n      }), h(d, {\n        className: \"nextui-popover-content\",\n        children: O\n      }), h(r, {\n        onDismiss: V\n      })]\n    });\n  return h(v, {\n    children: N ? P.isOpen ? h(t, {\n      restoreFocus: !0,\n      children: L\n    }) : null : h(t, {\n      restoreFocus: !0,\n      children: h(l, {\n        visible: P.isOpen,\n        name: \"nextui-popover-content\",\n        enterTime: 20,\n        leaveTime: 60,\n        clearTime: 300,\n        onExited: A,\n        onEntered: W,\n        children: L\n      })\n    })\n  });\n});\nm && (O.displayName = \"NextUI.PopoverContent\"), O.toString = () => \".nextui-popover-content\";\nexport default O;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}