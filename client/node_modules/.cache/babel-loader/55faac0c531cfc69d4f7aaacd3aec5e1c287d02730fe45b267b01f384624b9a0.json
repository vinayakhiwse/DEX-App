{"ast":null,"code":"// src/index.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaLink(props, ref) {\n  let {\n    elementType = \"a\",\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onClick: deprecatedOnClick,\n    isDisabled,\n    ...otherProps\n  } = props;\n  let linkProps = {};\n  if (elementType !== \"a\") {\n    linkProps = {\n      role: \"link\",\n      tabIndex: !isDisabled ? 0 : void 0\n    };\n  }\n  let {\n    focusableProps\n  } = useFocusable(props, ref);\n  let {\n    pressProps,\n    isPressed\n  } = usePress({\n    onPress,\n    onPressStart,\n    onPressEnd,\n    isDisabled,\n    ref\n  });\n  let domProps = filterDOMProps(otherProps, {\n    labelable: true\n  });\n  let interactionHandlers = mergeProps(focusableProps, pressProps);\n  return {\n    isPressed,\n    linkProps: mergeProps(domProps, {\n      ...interactionHandlers,\n      ...linkProps,\n      \"aria-disabled\": isDisabled || void 0,\n      \"aria-current\": props[\"aria-current\"],\n      onClick: e => {\n        var _a;\n        (_a = pressProps.onClick) == null ? void 0 : _a.call(pressProps, e);\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n        }\n      }\n    })\n  };\n}\nexport { useAriaLink };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}